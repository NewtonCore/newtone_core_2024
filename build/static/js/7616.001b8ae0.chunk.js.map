{"version":3,"file":"static/js/7616.001b8ae0.chunk.js","mappings":"+KA6BA,IAzBA,SAAoBA,GAA2C,IAADC,EAAAD,EAAvCE,KAAAA,OAAI,IAAAD,EAAG,GAAEA,EAAAE,EAAAH,EAAEI,QAAAA,OAAO,IAAAD,EAAG,CAAC,EAACA,EAAAE,EAAAL,EAACM,SAAAA,OAAQ,IAAAD,EAAC,GAAEA,EAGxD,OACEE,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,EAAG,CAACC,GAAI,CAAEC,OAAQ,IAAKC,MAAO,QAASJ,UACtCD,EAAAA,EAAAA,KAACM,EAAAA,EAAQ,CACPC,sBAAuB,kBAAM,GAAG,EAEhCC,UAAW,IACXb,KAAMA,EACNE,QAASA,EACTE,SAAUA,EACVU,mBAAoB,CAACV,GACrBW,yBAAuB,EACvBC,uBAAqB,EACrBC,wBAAsB,EACtBC,qBAAsB,CAAEC,eAAe,QAMjD,C,gDCyBA,IAlDA,SAA+BrB,GAA0C,IAAvCsB,EAAItB,EAAJsB,KAAMC,EAAQvB,EAARuB,SAAUC,EAAMxB,EAANwB,OAAQC,EAAUzB,EAAVyB,WACxD,OACElB,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,OAAK,aAAW,0BAAyBC,UACvCkB,EAAAA,EAAAA,MAAA,MAAIC,UAAU,yCAAwCnB,SAAA,EACpDD,EAAAA,EAAAA,KAAA,MACEoB,eACeC,IAAbL,GACiB,OAAbA,EACE,qBAEF,YACLf,UAEDD,EAAAA,EAAAA,KAAA,UACEsB,QAASJ,EACTE,UAAU,YACVG,KAAK,IACLC,SAAS,KACT,gBAAc,OAAMvB,SACrB,gBAKHD,EAAAA,EAAAA,KAAA,MACEoB,eACWC,IAATN,GACa,OAATA,EACE,qBAEF,YACLd,UAEDD,EAAAA,EAAAA,KAAA,UACEsB,QAASL,EACTG,UAAU,YACVG,KAAK,IACLC,SAAS,KACT,gBAAc,OAAMvB,SACrB,iBAQb,C,kSC8EA,MArHA,SAA2BR,GAA0C,IAAvCgC,EAAahC,EAAbgC,cAAeC,EAAmBjC,EAAnBiC,oBAC3CC,GAAwBC,EAAAA,EAAAA,eACJP,IAAlBI,EACIA,EACA,CACEI,IAAK,GACLC,WAAY,GACZC,MAAO,GACPC,KAAM,GACNC,QAAS,KAEhBC,GAAAC,EAAAA,EAAAA,GAAAR,EAAA,GAVMS,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAYdI,EAAmB,SAACC,GAGxBF,GAAOG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACJJ,GAAI,IACPL,MAAOQ,EAAEE,OAAOC,aAAa,WAEjC,EAEMC,EAAoB,SAACJ,GACzB,IAAAK,EAAwBL,EAAEE,OAAlBT,EAAIY,EAAJZ,KAAMa,EAAKD,EAALC,MAIdR,GAAOG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACJJ,GAAI,IAAAU,EAAAA,EAAAA,GAAA,GACNd,EAAOa,IAEZ,EAsBA,OACE1B,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAA9C,SAAA,EACED,EAAAA,EAAAA,KAACgD,EAAAA,EAAK,CACJC,IAAKb,EAAKP,IACVqB,OAAQd,EAAKN,WACbqB,QAASf,EAAKL,MACdC,KAAMI,EAAKJ,KACXoB,OAAQhB,EAAKH,WAEfd,EAAAA,EAAAA,MAACkC,EAAAA,QAAM,CAACjC,UAAU,OAAMnB,SAAA,EACtBD,EAAAA,EAAAA,KAACsD,EAAAA,QAAM,CAACC,KAAM,EAAOtD,UACnBD,EAAAA,EAAAA,KAACwD,EAAAA,EAAY,CACXC,MAAM,SACNC,YAAY,cACZC,MAAM,cACNC,KAAK,MACLf,MAAOT,EAAKH,QACZD,KAAK,UACL6B,aAAclB,EACdmB,cAAexB,OAGnBtC,EAAAA,EAAAA,KAACsD,EAAAA,QAAM,CAACC,KAAM,EAAOtD,UACnBD,EAAAA,EAAAA,KAACwD,EAAAA,EAAY,CACXC,MAAM,OACNC,YAAY,eACZC,MAAM,eACNC,KAAK,OACLf,MAAOT,EAAKJ,KACZA,KAAK,OACL6B,aAAclB,EACdmB,cAAexB,OAGnBtC,EAAAA,EAAAA,KAACsD,EAAAA,QAAM,CAACC,KAAM,EAAOtD,UACnBD,EAAAA,EAAAA,KAACwD,EAAAA,EAAY,CACXC,MAAM,SACNC,YAAY,SACZC,MAAM,SACNC,KAAK,OACLf,MAAOT,EAAKN,WACZE,KAAK,aACL6B,aAAclB,EACdmB,cAAexB,OAGnBtC,EAAAA,EAAAA,KAACsD,EAAAA,QAAM,CAACC,KAAM,EAAOtD,UACnBD,EAAAA,EAAAA,KAACwD,EAAAA,EAAY,CACXC,MAAM,MACNC,YAAY,MACZC,MAAM,MACNC,KAAK,OACLf,MAAOT,EAAKP,IACZG,KAAK,MACL6B,aAAclB,EACdmB,cAAexB,UAIrBtC,EAAAA,EAAAA,KAAC+D,EAAAA,EAAS,CAACzC,QAAS,SAACiB,GAAC,OA/EP,SAACA,GAElB,OADAA,EAAEyB,iBACmB,KAAjB5B,EAAKH,SACPgC,EAAAA,GAAAA,MAAY,0BAA2B,CAAEC,UAAW,MAE7C,GAEe,KAApB9B,EAAKN,YACPmC,EAAAA,GAAAA,MAAY,0BAA2B,CAAEC,UAAW,MAE7C,GAEQ,KAAb9B,EAAKP,KACPoC,EAAAA,GAAAA,MAAY,kBAAmB,CAAEC,UAAW,MAErC,QAEPxC,EAAoBU,EAAKG,EAE7B,CA4D+B4B,CAAW5B,EAAE,EAAEoB,MAAM,WAGtD,ECtFA,MA/BA,WACE,IAAMS,GAAWC,EAAAA,EAAAA,MAEX3C,EAAsB,SAACU,EAAKG,GAChCA,EAAEyB,iBAEF,IAAK/B,EAAWG,EAAXH,QAIL,KAFsBqC,EAAAA,EAAAA,IAAUC,SAAStC,IAIvC,OADNgC,EAAAA,GAAAA,QAAc,qCACD,EAEPG,GAASI,EAAAA,EAAAA,IAAiBpC,GAI9B,EAEA,OACEpC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,QAAMyE,SAAU,SAAClC,GAAC,OAAGb,EAAoBa,EAAE,EAACtC,UAE1CD,EAAAA,EAAAA,KAAC0E,EAAkB,CAAChD,oBAAqBA,OAKjD,E,mGC6HA,MAvJA,SAA0BjC,GAAY,IAAT2C,EAAI3C,EAAJ2C,KACrBuC,GAAWC,EAAAA,EAAAA,MACX/E,EAAwB,CAC5B,CACEgF,MAAO,OACPC,WAAY,OACZC,SAAU,IACVC,WAAY,SAACC,GACX,OACE9D,EAAAA,EAAAA,MAAA,OAAAlB,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACkF,EAAAA,EAAO,CACNC,QAC4B9D,IAA1B4D,EAAOG,IAAIC,YACe,OAA1BJ,EAAOG,IAAIC,YACe,KAA1BJ,EAAOG,IAAIC,WAAiB,IAAAC,OACpBC,EAAAA,GAAAA,OAAmBD,OAAGC,EAAAA,GAAAA,YAAwBD,OAAGL,EAAOG,IAAII,UAChE,IACLvF,cAE0BoB,IAA1B4D,EAAOG,IAAIC,YACc,OAA1BJ,EAAOG,IAAIC,YACe,KAA1BJ,EAAOG,IAAIC,WACPJ,EAAOG,IAAIC,WACX,oCAGRrF,EAAAA,EAAAA,KAAA,QAAMoB,UAAU,aAAYnB,cACQoB,IAAjC4D,EAAOG,IAAIK,mBACqB,OAAjCR,EAAOG,IAAIK,mBACsB,KAAjCR,EAAOG,IAAIK,kBACPR,EAAOG,IAAIK,kBACX,QAIZ,GAGF,CACEZ,MAAO,SACPC,WAAY,SACZC,SAAU,IAEVC,WAAY,SAACC,GACX,OACE9D,EAAAA,EAAAA,MAAA,OAAAlB,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKgF,EAAOG,IAAIM,SAEO,aAAtBT,EAAOG,IAAIM,SACVvE,EAAAA,EAAAA,MAACwE,EAAAA,EAAe,CACdC,gBAAiBC,EAAAA,GACjBC,MAAM,cACNxE,QAAS,kBACPqD,EAAS,IAADW,OACFC,EAAAA,GAAAA,OAAmBD,OAAGC,EAAAA,GAAAA,sBAAkCD,OAAGL,EAAOG,IAAIW,IAC3E,EACF9F,SAAA,EAEDD,EAAAA,EAAAA,KAACgG,EAAAA,IAAK,IAAG,qBAKnB,GAGF,CACEnB,MAAO,gBACPC,WAAY,gBACZC,SAAU,IACVC,WAAY,SAACC,GACX,OAAOjF,EAAAA,EAAAA,KAAA+C,EAAAA,SAAA,CAAA9C,cACuBoB,IAA7B4D,EAAOG,IAAIa,eACuB,OAA7BhB,EAAOG,IAAIa,eACkB,KAA7BhB,EAAOG,IAAIa,cACPhB,EAAOG,IAAIa,cACX,KAGZ,GAGF,CACEpB,MAAO,UACPC,WAAY,UACZC,SAAU,IACVC,WAAY,SAACC,GACX,OAAOjF,EAAAA,EAAAA,KAAA+C,EAAAA,SAAA,CAAA9C,cACiBoB,IAAvB4D,EAAOG,IAAIc,SACiB,OAAvBjB,EAAOG,IAAIc,SACY,KAAvBjB,EAAOG,IAAIc,QACPjB,EAAOG,IAAIc,QACX,KAGZ,GAGF,CACErB,MAAO,cACPC,WAAY,cACZC,SAAU,IACVC,WAAY,SAACC,GACX,OACEjF,EAAAA,EAAAA,KAAA,OAAAC,cAE4BoB,IAAxB4D,EAAOG,IAAII,UACa,OAAxBP,EAAOG,IAAII,UACa,KAAxBP,EAAOG,IAAII,UAEXxF,EAAAA,EAAAA,KAAC2F,EAAAA,EAAe,CAChBC,gBAAiBC,EAAAA,GACjBC,MAAM,cACNK,QAAQ,EACRC,SAAQ,IAAAd,OAAMC,EAAAA,GAAAA,OAAmBD,OAAGC,EAAAA,GAAAA,YAAwBD,OAAGL,EAAOG,IAAII,UAAWvF,SACtF,iBAICD,EAAAA,EAAAA,KAAC2F,EAAAA,EAAe,CAChBC,gBAAiBC,EAAAA,GACjBC,MAAM,cACNO,SAAS,EAAKpG,SACf,wBAQP,GAGF,CACE4E,MAAO,aACPC,WAAY,aACZC,SAAU,IACVC,WAAY,SAACC,GACX,OAAOjF,EAAAA,EAAAA,KAAA,OAAAC,UAAMqG,EAAAA,EAAAA,IAAWrB,EAAOG,IAAImB,aACrC,IAGJ,OACEvG,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACwG,EAAAA,EAAW,CAAC7G,KAAMyC,EAAMvC,QAASA,KAGxC,ECxHA,MAnCA,SAAqBJ,GAA6C,IAA1C2C,EAAI3C,EAAJ2C,KAAKrB,EAAItB,EAAJsB,KAAKC,EAAQvB,EAARuB,SAASC,EAAMxB,EAANwB,OAAQC,EAAUzB,EAAVyB,WAEjD,OACElB,EAAAA,EAAAA,KAAA,OAAAC,cAEYoB,IAATe,IACCpC,EAAAA,EAAAA,KAAA+C,EAAAA,SAAA,CAAA9C,SACmB,IAAhBmC,EAAKqE,QACJzG,EAAAA,EAAAA,KAAA+C,EAAAA,SAAA,CAAA9C,UACED,EAAAA,EAAAA,KAAC0G,EAAAA,EAAS,CACRC,YAAY,YACZP,SAAU,IAAMb,EAAAA,GAAAA,MAAsBA,EAAAA,GAAAA,QAEtCqB,WAAW,EACXC,MAAM,mBACNC,QAAQ,+EAIZ3F,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAA9C,SAAA,EACED,EAAAA,EAAAA,KAAC+G,EAAiB,CAAC3E,KAAMA,KACzBpC,EAAAA,EAAAA,KAACgH,EAAAA,EAAsB,CACrBhG,SAAUA,EACVD,KAAMA,EACNG,WAAYA,EACZD,OAAQA,UAQxB,E,WCMA,MArCA,SAAqBxB,GAA6C,IAA1C2C,EAAI3C,EAAJ2C,KAAKrB,EAAItB,EAAJsB,KAAKC,EAAQvB,EAARuB,SAASC,EAAMxB,EAANwB,OAAQC,EAAUzB,EAAVyB,WAEjD,OACElB,EAAAA,EAAAA,KAAA,OAAAC,cAEYoB,IAATe,IACCpC,EAAAA,EAAAA,KAAA+C,EAAAA,SAAA,CAAA9C,SACmB,IAAhBmC,EAAKqE,QACJzG,EAAAA,EAAAA,KAAA+C,EAAAA,SAAA,CAAA9C,UACED,EAAAA,EAAAA,KAAC0G,EAAAA,EAAS,CACRC,YAAY,YACZP,SAAU,IAAMb,EAAAA,GAAAA,MAAsBA,EAAAA,GAAAA,QAEtCqB,WAAW,EACXC,MAAM,mBACNC,QAAQ,0CAIZ3F,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAA9C,SAAA,EAEAD,EAAAA,EAAAA,KAACiH,EAAAA,QAAkB,CAACC,gBAAgB,EAAMC,YAAa/E,KAErDpC,EAAAA,EAAAA,KAACgH,EAAAA,EAAsB,CACrBhG,SAAUA,EACVD,KAAMA,EACNG,WAAYA,EACZD,OAAQA,UAQxB,EC2FA,MAxHA,WACE,IAAMmD,GAAWC,EAAAA,EAAAA,MAEX+C,GAAaC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,UAAU,IAClDG,EAAsCH,EAAtCG,kBAAmBC,EAAmBJ,EAAnBI,gBAEbC,EAA0BF,EAAhCnF,KACMsF,EAAwBF,EAA9BpF,KAGSuF,EACfF,EADMG,QAA0CC,EAChDJ,EADyCK,MAGxBC,EACjBL,EADQE,QAAwCI,EAChDN,EADyCI,MAG3CnG,GAA4CC,EAAAA,EAAAA,UAAS,IAAGM,GAAAC,EAAAA,EAAAA,GAAAR,EAAA,GAAjDsG,EAAc/F,EAAA,GAAEgG,EAAiBhG,EAAA,GAExCzC,OACmB4B,IAAjBwG,EAA6BA,EAAe,CAAE9G,KAAM,KAAMC,SAAU,MAD9DD,EAAItB,EAAJsB,KAAMC,EAAQvB,EAARuB,SAGZmH,OAC+B9G,IAA/B2G,EAA2CA,EAA6B,CAAEjH,KAAM,KAAMC,SAAU,MADxFoH,EAAkBD,EAAlBC,mBAAoBC,EAAsBF,EAAtBE,wBAG9BC,EAAAA,EAAAA,YAAU,gBACyBjH,IAA7BsG,GACFO,GAAkBK,EAAAA,EAAAA,IAA0BZ,GAEhD,GAAG,CAACA,KAEJW,EAAAA,EAAAA,YAAU,WACRlE,GAASoE,EAAAA,EAAAA,MACX,GAAE,IAEF,IAAMC,EAAO,CACX,CACE1C,GAAI,EACJ2C,WACE1I,EAAAA,EAAAA,KAAC2I,EAAY,CACXzH,WAAY,kBACVkD,GACEwE,EAAAA,EAAAA,IAAqB,CACnBC,aAAsBxH,IAAbL,GAA0BA,IAEtC,EAEHC,OAAQ,kBACNmD,GACEwE,EAAAA,EAAAA,IAAqB,CACnBC,aAAsBxH,IAAbL,GAA0BA,IAEtC,EAEHD,KAAMA,EACNC,SAAUA,EACVoB,KAAM6F,EAAea,UAGzBjC,MAAO,yBAET,CACEd,GAAI,EACJ2C,WACE1I,EAAAA,EAAAA,KAAC+I,EAAY,CACX7H,WAAY,kBACVkD,GACEoE,EAAAA,EAAAA,IAAmB,CACjBK,aAAoCxH,IAA3BgH,GAAwCA,IAEpD,EAEHpH,OAAQ,kBACNmD,GACEoE,EAAAA,EAAAA,IAAmB,CACjBK,aAAgCxH,IAAvB+G,GAAoCA,IAEhD,EAEHrH,KAAMqH,EACNpH,SAAUqH,EACVjG,KAAM2F,IAGVlB,MAAO,yBAET,CACEd,GAAI,EACJ2C,WAAW1I,EAAAA,EAAAA,KAACgJ,EAAY,IACxBnC,MAAO,8BAGX,OACE7G,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACiJ,EAAAA,EAAa,CAACC,UAAU,UAAUC,qBAAiB9H,EAAUpB,UAC5DD,EAAAA,EAAAA,KAACoJ,EAAAA,EAAI,CACHC,iBAAkBZ,EAAK,GAAO,GAC9B1C,GAAG,mBACH3E,UAAU,OACVkI,SAAO,EAAArJ,SAGNwI,EAAKc,KAAI,SAACC,EAAKC,GACd,OACEzJ,EAAAA,EAAAA,KAAC0J,EAAAA,EAAG,CAEFC,MAAO,CAAE/D,gBAAiB,cAAcgE,QAAQ,GAChDC,SAAUL,EAAIzD,GACdc,MAAO2C,EAAI3C,MAAM5G,UAEjBD,EAAAA,EAAAA,KAAC8J,EAAAA,EAAU,CAAA7J,SAAEuJ,EAAId,aALZe,EAQX,SAMV,C","sources":["components/organisms/AppDataGrid/AppDataGrid.js","components/organisms/PaginationNextPrevious/PaginationNextPrevious.js","components/organisms/AppCreditCardInput/AppCreditCardInput.js","components/pages/company/CompanyHiredTalents/pagecomponents/CompanyDebit.js","components/pages/company/CompanyHiredTalents/pagecomponents/HiredTalentsTable.js","components/pages/company/CompanyHiredTalents/pagecomponents/HiredTalents.js","components/pages/company/CompanyHiredTalents/pagecomponents/SavedTalents.js","components/pages/company/CompanyHiredTalents/CompanyHiredTalents.js"],"sourcesContent":["import { DataGrid } from \"@mui/x-data-grid\";\nimport Box from \"@mui/material/Box\";\nimport React from \"react\";\n\nfunction AppDataGrid({ rows = [], columns = {},pageSize=10 }) {\n\n  \n  return (\n    <div>\n      <Box sx={{ height: 500, width: \"100%\" }}>\n        <DataGrid\n          getEstimatedRowHeight={() => 400}\n        // getRowHeight={() => 'auto'}\n          rowHeight={100}\n          rows={rows}\n          columns={columns}\n          pageSize={pageSize}\n          rowsPerPageOptions={[pageSize]}\n          disableSelectionOnClick\n          disableColumnSelector\n          disableDensitySelector\n          experimentalFeatures={{ newEditingApi: true }}\n          // onCellClick={e => console.log(e)}\n        />\n      </Box>\n    </div>\n  );\n}\n\nexport default AppDataGrid;\n","import React from \"react\";\n\nfunction PaginationNextPrevious({ next, previous, nextFn, previousFn }) {\n  return (\n    <div>\n      <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination justify-content-center mt-3\">\n          <li\n            className={\n              previous !== undefined\n                ? previous === null\n                  ? \"page-item disabled\"\n                  : \"page-item\"\n                : \"page-item\"\n            }\n          >\n            <button\n              onClick={previousFn}\n              className=\"page-link\"\n              href=\"#\"\n              tabIndex=\"-1\"\n              aria-disabled=\"true\"\n            >\n              Previous\n            </button>\n          </li>\n\n          <li\n            className={\n              next !== undefined\n                ? next === null\n                  ? \"page-item disabled\"\n                  : \"page-item\"\n                : \"page-item\"\n            }\n          >\n            <button\n              onClick={nextFn}\n              className=\"page-link\"\n              href=\"#\"\n              tabIndex=\"-1\"\n              aria-disabled=\"true\"\n            >\n              Next\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n}\n\nexport default PaginationNextPrevious;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport Cards from \"react-credit-cards\";\nimport \"react-credit-cards/es/styles-compiled.css\";\nimport { toast } from \"react-toastify\";\nimport AppButton from \"../../atoms/AppButton/AppButton\";\nimport AppCol from \"../AppCol/AppCol\";\nimport AppRow from \"../AppRow/AppRow\";\nimport AppTextField from \"../AppTextField/AppTextField\";\nimport \"./AppCreditCard.css\";\n\nfunction AppCreditCardInput({ defaultValues, handleSaveDebitInfo }) {\n  const [data, setData] = useState(\n    defaultValues !== undefined\n      ? defaultValues\n      : {\n          CVV: \"\",\n          expiryCode: \"\",\n          focus: \"\",\n          name: \"\",\n          cardNum: \"\",\n        }\n  );\n\n  const handleInputFocus = (e) => {\n    // this.setState({ focus: e.target.name });\n    // console.log(e.target.getAttribute('alias'))\n    setData({\n      ...data,\n      focus: e.target.getAttribute(\"alias\"),\n    });\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    // this.setState({ [name]: value });\n\n    setData({\n      ...data,\n      [name]: value,\n    });\n  };\n\n  const handleSave = (e) => {\n    e.preventDefault()\n    if (data.cardNum === \"\") {\n      toast.error(`Card number is required`, { autoClose: 6000 });\n\n      return 0;\n    }\n    if (data.expiryCode === \"\") {\n      toast.error(`Expiry Code is required`, { autoClose: 6000 });\n\n      return 0;\n    }\n    if (data.CVV === \"\") {\n      toast.error(`CVV is required`, { autoClose: 6000 });\n\n      return 0;\n    } else {\n      handleSaveDebitInfo(data,e);\n    }\n  };\n  return (\n    <>\n      <Cards\n        cvc={data.CVV}\n        expiry={data.expiryCode}\n        focused={data.focus}\n        name={data.name}\n        number={data.cardNum}\n      />\n      <AppRow className=\"gx-5\">\n        <AppCol size={12 / 4}>\n          <AppTextField\n            alias=\"number\"\n            placeholder=\"Card number\"\n            label=\"Card Number\"\n            type=\"tel\"\n            value={data.cardNum}\n            name=\"cardNum\"\n            handleChange={handleInputChange}\n            handleOnFocus={handleInputFocus}\n          ></AppTextField>\n        </AppCol>\n        <AppCol size={12 / 4}>\n          <AppTextField\n            alias=\"name\"\n            placeholder=\"Name on card\"\n            label=\"Name on card\"\n            type=\"text\"\n            value={data.name}\n            name=\"name\"\n            handleChange={handleInputChange}\n            handleOnFocus={handleInputFocus}\n          ></AppTextField>\n        </AppCol>\n        <AppCol size={12 / 4}>\n          <AppTextField\n            alias=\"expiry\"\n            placeholder=\"Expiry\"\n            label=\"Expiry\"\n            type=\"text\"\n            value={data.expiryCode}\n            name=\"expiryCode\"\n            handleChange={handleInputChange}\n            handleOnFocus={handleInputFocus}\n          ></AppTextField>\n        </AppCol>\n        <AppCol size={12 / 4}>\n          <AppTextField\n            alias=\"cvc\"\n            placeholder=\"CVV\"\n            label=\"CVV\"\n            type=\"text\"\n            value={data.CVV}\n            name=\"CVV\"\n            handleChange={handleInputChange}\n            handleOnFocus={handleInputFocus}\n          ></AppTextField>\n        </AppCol>\n      </AppRow>\n      <AppButton onClick={(e) => handleSave(e)} label=\"Save\"></AppButton>\n    </>\n  );\n}\n\nexport default AppCreditCardInput;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { SaveCompanyDebit } from \"../../../../../app-redux/features/companyDebitInfo/companyDebitSlice\";\nimport AppButton from \"../../../../atoms/AppButton/AppButton\";\nimport AppCreditCardInput from \"../../../../organisms/AppCreditCardInput/AppCreditCardInput\";\nimport { luhnCheck } from \"../../../../../constants/utils\";\nimport { toast } from \"react-toastify\";\n// import AppStripePayment from \"../../../../organisms/AppStripePayment/AppStripePayment\";\n\nfunction CompanyDebit() {\n  const dispatch = useDispatch();\n\n  const handleSaveDebitInfo = (data,e)=>{\n    e.preventDefault()\n\n    let {cardNum} = data\n\n    let check_luhn_card = luhnCheck(parseInt(cardNum))\n\n    if(!check_luhn_card){\ntoast.warning(\"The credit card number is invalid\")\n      return 0\n    }else{\n      dispatch(SaveCompanyDebit(data))\n\n    }\n\n  }\n\n  return (\n    <div>\n      <form onSubmit={(e)=>handleSaveDebitInfo(e)}>\n        {/* <AppStripePayment/> */}\n        <AppCreditCardInput handleSaveDebitInfo={handleSaveDebitInfo} />\n       \n      </form>\n    </div>\n  );\n}\n\nexport default CompanyDebit;\n","import React from \"react\";\nimport { GridColDef, GridValueGetterParams } from \"@mui/x-data-grid\";\n\nimport AppDataGrid from \"../../../../organisms/AppDataGrid/AppDataGrid\";\nimport { COMPANY_ROUTE } from \"../../../../../routes/RouteLinks\";\nimport { SECONDARY_LIGHT_COLOR } from \"../../../../../constants/AppColors\";\nimport SecondaryButton from \"../../../../atoms/AppButton/SecondaryButton\";\nimport { FormatDate } from \"../../../../../constants/utils\";\nimport AppLink from \"../../../../organisms/AppLink/AppLink\";\nimport { Money } from \"akar-icons\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction HiredTalentsTable({ data }) {\n  const navigate = useNavigate();\n  const columns: GridColDef[] = [\n    {\n      field: \"Name\",\n      headerName: \"Name\",\n      minWidth: 300,\n      renderCell: (params: GridValueGetterParams) => {\n        return (\n          <div>\n            <h6>\n              <AppLink\n                to={\n                  params.row.first_name !== undefined &&\n                  params.row.first_name !== null &&\n                  params.row.first_name !== \"\"\n                    ? `/${COMPANY_ROUTE.index}${COMPANY_ROUTE.viewTalent}${params.row.talentId}`\n                    : \"#\"\n                }\n              >\n                {params.row.first_name !== undefined &&\n                params.row.first_name !== null &&\n                params.row.first_name !== \"\"\n                  ? params.row.first_name\n                  : \"Talent may have been deleted\"}\n              </AppLink>\n            </h6>\n            <span className=\"text-muted\">\n              {params.row.current_job_title !== undefined &&\n              params.row.current_job_title !== null &&\n              params.row.current_job_title !== \"\"\n                ? params.row.current_job_title\n                : \"-\"}\n            </span>\n          </div>\n        );\n      },\n    },\n\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      minWidth: 250,\n\n      renderCell: (params: GridValueGetterParams) => {\n        return (\n          <div>\n            <h6>{params.row.status}</h6>\n\n            {params.row.status === \"accepted\" && (\n              <SecondaryButton\n                backgroundColor={SECONDARY_LIGHT_COLOR}\n                color=\"transparent\"\n                onClick={() =>\n                  navigate(\n                    `/${COMPANY_ROUTE.index}${COMPANY_ROUTE.makePaymentForTalent}${params.row.id}`\n                  )\n                }\n              >\n                <Money /> Make Payment\n              </SecondaryButton>\n            )}\n          </div>\n        );\n      },\n    },\n\n    {\n      field: \"qualification\",\n      headerName: \"Qualification\",\n      minWidth: 200,\n      renderCell: (params: GridValueGetterParams) => {\n        return <>\n        {params.row.qualification !== undefined &&\n              params.row.qualification !== null &&\n              params.row.qualification !== \"\"\n                ? params.row.qualification\n                : \"-\"}\n\n        </>;\n      },\n    },\n\n    {\n      field: \"address\",\n      headerName: \"Address\",\n      minWidth: 200,\n      renderCell: (params: GridValueGetterParams) => {\n        return <>\n        {params.row.address !== undefined &&\n              params.row.address !== null &&\n              params.row.address !== \"\"\n                ? params.row.address\n                : \"-\"}\n\n        </>;\n      },\n    },\n\n    {\n      field: \"view_talent\",\n      headerName: \"View Talent\",\n      minWidth: 200,\n      renderCell: (params: GridValueGetterParams) => {\n        return (\n          <div>\n            {\n              params.row.talentId !== undefined &&\n              params.row.talentId !== null &&\n              params.row.talentId !== \"\"? \n              \n              <SecondaryButton\n              backgroundColor={SECONDARY_LIGHT_COLOR}\n              color=\"transparent\"\n              isLink={true}\n              linkPath={`/${COMPANY_ROUTE.index}${COMPANY_ROUTE.viewTalent}${params.row.talentId}`}\n            >\n              View Talent\n            </SecondaryButton>\n              : \n              <SecondaryButton\n              backgroundColor={SECONDARY_LIGHT_COLOR}\n              color=\"transparent\"\n              loading={true}\n            >\n              Cannot View Talent\n            </SecondaryButton>\n            }\n            {/* {JSON.stringify(params.row.user.id)} */}\n           \n          </div>\n        );\n      },\n    },\n\n    {\n      field: \"created_at\",\n      headerName: \"Date Hired\",\n      minWidth: 200,\n      renderCell: (params: GridValueGetterParams) => {\n        return <div>{FormatDate(params.row.created_at)}</div>;\n      },\n    },\n  ];\n  return (\n    <div>\n      <AppDataGrid rows={data} columns={columns}></AppDataGrid>\n    </div>\n  );\n}\n\nexport default HiredTalentsTable;\n","import React from \"react\";\nimport { COMPANY_ROUTE } from \"../../../../../routes/RouteLinks\";\nimport EmptyData from \"../../../../organisms/EmptyData/EmptyData\";\nimport PaginationNextPrevious from \"../../../../organisms/PaginationNextPrevious/PaginationNextPrevious\";\nimport HiredTalentsTable from \"./HiredTalentsTable\";\n\nfunction HiredTalents({ data,next,previous,nextFn, previousFn }) {\n  \n  return (\n    <div>\n      {/* {JSON.stringify(data)} */}\n      {data !== undefined && (\n        <>\n          {data.length === 0 ? (\n            <>\n              <EmptyData\n                actionLabel=\"View Jobs\"\n                linkPath={\"/\" + COMPANY_ROUTE.index + COMPANY_ROUTE.my_jobs}\n                // navigation=\"#\"\n                hasAction={true}\n                title=\"No hired talents\"\n                message=\"You do not have any hired talents. You can hire in the 'view jobs' page\"\n              />\n            </>\n          ) : (\n            <>\n              <HiredTalentsTable data={data} />\n              <PaginationNextPrevious\n                previous={previous}\n                next={next}\n                previousFn={previousFn}\n                nextFn={nextFn}\n              />\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default HiredTalents;\n","import React from \"react\";\nimport { COMPANY_ROUTE } from \"../../../../../routes/RouteLinks\";\nimport EmptyData from \"../../../../organisms/EmptyData/EmptyData\";\nimport PaginationNextPrevious from \"../../../../organisms/PaginationNextPrevious/PaginationNextPrevious\";\nimport HiredTalentsTable from \"./HiredTalentsTable\";\nimport CompanyViewTalents from \"../../../applicant/MyJobStatus/CompanyViewTalents\";\n\n\nfunction SavedTalents({ data,next,previous,nextFn, previousFn }) {\n   \n  return (\n    <div>\n      {/* {JSON.stringify(data)} */}\n      {data !== undefined && (\n        <>\n          {data.length === 0 ? (\n            <>\n              <EmptyData\n                actionLabel=\"View Jobs\"\n                linkPath={\"/\" + COMPANY_ROUTE.index + COMPANY_ROUTE.my_jobs}\n                // navigation=\"#\"\n                hasAction={true}\n                title=\"No saved talents\"\n                message=\"You do not have any saved talents.\"\n              />\n            </>\n          ) : (\n            <>\n\n            <CompanyViewTalents isSavedProfile={true} talentsData={data} />\n             \n              <PaginationNextPrevious\n                previous={previous}\n                next={next}\n                previousFn={previousFn}\n                nextFn={nextFn}\n              />\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default SavedTalents;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getMySavedProfiles, getTalentsWhichHired } from \"../../../../app-redux/features/jobCompany/jobCompanySlice\";\nimport { PutTalentsInArray_FromJob } from \"../../../../constants/utils\";\n// import AppPayPal from \"../../../organisms/AppPayPal/AppPayPal\";\nimport WhiteBgDiv from \"../../../organisms/WhiteBgDiv/WhiteBgDiv\";\nimport CompanyLayout from \"../../../templates/CompanyLayout/CompanyLayout\";\nimport CompanyDebit from \"./pagecomponents/CompanyDebit\";\nimport HiredTalents from \"./pagecomponents/HiredTalents\";\nimport SavedTalents from \"./pagecomponents/SavedTalents\";\n\nfunction CompanyHiredTalents() {\n  const dispatch = useDispatch();\n\n  const jobCompany = useSelector((state) => state.jobCompany);\n  const { talentsOfferedJob ,mySavedProfiles} = jobCompany;\n  \n  const { data: talentsOfferedJobData } = talentsOfferedJob;\n  const { data: mySavedProfilesData } = mySavedProfiles;\n\n\n  const { results: talentsOfferedJobResults, links: nxtPrevLinks } =\n    talentsOfferedJobData;\n  \n    const { results: mySavedProfilesResults, links: nxtPrevLinks_SavedProfiles } =\n    mySavedProfilesData;\n\n  const [talentsApplied, setTalentsApplied] = useState([]);\n\n  const { next, previous } =\n    nxtPrevLinks !== undefined ? nxtPrevLinks : { next: null, previous: null };\n  \n    const { next_saved_profile, previous_saved_profile } =\n    nxtPrevLinks_SavedProfiles !== undefined ? nxtPrevLinks_SavedProfiles : { next: null, previous: null };\n\n  useEffect(() => {\n    if (talentsOfferedJobResults !== undefined) {\n      setTalentsApplied(PutTalentsInArray_FromJob(talentsOfferedJobResults));\n    }\n  }, [talentsOfferedJobResults]);\n\n  useEffect(()=>{\n    dispatch(getMySavedProfiles())\n  },[])\n// console.log({talentsApplied})\n  const tabs = [\n    {\n      id: 1,\n      component: (\n        <HiredTalents\n          previousFn={() =>\n            dispatch(\n              getTalentsWhichHired({\n                pageURL: previous !== undefined && previous,\n              })\n            )\n          }\n          nextFn={() =>\n            dispatch(\n              getTalentsWhichHired({\n                pageURL: previous !== undefined && previous,\n              })\n            )\n          }\n          next={next}\n          previous={previous}\n          data={talentsApplied.talents}\n        ></HiredTalents>\n      ),\n      title: \"List of Hired Talents\",\n    },\n    {\n      id: 2,\n      component: (\n        <SavedTalents\n          previousFn={() =>\n            dispatch(\n              getMySavedProfiles({\n                pageURL: previous_saved_profile !== undefined && previous_saved_profile,\n              })\n            )\n          }\n          nextFn={() =>\n            dispatch(\n              getMySavedProfiles({\n                pageURL: next_saved_profile !== undefined && next_saved_profile,\n              })\n            )\n          }\n          next={next_saved_profile}\n          previous={previous_saved_profile}\n          data={mySavedProfilesResults}\n        ></SavedTalents>\n      ),\n      title: \"List of Saved Talents\",\n    },\n    {\n      id: 3,\n      component: <CompanyDebit></CompanyDebit>,\n      title: \"Company Debit Information\",\n    },\n  ];\n  return (\n    <div>\n      <CompanyLayout pageTitle=\"Talents\" pageHeaderRight={undefined}>\n        <Tabs\n          defaultActiveKey={tabs[0][\"id\"]}\n          id=\"fill-tab-example\"\n          className=\"mb-3\"\n          justify\n          \n        >\n          {tabs.map((tab, index) => {\n            return (\n              <Tab\n                key={index}\n                style={{ backgroundColor: \"transparent\",padding:0 }}\n                eventKey={tab.id}\n                title={tab.title}\n              >\n                <WhiteBgDiv>{tab.component}</WhiteBgDiv>\n              </Tab>\n            );\n          })}\n        </Tabs>\n        {/* <AppPayPal/> */}\n      </CompanyLayout>\n    </div>\n  );\n}\n\nexport default CompanyHiredTalents;\n"],"names":["_ref","_ref$rows","rows","_ref$columns","columns","_ref$pageSize","pageSize","_jsx","children","Box","sx","height","width","DataGrid","getEstimatedRowHeight","rowHeight","rowsPerPageOptions","disableSelectionOnClick","disableColumnSelector","disableDensitySelector","experimentalFeatures","newEditingApi","next","previous","nextFn","previousFn","_jsxs","className","undefined","onClick","href","tabIndex","defaultValues","handleSaveDebitInfo","_useState","useState","CVV","expiryCode","focus","name","cardNum","_useState2","_slicedToArray","data","setData","handleInputFocus","e","_objectSpread","target","getAttribute","handleInputChange","_e$target","value","_defineProperty","_Fragment","Cards","cvc","expiry","focused","number","AppRow","AppCol","size","AppTextField","alias","placeholder","label","type","handleChange","handleOnFocus","AppButton","preventDefault","toast","autoClose","handleSave","dispatch","useDispatch","luhnCheck","parseInt","SaveCompanyDebit","onSubmit","AppCreditCardInput","navigate","useNavigate","field","headerName","minWidth","renderCell","params","AppLink","to","row","first_name","concat","COMPANY_ROUTE","talentId","current_job_title","status","SecondaryButton","backgroundColor","SECONDARY_LIGHT_COLOR","color","id","Money","qualification","address","isLink","linkPath","loading","FormatDate","created_at","AppDataGrid","length","EmptyData","actionLabel","hasAction","title","message","HiredTalentsTable","PaginationNextPrevious","CompanyViewTalents","isSavedProfile","talentsData","jobCompany","useSelector","state","talentsOfferedJob","mySavedProfiles","talentsOfferedJobData","mySavedProfilesData","talentsOfferedJobResults","results","nxtPrevLinks","links","mySavedProfilesResults","nxtPrevLinks_SavedProfiles","talentsApplied","setTalentsApplied","_ref2","next_saved_profile","previous_saved_profile","useEffect","PutTalentsInArray_FromJob","getMySavedProfiles","tabs","component","HiredTalents","getTalentsWhichHired","pageURL","talents","SavedTalents","CompanyDebit","CompanyLayout","pageTitle","pageHeaderRight","Tabs","defaultActiveKey","justify","map","tab","index","Tab","style","padding","eventKey","WhiteBgDiv"],"sourceRoot":""}