{"version":3,"file":"static/js/7672.7cc3b419.chunk.js","mappings":"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","sources":["components/organisms/EmptyData/EmptyData.js","components/pages/company/CompanyUpdates/pagecomponents/UpdatesDoc.js","components/pages/company/CompanyUpdates/CompanyUpdates.js","components/pages/company/CompanyUpdates/pagecomponents/UpdatesNotification.js"],"sourcesContent":["import React from \"react\";\nimport {\n  PRIMARY_COLOR,\n  SECONDARY_LIGHT_COLOR,\n} from \"../../../constants/AppColors\";\nimport { EMPTY_IMG } from \"../../../constants/AppImages\";\nimport AppButton from \"../../atoms/AppButton/AppButton\";\nimport SecondaryButton from \"../../atoms/AppButton/SecondaryButton\";\nimport AppImage from \"../AppImage/AppImage\";\n\nfunction EmptyData({\n  message = \"\",\n  hasAction = false,\n  actionLabel,\n  linkPath,\n  title=\"\",\n  image,\n  component,\n}) {\n  return (\n    <>\n      {component !== undefined ? (\n        <div\n          // style={{  }}\n          className=\"border p-5 rounded\"\n        >\n          {component}\n\n          {hasAction && (\n            <SecondaryButton\n              size=\"small\"\n              isLink\n              linkPath={linkPath}\n              style={{\n                backgroundColor: SECONDARY_LIGHT_COLOR,\n                color: \"black\",\n              }}\n            >\n              {actionLabel}\n            </SecondaryButton>\n          )}\n        </div>\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n          }}\n          className=\"border p-5 rounded\"\n        >\n          <AppImage\n            className=\"animate__animated animate__pulse mb-3\"\n            style={{ height: 70, opacity: image === undefined ? \".4\" : \"1\" }}\n            image={image === undefined ? EMPTY_IMG : image}\n          />\n          <p className=\"fs-5 text-center\" style={{ color: PRIMARY_COLOR }}>\n            {title}\n          </p>\n\n          <p className=\"fs-6 text-muted text-center\">{message}</p>\n\n          {hasAction && (\n            <SecondaryButton\n              size=\"small\"\n              isLink\n              linkPath={linkPath}\n              style={{\n                backgroundColor: SECONDARY_LIGHT_COLOR,\n                color: \"black\",\n              }}\n            >\n              {actionLabel}\n            </SecondaryButton>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default EmptyData;\n","import React from 'react'\n\nfunction UpdatesDoc() {\n  return (\n    <div>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vel fringilla turpis sit sed hac ultricies lectus. Ac arcu, id ultrices est consectetur auctor. Erat nulla et sed m\n        <hr></hr>\n\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vel fringilla turpis sit sed hac ultricies lectus. Ac arcu, id ultrices est consectetur auctor. Erat nulla et sed m\n        <hr></hr>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vel fringilla turpis sit sed hac ultricies lectus. Ac arcu, id ultrices est consectetur auctor. Erat nulla et sed m\n\n    </div>\n  )\n}\n\nexport default UpdatesDoc","import React from \"react\";\nimport CompanyLayout from \"../../../templates/CompanyLayout/CompanyLayout\";\nimport WhiteBgDiv from \"../../../organisms/WhiteBgDiv/WhiteBgDiv\";\nimport UpdatesDoc from \"./pagecomponents/UpdatesDoc\";\nimport { useSelector } from \"react-redux\";\nimport UpdatesNotification from \"./pagecomponents/UpdatesNotification\";\nimport { formatAppliedTalentsFor_Updates } from \"../../../../constants/utils\";\nimport AppRow from \"../../../organisms/AppRow/AppRow\";\nimport AppCol from \"../../../organisms/AppCol/AppCol\";\nimport EmptyData from \"../../../organisms/EmptyData/EmptyData\";\n\nfunction CompanyUpdates() {\n  const jobCompanyData = useSelector((state) => state.jobCompany);\n  const { talentsWhichAppliedJob_For_Updates: updatesData } = jobCompanyData;\n\n  const updatesDataRes = updatesData.data.hasOwnProperty(\"results\")\n    ? updatesData.data.results\n    : [];\n\n  let updates = formatAppliedTalentsFor_Updates(updatesDataRes);\n  // console.log({ updatesDataRes });\n\n  return (\n    <div>\n      <CompanyLayout pageTitle=\"Updates\" pageHeaderRight={undefined}>\n        <WhiteBgDiv>\n          {/* <UpdatesDoc /> */}\n\n          {\n            updates.length === 0 \n            &&\n            <EmptyData title=\"You have no updates\"></EmptyData>\n          }\n\n          <AppRow>\n            {updates.map((data) => {\n              return (\n                <AppCol\n                  size={6}\n                  md_size={6}\n                  sm_size={12}\n                  xs_size={12}\n                  xl_size={6}\n                >\n                  <UpdatesNotification update={data}></UpdatesNotification>\n                </AppCol>\n              );\n            })}\n          </AppRow>\n        </WhiteBgDiv>\n      </CompanyLayout>\n    </div>\n  );\n}\n\nexport default CompanyUpdates;\n","import React from \"react\";\nimport {\n  FormatDate,\n  dateDiff,\n  returnTimeDifference,\n} from \"../../../../../constants/utils\";\nimport { Link } from \"react-router-dom\";\nimport { COMPANY_ROUTE, HOME_ROUTES } from \"../../../../../routes/RouteLinks\";\nimport { USER_IMAGE } from \"../../../../../constants/AppImages\";\n\nfunction UpdatesNotification({ update, showImage = true }) {\n  let talent_f_name = update.talent_f_name;\n  let talent_id = update.talent_id;\n  let talent_photo = update.talent_photo;\n\n  let job_name = update.job_title;\n  let job_id = update.job_id;\n  let status = update.status;\n\n  let apply_date = update.apply_date;\n  let talent_job_title = update.talent_job_title;\n\n  let talent_job_title_message =\n    talent_job_title !== null && talent_job_title !== undefined\n      ? `(${talent_job_title}) `\n      : \" \";\n\n  return (\n    <div className=\"alert alert-light border\">\n      {showImage && (\n        <>\n          <picture>\n            <img\n              height=\"50\"\n              width=\"50\"\n              src={\n                talent_photo !== null && talent_photo !== undefined\n                  ? talent_photo\n                  : USER_IMAGE\n              }\n              class=\"img-fluid img-thumbnail mb-2\"\n              alt=\"newton\"\n            />\n          </picture>\n          <br></br>\n        </>\n      )}\n      {\n        talent_f_name !== undefined && talent_f_name !== null ?\n        <Link\n        style={{ textDecoration: \"none\" }}\n        to={`${\n          status === \"pending\"\n            ? `/${COMPANY_ROUTE.index}${COMPANY_ROUTE.viewTalent}${talent_id}?referJob=${job_id}&application=${update.uid}`\n            : `/${COMPANY_ROUTE.index}${COMPANY_ROUTE.viewTalent}${talent_id}`\n        }`}\n      >\n        {talent_f_name}\n      </Link>\n        :\"**Talent deleted***\"\n      }\n      \n      {talent_job_title_message}applied for{\" \"}\n      <Link\n        style={{ textDecoration: \"none\" }}\n        to={`/${HOME_ROUTES.viewJob}${job_id}`}\n      >\n        {job_name}\n      </Link>{\" \"}\n      job on {FormatDate(apply_date)}{\" \"}\n      {/* {returnTimeDifference(dateDiff(new Date(), apply_date))} */}\n      <br></br>\n      <span className=\"badge  text-bg-light\">{status}</span>\n      <div className=\"mt-2\">\n        <span className=\"text-muted\">\n          {returnTimeDifference(\n            dateDiff(new Date(), FormatDate(apply_date)),\n            \"\"\n          )}\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default UpdatesNotification;\n"],"names":["_ref","_ref$message","message","_ref$hasAction","hasAction","actionLabel","linkPath","_ref$title","title","image","component","_jsx","_Fragment","children","undefined","_jsxs","className","SecondaryButton","size","isLink","style","backgroundColor","SECONDARY_LIGHT_COLOR","color","display","alignItems","flexDirection","AppImage","height","opacity","EMPTY_IMG","PRIMARY_COLOR","updatesData","useSelector","state","jobCompany","talentsWhichAppliedJob_For_Updates","updatesDataRes","data","hasOwnProperty","results","updates","formatAppliedTalentsFor_Updates","CompanyLayout","pageTitle","pageHeaderRight","WhiteBgDiv","length","EmptyData","AppRow","map","AppCol","md_size","sm_size","xs_size","xl_size","UpdatesNotification","update","_ref$showImage","showImage","talent_f_name","talent_id","talent_photo","job_name","job_title","job_id","status","apply_date","talent_job_title","talent_job_title_message","concat","width","src","USER_IMAGE","class","alt","Link","textDecoration","to","COMPANY_ROUTE","uid","HOME_ROUTES","FormatDate","returnTimeDifference","dateDiff","Date"],"sourceRoot":""}