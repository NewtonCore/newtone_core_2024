{"version":3,"file":"static/js/457.934c9465.chunk.js","mappings":"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","sources":["components/organisms/PostJobConfirmation/CopyLinkInput.js","components/organisms/ReferModal/ReferModalBody.js","components/organisms/ReferModal/ReferModal.js","components/organisms/ReferModal/ReferModalFooter.js","components/pages/applicant/Settings/pagecomponents/DeleteProfile.js","components/pages/applicant/Settings/Settings.js","components/pages/applicant/Settings/pagecomponents/ChangePassword.js","components/templates/TalentLayout/TalentLayout.js","webpack://newton-recruitment/./src/components/organisms/ReferModal/ReferModal.module.css?2077"],"sourcesContent":["import { Copy } from \"akar-icons\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"./PostJobSuccess.css\"\n\nfunction CopyLinkInput({ url }) {\n  const copyText = () => {\n    navigator.clipboard.writeText(url);\n    toast.info(\"Link copied\", 1000);\n  };\n  return (\n    <div>\n      <div className=\"input-group\">\n        <input\n          value={url}\n          disabled\n          type=\"text\"\n          className=\"form-control\"\n          aria-describedby=\"basic-addon1\"\n        />\n\n        <button\n          onClick={() => copyText()}\n          className=\"input-group-text\"\n          id=\"basic-addon1\"\n        >\n          <Copy />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default CopyLinkInput;\n","import React from \"react\";\nimport AppContainerFluid from \"../AppContainerFluid/AppContainerFluid\";\nimport CopyLinkInput from \"../PostJobConfirmation/CopyLinkInput\";\n\nfunction ReferModalBody({ data }) {\n  return (\n    <AppContainerFluid>\n      <center>\n        <h5>Refer a friend</h5>\n        <span className=\"text-muted\">Refer a friend to Newton Recruitment</span>\n      </center>\n\n      <div className=\"mt-3 mb-3\">\n        <CopyLinkInput url={process.env.REACT_APP_WEB_URL}></CopyLinkInput>\n      </div>\n    </AppContainerFluid>\n  );\n}\n\nexport default ReferModalBody;\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport classStyle from \"./ReferModal.module.css\";\nimport ReferModalBody from \"./ReferModalBody\";\nimport ReferModalFooter from \"./ReferModalFooter\";\n\nfunction ReferModal({ show, toggleFunction,message }) {\n  let appData = useSelector((state) => state.appData);\n  let { refer_form_array } = appData;\n  return (\n    <div>\n      <Modal\n        scrollable\n        contentClassName={classStyle.refer_modal}\n        show={show}\n        onHide={toggleFunction}\n        centered\n      >\n        <Modal.Body>\n          <ReferModalBody data={refer_form_array}></ReferModalBody>\n          <ReferModalFooter shareTitle={message} />\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ReferModal;\n","import React from \"react\";\nimport AppContainerFluid from \"../AppContainerFluid/AppContainerFluid\";\nimport AppRow from \"../AppRow/AppRow\";\nimport classStyles from \"./ReferModal.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  WhatsappShareButton,\n  TelegramShareButton,\n  TwitterShareButton,\n  LinkedinShareButton,\n  TwitterIcon,\n  WhatsappIcon,\n  FacebookIcon,\n  TelegramIcon,\n  LinkedinIcon,\n  FacebookShareButton,\n  InstapaperShareButton,\n  InstapaperIcon,\n} from \"react-share\";\n\nfunction ReferModalFooter({\n  shareUrl = process.env.REACT_APP_WEB_URL,\n  heading,\n  quote = \"Newton\",\n  shareTitle = \"Newton\",\n  hashtags = [\"newton\"],\n}) {\n  let REFERALs = [\n    {\n      id: uuidv4(),\n      component: (\n        <WhatsappShareButton title={shareTitle} url={shareUrl}>\n          <WhatsappIcon quote={quote} size={32} round={true} />\n        </WhatsappShareButton>\n      ),\n    },\n    {\n      id: uuidv4(),\n      component: (\n        <FacebookShareButton quote={quote} url={shareUrl}>\n          <FacebookIcon size={32} round={true} />\n        </FacebookShareButton>\n      ),\n    },\n\n    {\n      id: uuidv4(),\n      component: (\n        <LinkedinShareButton title={shareTitle} url={shareUrl}>\n          <LinkedinIcon size={32} round={true} />\n        </LinkedinShareButton>\n      ),\n    },\n    {\n      id: uuidv4(),\n      component: (\n        <TwitterShareButton\n          hashtags={hashtags}\n          title={shareTitle}\n          url={shareUrl}\n        >\n          <TwitterIcon size={32} round={true} />\n        </TwitterShareButton>\n      ),\n    },\n    {\n      id: uuidv4(),\n      component: (\n        <TelegramShareButton title={shareTitle} url={shareUrl}>\n          <TelegramIcon size={32} round={true} />\n        </TelegramShareButton>\n      ),\n    },\n    {\n      id: uuidv4(),\n      component: (\n        <InstapaperShareButton title={shareTitle} url={shareUrl}>\n          <InstapaperIcon size={32} round={true} />\n        </InstapaperShareButton>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <AppContainerFluid>\n        {}\n        <center>\n          <span className=\"text-muted text-center\">You can share via</span>\n        </center>\n\n        <AppRow className={classStyles.footerIcons}>\n          {REFERALs.map((ref) => {\n            return (\n              <div key={ref.id} className=\"mt-1\">\n                {ref.component}\n              </div>\n            );\n          })}\n        </AppRow>\n      </AppContainerFluid>\n    </div>\n  );\n}\n\nexport default ReferModalFooter;\n","import React from \"react\";\nimport { FORM_INPUTS } from \"../../../../../constants/FormInputs\";\nimport { generateUniqueID } from \"../../../../../constants/utils\";\nimport AppButton from \"../../../../atoms/AppButton/AppButton\";\nimport AppCol from \"../../../../organisms/AppCol/AppCol\";\nimport AppRow from \"../../../../organisms/AppRow/AppRow\";\nimport FormInputRenderer from \"../../../../organisms/FormRenderer/FormInputRenderer\";\nimport WhiteBgDiv from \"../../../../organisms/WhiteBgDiv/WhiteBgDiv\";\n\nfunction DeleteProfile() {\n  return (\n    <div>\n      <AppRow>\n        <WhiteBgDiv>\n          <AppRow>\n            <>Are you sure! You want to delete your profile.</>\n            <br></br>\n\n            <>This can't be undone!</>\n            <br></br>\n            <br></br>\n\n            <AppCol>\n              {FORM_INPUTS.DELETE_PROFILE_FIELDS.map((field) => {\n                return (\n                  <FormInputRenderer\n                    key={generateUniqueID()}\n                    type=\"text-input\"\n                    metaData={{\n                      label: field.label,\n                      inputId: \"settings_input_fields\",\n                    }}\n                  />\n                );\n              })}\n            </AppCol>\n            <AppCol style={{ padding: 0 }}>\n              <AppButton size=\"small\" label=\"Delete Profile\"></AppButton>\n            </AppCol>\n          </AppRow>\n        </WhiteBgDiv>\n      </AppRow>\n    </div>\n  );\n}\n\nexport default DeleteProfile;\n","import React from \"react\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport WhiteBgDiv from \"../../../organisms/WhiteBgDiv/WhiteBgDiv\";\nimport TalentLayout from \"../../../templates/TalentLayout/TalentLayout\";\nimport ChangePassForm from \"./pagecomponents/ChangePassword\";\nimport DeleteProfile from \"./pagecomponents/DeleteProfile\";\nimport \"./Settings.css\"\n\nconst tabs = [\n  {\n    id: 1,\n    component: <ChangePassForm />,\n    title: \"Change Password\",\n  },\n  // {\n  //   id: 2,\n  //   component: <p>Still progressing...</p>,\n  //   title: \"Payment Information\",\n  // },\n  {\n    id: 3,\n    component: <DeleteProfile />,\n    title: \"Delete Profile\",\n  },\n];\n\nfunction Settings() {\n  return (\n    <div>\n      <TalentLayout pageTitle=\"Settings\" pageHeaderRight={undefined}>\n        <Tabs\n          defaultActiveKey={tabs[0][\"id\"]}\n          id=\"fill-tab-example\"\n          className=\"mb-3\"\n          justify\n        >\n          {tabs.map((tab,index) => {\n            return (\n              <Tab\n              key={index}\n                style={{ backgroundColor: \"transparent\" }}\n                eventKey={tab.id}\n                title={tab.title}\n              >\n                <WhiteBgDiv>{tab.component}</WhiteBgDiv>\n              </Tab>\n            );\n          })}\n        </Tabs>\n      </TalentLayout>\n    </div>\n  );\n}\n\nexport default Settings;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport {\n  changePassword,\n  handleOnChangeTextInput,\n  handleValidateFields,\n  toggleShowPassword,\n} from \"../../../../../app-redux/features/Auth/authSlice\";\nimport { FORM_INPUTS } from \"../../../../../constants/FormInputs\";\nimport {\n  checkPropertiesIsEmpty,\n  ExtractFieldsFromFormData,\n  generateUniqueID,\n} from \"../../../../../constants/utils\";\nimport AppButton from \"../../../../atoms/AppButton/AppButton\";\nimport AppCol from \"../../../../organisms/AppCol/AppCol\";\nimport AppRow from \"../../../../organisms/AppRow/AppRow\";\nimport FormInputRenderer from \"../../../../organisms/FormRenderer/FormInputRenderer\";\nimport WhiteBgDiv from \"../../../../organisms/WhiteBgDiv/WhiteBgDiv\";\n\nfunction ChangePassForm() {\n  const authData = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  let { changePasswordForm ,passwordIsVisible} = authData;\n\n  let handleTextChange = (e, meta) => {\n    let { value, name } = e.target;\n\n    const {  RowKey, ChildKey } = meta;\n\n    dispatch(\n      handleOnChangeTextInput({\n        state: \"change_password\",\n        valueToUpdate: value,\n        KeyName: name,\n        RowKey: RowKey,\n        ChildKey,\n      })\n    );\n  };\n\n  const toggleRevealPassword = () => {\n    dispatch(toggleShowPassword());\n  };\n\n  let handleOnBlur = (e, meta) => {};\n\n  let changePasswordFunc = () => {\n    dispatch(handleValidateFields({ state: \"change_password\" }));\n\n    //extract the fields only that are required\n\n    let change_password_object = ExtractFieldsFromFormData(\n      changePasswordForm,\n      true\n    );\n\n    console.log({change_password_object})\n    //\n    let check_if_empty = checkPropertiesIsEmpty(change_password_object);\n\n    if (check_if_empty) {\n      toast.warning(\"Kindly fill in the required fields\");\n      return 0;\n    }\n\n    dispatch(changePassword({ data: changePasswordForm })).unwrap()\n    .then(res=>{\n      toast.success(\"Password has been changed\")\n      \n    }).catch(err=>{\n      toast.error(err)\n    })\n  };\n  return (\n    <div className=\"change_pass\">\n      <>\n        {Array.isArray(changePasswordForm) &&\n          changePasswordForm.map((form, form_index) => {\n            return (\n              <AppRow className=\"gx-3\" key={form.id}>\n                {form.children.map((child, child_index) => {\n                  if (child.hidden !== true) {\n                    return (\n                      <AppCol size={12 / form.colums} key={child.id}>\n                        {/* {JSON.stringify(child)} */}\n                        <FormInputRenderer\n                          onBlurValidation={\n                            child.type === \"text-input\" ||\n                            child.type === \"text-area\" || child.type === \"password\"\n                              ? handleOnBlur\n                              : {}\n                          }\n                          handleChange={\n                            child.type === \"text-input\" ||\n                            child.type === \"text-area\" || child.type === \"password\"\n                              ? handleTextChange\n                              : {}\n                          }\n                          type={child.type}\n                          metaData={{\n                            toggleRevealPassword:toggleRevealPassword,\n                            passwordIsVisible:passwordIsVisible,\n                            meta: { RowKey: form_index, ChildKey: child_index },\n                            label: child.label,\n                            value: child.value,\n                            name: child.name,\n                            input_type: child.input_type,\n                            // className: child.hasError && classStyle.red_input,\n                            // inputId: \"settings_input_fields\",\n                            data: child.data,\n                            type: child.input_type,\n                            isRequired: child.isRequired,\n                            maxlength: child.maxlength,\n                            errorMessage:\n                              child.type === \"text-input\" ||\n                              (child.type === \"text-area\" &&\n                                child.errorMessage),\n                          }}\n                        ></FormInputRenderer>\n                      </AppCol>\n\n                      // </div>\n                    );\n                  }\n                })}\n              </AppRow>\n            );\n          })}\n\n        {/* {changePasswordForm.map((field) => {\n              return (\n                <FormInputRenderer\n                  handleChange={handleTextChange}\n                  key={generateUniqueID()}\n                  type=\"text-input\"\n                  metaData={{\n                    meta: { RowKey: form_index, ChildKey: child_index },\n                    label: field.label,\n                    inputId: \"settings_input_fields\",\n                  }}\n                />\n              );\n            })} */}\n        <AppCol style={{ padding: 0 }}>\n          <AppButton\n            onClick={() => changePasswordFunc()}\n            size=\"small\"\n            label=\"Save Password\"\n          ></AppButton>\n        </AppCol>\n      </>\n    </div>\n  );\n}\n\nexport default ChangePassForm;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TALENT_IMG } from \"../../../constants/AppImages\";\nimport { NAVLINKS } from \"../../../constants/navlinks\";\nimport { generateUniqueID } from \"../../../constants/utils\";\nimport AppButton from \"../../atoms/AppButton/AppButton\";\nimport LeftNavLink from \"../../molecules/LeftNavLink/LeftNavLink\";\nimport AppCol from \"../../organisms/AppCol/AppCol\";\nimport AppContainerFluid from \"../../organisms/AppContainerFluid/AppContainerFluid\";\nimport AppNavBar from \"../../organisms/AppNavBar/AppNavBar\";\nimport PagesHeader from \"../../organisms/PagesHeader/PagesHeader\";\nimport SideNavProfile from \"../../organisms/SideNavProfile/SideNavProfile\";\nimport LeftRightPage from \"../LeftRightPage/LeftRightPage\";\nimport { logOutUser } from \"../../../app-redux/features/Auth/authSlice\";\nimport ReferModal from \"../../organisms/ReferModal/ReferModal\";\nimport { toggleReferModal } from \"../../../app-redux/features/appData/appDataSlice\";\nimport AppMobileNav from \"../../organisms/AppMobileNav/AppMobileNav\";\nimport { Logout } from \"@mui/icons-material\";\n\nconst LeftNavComponent = ({ first_name, last_name, dispatch }) => {\n  return (\n    <>\n      <div>\n        <SideNavProfile isTalent={true} name={`${first_name} ${last_name}`} />\n        {NAVLINKS.available_for_job_link.map((leftNavLink, index) => {\n          return (\n            <LeftNavLink\n              key={generateUniqueID()}\n              style={{ borderRadius: 40, marginBottom: 40 }}\n              link={leftNavLink.link}\n              image={leftNavLink.image}\n              name={leftNavLink.name}\n            ></LeftNavLink>\n          );\n        })}\n        {NAVLINKS.talent_left_links.map((leftNavLink, index) => {\n          return (\n            <LeftNavLink\n              key={generateUniqueID()}\n              link={leftNavLink.link}\n              image={leftNavLink.image}\n              name={leftNavLink.name}\n            ></LeftNavLink>\n          );\n        })}\n\n        <AppButton\n          size=\"small\"\n          onClick={() => dispatch(logOutUser())}\n          style={{ backgroundColor: \"white\", color: \"black\" }}\n        >\n          <Logout /> Logout\n        </AppButton>\n      </div>\n    </>\n  );\n};\n\nfunction TalentLayout({\n  name_of_talent,\n  showLeftNav,\n  children,\n  pageTitle = \"\",\n  pageHeaderRight = undefined,\n  loading,\n}) {\n  const authData = useSelector((state) => state.auth);\n  const appData = useSelector((state) => state.appData);\n\n  let { loginUserState } = authData;\n  let { data: userData } = loginUserState;\n  let { first_name, last_name, phone, email } = userData;\n\n  const dispatch = useDispatch();\n  return (\n    <main>\n      {/* App top nav here */}\n      <AppMobileNav\n        component={\n          <LeftNavComponent\n            last_name={last_name}\n            first_name={first_name}\n            dispatch={dispatch}\n            loading={loading}\n          />\n        }\n        isInDashboard={true}\n      />\n      <AppNavBar\n        loading={loading}\n        navTileImage={TALENT_IMG}\n        navTileTitle={`${first_name} ${last_name}`}\n        rightLinks={NAVLINKS.dashboard_talent_right_links}\n        leftLinks={NAVLINKS.dashboard_talent_links}\n      />\n      <LeftRightPage\n        Left={\n          <LeftNavComponent\n            last_name={last_name}\n            first_name={first_name}\n            dispatch={dispatch}\n          ></LeftNavComponent>\n        }\n        Right={\n          <AppContainerFluid className=\"fluid_xl\">\n            <>\n              <AppCol size=\"12\">\n                <>\n                  {/* {JSON.stringify(pageHeaderRight)} */}\n                  {pageHeaderRight !== undefined ? (\n                    <PagesHeader\n                      RightComponent={pageHeaderRight}\n                      title={pageTitle}\n                    ></PagesHeader>\n                  ) : (\n                    <PagesHeader title={pageTitle}></PagesHeader>\n                  )}\n                  {children}\n                </>\n              </AppCol>\n            </>\n          </AppContainerFluid>\n        }\n      />\n      <ReferModal\n        message=\"Newton is the new thing on the block. We assist companies looking to hire tech talents or build teams by using our AI-powered platform and data-driven technology to get the best fitting for the role.\"\n        toggleFunction={() => dispatch(toggleReferModal())}\n        show={appData.showReferFriendModal}\n      />\n    </main>\n  );\n}\n\nexport default TalentLayout;\n","// extracted by mini-css-extract-plugin\nexport default {\"refer_modal\":\"ReferModal_refer_modal__9kP4g\",\"footerIcons\":\"ReferModal_footerIcons__kNf03\"};"],"names":["_ref","url","_jsx","children","_jsxs","className","value","disabled","type","onClick","navigator","clipboard","writeText","toast","id","Copy","data","AppContainerFluid","CopyLinkInput","process","show","toggleFunction","message","refer_form_array","useSelector","state","appData","Modal","scrollable","contentClassName","classStyle","onHide","centered","ReferModalBody","ReferModalFooter","shareTitle","_ref$shareUrl","shareUrl","_ref$quote","heading","quote","_ref$shareTitle","_ref$hashtags","hashtags","REFERALs","uuidv4","component","WhatsappShareButton","title","WhatsappIcon","size","round","FacebookShareButton","FacebookIcon","LinkedinShareButton","LinkedinIcon","TwitterShareButton","TwitterIcon","TelegramShareButton","TelegramIcon","InstapaperShareButton","InstapaperIcon","AppRow","classStyles","map","ref","WhiteBgDiv","_Fragment","AppCol","FORM_INPUTS","field","FormInputRenderer","metaData","label","inputId","generateUniqueID","style","padding","AppButton","tabs","ChangePassForm","DeleteProfile","TalentLayout","pageTitle","pageHeaderRight","undefined","Tabs","defaultActiveKey","justify","tab","index","Tab","backgroundColor","eventKey","authData","auth","dispatch","useDispatch","changePasswordForm","passwordIsVisible","handleTextChange","e","meta","_e$target","target","name","RowKey","ChildKey","handleOnChangeTextInput","valueToUpdate","KeyName","toggleRevealPassword","toggleShowPassword","handleOnBlur","Array","isArray","form","form_index","child","child_index","hidden","colums","onBlurValidation","handleChange","input_type","isRequired","maxlength","errorMessage","handleValidateFields","change_password_object","ExtractFieldsFromFormData","console","log","checkPropertiesIsEmpty","changePassword","unwrap","then","res","catch","err","changePasswordFunc","LeftNavComponent","first_name","last_name","SideNavProfile","isTalent","concat","NAVLINKS","leftNavLink","LeftNavLink","borderRadius","marginBottom","link","image","logOutUser","color","Logout","_ref2","name_of_talent","showLeftNav","_ref2$pageTitle","_ref2$pageHeaderRight","loading","userData","loginUserState","phone","email","AppMobileNav","isInDashboard","AppNavBar","navTileImage","TALENT_IMG","navTileTitle","rightLinks","leftLinks","LeftRightPage","Left","Right","PagesHeader","RightComponent","ReferModal","toggleReferModal","showReferFriendModal"],"sourceRoot":""}