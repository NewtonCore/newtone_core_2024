{"version":3,"file":"static/js/4025.182cecc8.chunk.js","mappings":"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","sources":["components/pages/homepage/ResetPassword/PasswordResetForm.js","components/pages/homepage/ResetPassword/EmailHasBeenSent.js","components/pages/homepage/ResetPassword/PasswordReset.js"],"sourcesContent":["import React from \"react\";\nimport AppRow from \"../../../organisms/AppRow/AppRow\";\nimport AppCol from \"../../../organisms/AppCol/AppCol\";\nimport FormInputRenderer from \"../../../organisms/FormRenderer/FormInputRenderer\";\n\nfunction PasswordResetForm({ form, defaultLoginData, handleTextInputChange }) {\n  const handleChange = (e) => {\n    handleTextInputChange(e);\n  };\n  return (\n    <div className=\"p-3\">\n      {Array.isArray(form) &&\n        form.map((field) => {\n          return (\n            <AppRow key={field.id}>\n              <>\n                {field.children.map((field_child, index_2) => {\n                  return (\n                    <AppCol key={index_2} sm_size=\"12\" lg_size=\"12\">\n                      <FormInputRenderer\n                        handleChange={\n                          field_child.type === \"text-input\"\n                            ? handleChange\n                            : field_child.type === \"select\"\n                            ? {}\n                            : {}\n                        }\n                        type={field_child.type}\n                        metaData={{\n                          value: defaultLoginData[field_child.name],\n                          className: \"loginInputs\",\n                          inputId: field.id,\n                          name: field_child.name,\n                          type: field_child.input_type,\n                          label: field_child.label,\n                          isRequired: field_child.isRequired,\n                          pattern: field_child.pattern,\n                          title: field_child.title,\n                          placeholder: field_child.placeholder,\n                        }}\n                      ></FormInputRenderer>\n                    </AppCol>\n                  );\n                })}\n              </>\n            </AppRow>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default PasswordResetForm;\n","import React from \"react\";\n\nfunction EmailHasBeenSent({ email }) {\n  let hide = email.split(\"@\")[0].length - 3;\n  var r = new RegExp(\".{\" + hide + \"}@\", \"g\");\n\n  let email_hidden = email.replace(r, \"***@\");\n  return (\n    <div>\n      <div class=\"alert alert-info\" role=\"alert\">\n        Instructions to reset your password have been sent to your email{\" \"}\n        {email_hidden}\n      </div>\n    </div>\n  );\n}\n\nexport default EmailHasBeenSent;\n","/* eslint-disable jsx-a11y/heading-has-content */\nimport React, { useEffect, useState } from \"react\";\nimport AppNavBar from \"../../../organisms/AppNavBar/AppNavBar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppCol from \"../../../organisms/AppCol/AppCol\";\nimport AppRow from \"../../../organisms/AppRow/AppRow\";\nimport PasswordResetForm from \"./PasswordResetForm\";\nimport {\n  handleChangePasswordDataChange,\n  handleForgotPasswordDataChange,\n  sendResetPassword_Email,\n} from \"../../../../app-redux/features/Auth/authSlice\";\nimport AppContainer from \"../../../organisms/AppContainer/AppContainer\";\nimport { JsonToformData } from \"../../../../constants/utils\";\nimport { toast } from \"react-toastify\";\nimport AppButton from \"../../../atoms/AppButton/AppButton\";\nimport EmailHasBeenSent from \"./EmailHasBeenSent\";\nimport { Envelope } from \"akar-icons\";\nimport { PRIMARY_COLOR } from \"../../../../constants/AppColors\";\nimport { setOfflineLocalStorage } from \"../../../../constants/OfflineStorage\";\nimport { toggleLoginForm } from \"../../../../app-redux/features/appData/appDataSlice\";\nimport { LinearProgress } from \"@mui/material\";\nimport AppMobileNav from \"../../../organisms/AppMobileNav/AppMobileNav\";\n\n// import { useLocation } from \"react-router-dom\";\n\nfunction PasswordResetPage() {\n  const [hasSentMail, SetHasSentMail] = useState(null);\n  const [emailSent, SetEmailSent] = useState(null);\n\n  let dispatch = useDispatch();\n\n  const authData = useSelector((state) => state.auth);\n\n  let { TalentLoginData,forgotPasswordForm, forgotPassData, sendResetPassowrd_State } =\n    authData;\n\n  const handleFormChange = (e) => {\n    // return 0\n    let { value, name } = e.target;\n\n    dispatch(handleForgotPasswordDataChange({ name: name, value: value }));\n  };\n\n  const sendResetPasswordMail = (e) => {\n    e.preventDefault();\n\n    SetEmailSent(forgotPassData.email);\n\n    dispatch(\n      sendResetPassword_Email({\n        dataToPass: JsonToformData(forgotPassData),\n      })\n    )\n      .unwrap()\n      .then((res) => {\n        SetHasSentMail(true);\n        toast.success(e);\n        setOfflineLocalStorage(\n          \"@email_for_reset_password\",\n          forgotPassData.email\n        );\n      })\n      .catch((err) => {\n        toast.error(err);\n      });\n  };\n\n  useEffect(() => {\n    dispatch(\n      toggleLoginForm({\n        loginForm: false,\n        signUpForm: null,\n      })\n    );\n    \n  \n    \n  }, []);\n\n\n\n  useEffect(() => {\n   \n    // console.log({TalentLoginData})\n\n    if(TalentLoginData.email !==\"\"){\n      dispatch(\n        handleForgotPasswordDataChange({ name:\"email\", value:TalentLoginData.email })\n      );\n    }\n    \n    \n  }, [TalentLoginData]);\n  //   let location = useLocation();\n\n  return (\n    <>\n      <AppMobileNav />\n\n      <AppNavBar />\n\n      <AppContainer>\n        <AppRow style={{ marginTop: 150 }}>\n          {/* <AppCol size={3}></AppCol> */}\n\n          <AppCol\n            olg={3}\n            omg={2}\n            osg={1}\n            sm_size={10}\n            md_size={8}\n            lg_size={6}\n            size={6}\n            xs_size={12}\n\n            className=\"shadow p-3 bg-body-tertiary rounded\"\n          >\n            {sendResetPassowrd_State.loading && <LinearProgress />}\n            {hasSentMail && (\n              <center>\n                <Envelope size={50} color={PRIMARY_COLOR} />\n              </center>\n            )}\n            <h5 className=\"mt-3 mb-3 text-center\">\n              {\" \"}\n              {hasSentMail ? \"Email sent!\" : \"Forgot Password?\"}\n            </h5>\n            {hasSentMail ? (\n              <>\n                <EmailHasBeenSent email={emailSent}></EmailHasBeenSent>\n                <AppButton\n                  onClick={(e) => sendResetPasswordMail(e)}\n                  size=\"small\"\n                  className=\"w-100\"\n                >\n                  Did not get email? Resend\n                </AppButton>\n              </>\n            ) : (\n              <>\n                <div class=\"alert alert-warning\" role=\"alert\">\n                  Instructions to reset your password will be sent to your email\n                </div>\n\n                <form\n                  className=\"auth_form\"\n                  onSubmit={(e) => sendResetPasswordMail(e)}\n                >\n                  <PasswordResetForm\n                    defaultLoginData={forgotPassData}\n                    form={forgotPasswordForm}\n                    handleTextInputChange={handleFormChange}\n                  />\n                  <AppButton\n                    loadingText=\"Sending mail...\"\n                    loading={sendResetPassowrd_State.loading}\n                    onClick={(e) => sendResetPasswordMail(e)}\n                    size=\"small\"\n                    className=\"w-100\"\n                  >\n                    Submit\n                  </AppButton>\n                </form>\n              </>\n            )}\n          </AppCol>\n\n          {/* <AppCol size={3}></AppCol> */}\n        </AppRow>\n      </AppContainer>\n    </>\n  );\n}\n\nexport default PasswordResetPage;\n"],"names":["_ref","form","defaultLoginData","handleTextInputChange","handleChange","e","_jsx","className","children","Array","isArray","map","field","AppRow","_Fragment","field_child","index_2","AppCol","sm_size","lg_size","FormInputRenderer","type","metaData","value","name","inputId","id","input_type","label","isRequired","pattern","title","placeholder","email","hide","split","length","r","RegExp","email_hidden","replace","_jsxs","class","role","_useState","useState","_useState2","_slicedToArray","hasSentMail","SetHasSentMail","_useState3","_useState4","emailSent","SetEmailSent","dispatch","useDispatch","authData","useSelector","state","auth","TalentLoginData","forgotPasswordForm","forgotPassData","sendResetPassowrd_State","sendResetPasswordMail","preventDefault","sendResetPassword_Email","dataToPass","JsonToformData","unwrap","then","res","toast","setOfflineLocalStorage","catch","err","useEffect","toggleLoginForm","loginForm","signUpForm","handleForgotPasswordDataChange","AppMobileNav","AppNavBar","AppContainer","style","marginTop","olg","omg","osg","md_size","size","xs_size","loading","LinearProgress","Envelope","color","PRIMARY_COLOR","EmailHasBeenSent","AppButton","onClick","onSubmit","PasswordResetForm","_e$target","target","loadingText"],"sourceRoot":""}