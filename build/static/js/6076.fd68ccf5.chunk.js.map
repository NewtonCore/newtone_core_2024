{"version":3,"file":"static/js/6076.fd68ccf5.chunk.js","mappings":"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","sources":["components/organisms/EmptyData/EmptyData.js","components/organisms/PostJobConfirmation/CopyLinkInput.js","components/organisms/ReferModal/ReferModalBody.js","components/organisms/ReferModal/ReferModal.js","components/organisms/ReferModal/ReferModalFooter.js","webpack://newton-recruitment/./src/components/organisms/TestTile/TestTile.module.css?765b","components/organisms/TestTile/TestTile.js","components/pages/applicant/Tests/pagecomponents/TestsList.js","components/pages/applicant/Tests/Tests.js","components/templates/TalentLayout/TalentLayout.js","webpack://newton-recruitment/./src/components/organisms/ReferModal/ReferModal.module.css?2077"],"sourcesContent":["import React from \"react\";\nimport {\n  PRIMARY_COLOR,\n  SECONDARY_LIGHT_COLOR,\n} from \"../../../constants/AppColors\";\nimport { EMPTY_IMG } from \"../../../constants/AppImages\";\nimport AppButton from \"../../atoms/AppButton/AppButton\";\nimport SecondaryButton from \"../../atoms/AppButton/SecondaryButton\";\nimport AppImage from \"../AppImage/AppImage\";\n\nfunction EmptyData({\n  message = \"\",\n  hasAction = false,\n  actionLabel,\n  linkPath,\n  title=\"\",\n  image,\n  component,\n}) {\n  return (\n    <>\n      {component !== undefined ? (\n        <div\n          // style={{  }}\n          className=\"border p-5 rounded\"\n        >\n          {component}\n\n          {hasAction && (\n            <SecondaryButton\n              size=\"small\"\n              isLink\n              linkPath={linkPath}\n              style={{\n                backgroundColor: SECONDARY_LIGHT_COLOR,\n                color: \"black\",\n              }}\n            >\n              {actionLabel}\n            </SecondaryButton>\n          )}\n        </div>\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n          }}\n          className=\"border p-5 rounded\"\n        >\n          <AppImage\n            className=\"animate__animated animate__pulse mb-3\"\n            style={{ height: 70, opacity: image === undefined ? \".4\" : \"1\" }}\n            image={image === undefined ? EMPTY_IMG : image}\n          />\n          <p className=\"fs-5 text-center\" style={{ color: PRIMARY_COLOR }}>\n            {title}\n          </p>\n\n          <p className=\"fs-6 text-muted text-center\">{message}</p>\n\n          {hasAction && (\n            <SecondaryButton\n              size=\"small\"\n              isLink\n              linkPath={linkPath}\n              style={{\n                backgroundColor: SECONDARY_LIGHT_COLOR,\n                color: \"black\",\n              }}\n            >\n              {actionLabel}\n            </SecondaryButton>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default EmptyData;\n","import { Copy } from \"akar-icons\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"./PostJobSuccess.css\"\n\nfunction CopyLinkInput({ url }) {\n  const copyText = () => {\n    navigator.clipboard.writeText(url);\n    toast.info(\"Link copied\", 1000);\n  };\n  return (\n    <div>\n      <div className=\"input-group\">\n        <input\n          value={url}\n          disabled\n          type=\"text\"\n          className=\"form-control\"\n          aria-describedby=\"basic-addon1\"\n        />\n\n        <button\n          onClick={() => copyText()}\n          className=\"input-group-text\"\n          id=\"basic-addon1\"\n        >\n          <Copy />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default CopyLinkInput;\n","import React from \"react\";\nimport AppContainerFluid from \"../AppContainerFluid/AppContainerFluid\";\nimport CopyLinkInput from \"../PostJobConfirmation/CopyLinkInput\";\n\nfunction ReferModalBody({ data }) {\n  return (\n    <AppContainerFluid>\n      <center>\n        <h5>Refer a friend</h5>\n        <span className=\"text-muted\">Refer a friend to Newton Recruitment</span>\n      </center>\n\n      <div className=\"mt-3 mb-3\">\n        <CopyLinkInput url={process.env.REACT_APP_WEB_URL}></CopyLinkInput>\n      </div>\n    </AppContainerFluid>\n  );\n}\n\nexport default ReferModalBody;\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport classStyle from \"./ReferModal.module.css\";\nimport ReferModalBody from \"./ReferModalBody\";\nimport ReferModalFooter from \"./ReferModalFooter\";\n\nfunction ReferModal({ show, toggleFunction,message }) {\n  let appData = useSelector((state) => state.appData);\n  let { refer_form_array } = appData;\n  return (\n    <div>\n      <Modal\n        scrollable\n        contentClassName={classStyle.refer_modal}\n        show={show}\n        onHide={toggleFunction}\n        centered\n      >\n        <Modal.Body>\n          <ReferModalBody data={refer_form_array}></ReferModalBody>\n          <ReferModalFooter shareTitle={message} />\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ReferModal;\n","import React from \"react\";\nimport AppContainerFluid from \"../AppContainerFluid/AppContainerFluid\";\nimport AppRow from \"../AppRow/AppRow\";\nimport classStyles from \"./ReferModal.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  WhatsappShareButton,\n  TelegramShareButton,\n  TwitterShareButton,\n  LinkedinShareButton,\n  TwitterIcon,\n  WhatsappIcon,\n  FacebookIcon,\n  TelegramIcon,\n  LinkedinIcon,\n  FacebookShareButton,\n  InstapaperShareButton,\n  InstapaperIcon,\n} from \"react-share\";\n\nfunction ReferModalFooter({\n  shareUrl = process.env.REACT_APP_WEB_URL,\n  heading,\n  quote = \"Newton\",\n  shareTitle = \"Newton\",\n  hashtags = [\"newton\"],\n}) {\n  let REFERALs = [\n    {\n      id: uuidv4(),\n      component: (\n        <WhatsappShareButton title={shareTitle} url={shareUrl}>\n          <WhatsappIcon quote={quote} size={32} round={true} />\n        </WhatsappShareButton>\n      ),\n    },\n    {\n      id: uuidv4(),\n      component: (\n        <FacebookShareButton quote={quote} url={shareUrl}>\n          <FacebookIcon size={32} round={true} />\n        </FacebookShareButton>\n      ),\n    },\n\n    {\n      id: uuidv4(),\n      component: (\n        <LinkedinShareButton title={shareTitle} url={shareUrl}>\n          <LinkedinIcon size={32} round={true} />\n        </LinkedinShareButton>\n      ),\n    },\n    {\n      id: uuidv4(),\n      component: (\n        <TwitterShareButton\n          hashtags={hashtags}\n          title={shareTitle}\n          url={shareUrl}\n        >\n          <TwitterIcon size={32} round={true} />\n        </TwitterShareButton>\n      ),\n    },\n    {\n      id: uuidv4(),\n      component: (\n        <TelegramShareButton title={shareTitle} url={shareUrl}>\n          <TelegramIcon size={32} round={true} />\n        </TelegramShareButton>\n      ),\n    },\n    {\n      id: uuidv4(),\n      component: (\n        <InstapaperShareButton title={shareTitle} url={shareUrl}>\n          <InstapaperIcon size={32} round={true} />\n        </InstapaperShareButton>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <AppContainerFluid>\n        {}\n        <center>\n          <span className=\"text-muted text-center\">You can share via</span>\n        </center>\n\n        <AppRow className={classStyles.footerIcons}>\n          {REFERALs.map((ref) => {\n            return (\n              <div key={ref.id} className=\"mt-1\">\n                {ref.component}\n              </div>\n            );\n          })}\n        </AppRow>\n      </AppContainerFluid>\n    </div>\n  );\n}\n\nexport default ReferModalFooter;\n","// extracted by mini-css-extract-plugin\nexport default {\"tile\":\"TestTile_tile__NaMnm\",\"bottom\":\"TestTile_bottom__0-M52\",\"icon_div\":\"TestTile_icon_div__ObTiF\"};","import { Camera, Clock } from \"akar-icons\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { PRIMARY_COLOR } from \"../../../constants/AppColors\";\nimport AppButton from \"../../atoms/AppButton/AppButton\";\nimport AppImage from \"../AppImage/AppImage\";\nimport classStyle from \"./TestTile.module.css\";\nfunction TestTile({\n  label = \"Test 1\",\n  icon = {},\n  hasStarted = null,\n  percentageComplete,\n  recording = false,\n  duration,\n}) {\n  return (\n    <NavLink to={`/talent/tests/${label}`} className={classStyle.tile}>\n      <div className={classStyle.icon_div}>\n        <AppImage image={icon} />\n      </div>\n\n      <div className={classStyle.bottom}>\n        <span>{label}</span>\n        {recording && (\n          <>\n            <span className=\"text-muted\" style={{ fontSize: 12 }}>\n              Screen Recording\n              <Camera\n                style={{ marginLeft: 4 }}\n                color={PRIMARY_COLOR}\n                size={12}\n              />\n            </span>\n          </>\n        )}\n        {hasStarted && <span className=\"text-muted\">{percentageComplete}</span>}\n        <AppButton size=\"small\">\n          {hasStarted ? \"Continue\" : `Start Test`} ({duration} mins)\n        </AppButton>\n      </div>\n    </NavLink>\n  );\n}\n\nexport default TestTile;\n","import React from \"react\";\nimport { DUMMY_DATA } from \"../../../../../constants/dummyData/dummyData\";\nimport { generateUniqueID } from \"../../../../../constants/utils\";\nimport AppCol from \"../../../../organisms/AppCol/AppCol\";\nimport AppRow from \"../../../../organisms/AppRow/AppRow\";\nimport TestTile from \"../../../../organisms/TestTile/TestTile\";\n\nfunction TestsList() {\n  return (\n    <div>\n      {DUMMY_DATA.tests.map((test) => {\n        return (\n          <span key={generateUniqueID()}>\n            <h6>{test.label}</h6>\n\n            <AppRow>\n              {test.children.map((child) => {\n                return (\n                  <AppCol\n                    key={generateUniqueID()}\n                    size=\"4\"\n                    md_size={6}\n                    sm_size={12}\n                    lg_size={4}\n                  >\n                    <TestTile\n                      icon={child.icon}\n                      label={child.name}\n                      percentageComplete={child.percentage}\n                      hasStarted={child.isStarted}\n                      recording={child.recording}\n                      duration={child.duration}\n                    ></TestTile>\n                  </AppCol>\n                );\n              })}\n            </AppRow>\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default TestsList;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport EmptyData from \"../../../organisms/EmptyData/EmptyData\";\nimport WhiteBgDiv from \"../../../organisms/WhiteBgDiv/WhiteBgDiv\";\nimport TalentLayout from \"../../../templates/TalentLayout/TalentLayout\";\nimport TestsList from \"./pagecomponents/TestsList\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nfunction Tests() {\n  const [isMobile, SetIsMobile] = useState(false);\n\n  const TalentProfileData = useSelector((state) => state.TalentProfile);\n  let { talentState: talentSliceData } = TalentProfileData;\n  let { data: talentDataResult } = talentSliceData;\n\n  const isMobileDev = ()=>{\n    const regex = /Mobi|Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n  return regex.test(navigator.userAgent);\n  }\n\n  useEffect(() => {\n    \n    // const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n    if (isMobileDev()) {\n      SetIsMobile(true);\n      /* your code here */\n    }\n  }, []);\n  return (\n    <div>\n      <TalentLayout pageTitle=\"Tests\" pageHeaderRight={undefined}>\n        <WhiteBgDiv>\n          {isMobile ? (\n            <>\n              <div className=\"alert alert-info\">\n                This module requires you to use a laptop device or a desktop and\n                not a mobile phone\n              </div>\n            </>\n          ) : (\n            <>\n              {talentDataResult.hasOwnProperty(\"id\") ? (\n                <TestsList></TestsList>\n              ) : (\n                <EmptyData\n                  title=\"Your profile is not updated\"\n                  message=\"Cannot take test without updating your profile\"\n                ></EmptyData>\n              )}\n            </>\n          )}\n\n          {/* */}\n        </WhiteBgDiv>\n      </TalentLayout>\n    </div>\n  );\n}\n\nexport default Tests;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TALENT_IMG } from \"../../../constants/AppImages\";\nimport { NAVLINKS } from \"../../../constants/navlinks\";\nimport { generateUniqueID } from \"../../../constants/utils\";\nimport AppButton from \"../../atoms/AppButton/AppButton\";\nimport LeftNavLink from \"../../molecules/LeftNavLink/LeftNavLink\";\nimport AppCol from \"../../organisms/AppCol/AppCol\";\nimport AppContainerFluid from \"../../organisms/AppContainerFluid/AppContainerFluid\";\nimport AppNavBar from \"../../organisms/AppNavBar/AppNavBar\";\nimport PagesHeader from \"../../organisms/PagesHeader/PagesHeader\";\nimport SideNavProfile from \"../../organisms/SideNavProfile/SideNavProfile\";\nimport LeftRightPage from \"../LeftRightPage/LeftRightPage\";\nimport { logOutUser } from \"../../../app-redux/features/Auth/authSlice\";\nimport ReferModal from \"../../organisms/ReferModal/ReferModal\";\nimport { toggleReferModal } from \"../../../app-redux/features/appData/appDataSlice\";\nimport AppMobileNav from \"../../organisms/AppMobileNav/AppMobileNav\";\nimport { Logout } from \"@mui/icons-material\";\n\nconst LeftNavComponent = ({ first_name, last_name, dispatch }) => {\n  return (\n    <>\n      <div>\n        <SideNavProfile isTalent={true} name={`${first_name} ${last_name}`} />\n        {NAVLINKS.available_for_job_link.map((leftNavLink, index) => {\n          return (\n            <LeftNavLink\n              key={generateUniqueID()}\n              style={{ borderRadius: 40, marginBottom: 40 }}\n              link={leftNavLink.link}\n              image={leftNavLink.image}\n              name={leftNavLink.name}\n            ></LeftNavLink>\n          );\n        })}\n        {NAVLINKS.talent_left_links.map((leftNavLink, index) => {\n          return (\n            <LeftNavLink\n              key={generateUniqueID()}\n              link={leftNavLink.link}\n              image={leftNavLink.image}\n              name={leftNavLink.name}\n            ></LeftNavLink>\n          );\n        })}\n\n        <AppButton\n          size=\"small\"\n          onClick={() => dispatch(logOutUser())}\n          style={{ backgroundColor: \"white\", color: \"black\" }}\n        >\n          <Logout /> Logout\n        </AppButton>\n      </div>\n    </>\n  );\n};\n\nfunction TalentLayout({\n  name_of_talent,\n  showLeftNav,\n  children,\n  pageTitle = \"\",\n  pageHeaderRight = undefined,\n  loading,\n}) {\n  const authData = useSelector((state) => state.auth);\n  const appData = useSelector((state) => state.appData);\n\n  let { loginUserState } = authData;\n  let { data: userData } = loginUserState;\n  let { first_name, last_name, phone, email } = userData;\n\n  const dispatch = useDispatch();\n  return (\n    <main>\n      {/* App top nav here */}\n      <AppMobileNav\n        component={\n          <LeftNavComponent\n            last_name={last_name}\n            first_name={first_name}\n            dispatch={dispatch}\n            loading={loading}\n          />\n        }\n        isInDashboard={true}\n      />\n      <AppNavBar\n        loading={loading}\n        navTileImage={TALENT_IMG}\n        navTileTitle={`${first_name} ${last_name}`}\n        rightLinks={NAVLINKS.dashboard_talent_right_links}\n        leftLinks={NAVLINKS.dashboard_talent_links}\n      />\n      <LeftRightPage\n        Left={\n          <LeftNavComponent\n            last_name={last_name}\n            first_name={first_name}\n            dispatch={dispatch}\n          ></LeftNavComponent>\n        }\n        Right={\n          <AppContainerFluid className=\"fluid_xl\">\n            <>\n              <AppCol size=\"12\">\n                <>\n                  {/* {JSON.stringify(pageHeaderRight)} */}\n                  {pageHeaderRight !== undefined ? (\n                    <PagesHeader\n                      RightComponent={pageHeaderRight}\n                      title={pageTitle}\n                    ></PagesHeader>\n                  ) : (\n                    <PagesHeader title={pageTitle}></PagesHeader>\n                  )}\n                  {children}\n                </>\n              </AppCol>\n            </>\n          </AppContainerFluid>\n        }\n      />\n      <ReferModal\n        message=\"Newton is the new thing on the block. We assist companies looking to hire tech talents or build teams by using our AI-powered platform and data-driven technology to get the best fitting for the role.\"\n        toggleFunction={() => dispatch(toggleReferModal())}\n        show={appData.showReferFriendModal}\n      />\n    </main>\n  );\n}\n\nexport default TalentLayout;\n","// extracted by mini-css-extract-plugin\nexport default {\"refer_modal\":\"ReferModal_refer_modal__9kP4g\",\"footerIcons\":\"ReferModal_footerIcons__kNf03\"};"],"names":["_ref","_ref$message","message","_ref$hasAction","hasAction","actionLabel","linkPath","_ref$title","title","image","component","_jsx","_Fragment","children","undefined","_jsxs","className","SecondaryButton","size","isLink","style","backgroundColor","SECONDARY_LIGHT_COLOR","color","display","alignItems","flexDirection","AppImage","height","opacity","EMPTY_IMG","PRIMARY_COLOR","url","value","disabled","type","onClick","navigator","clipboard","writeText","toast","id","Copy","data","AppContainerFluid","CopyLinkInput","process","show","toggleFunction","refer_form_array","useSelector","state","appData","Modal","scrollable","contentClassName","classStyle","onHide","centered","ReferModalBody","ReferModalFooter","shareTitle","_ref$shareUrl","shareUrl","_ref$quote","heading","quote","_ref$shareTitle","_ref$hashtags","hashtags","REFERALs","uuidv4","WhatsappShareButton","WhatsappIcon","round","FacebookShareButton","FacebookIcon","LinkedinShareButton","LinkedinIcon","TwitterShareButton","TwitterIcon","TelegramShareButton","TelegramIcon","InstapaperShareButton","InstapaperIcon","AppRow","classStyles","map","ref","_ref$label","label","_ref$icon","icon","_ref$hasStarted","hasStarted","percentageComplete","_ref$recording","recording","duration","NavLink","to","concat","fontSize","Camera","marginLeft","AppButton","DUMMY_DATA","test","child","AppCol","md_size","sm_size","lg_size","TestTile","name","percentage","isStarted","generateUniqueID","_useState","useState","_useState2","_slicedToArray","isMobile","SetIsMobile","talentDataResult","TalentProfile","talentState","useEffect","userAgent","TalentLayout","pageTitle","pageHeaderRight","WhiteBgDiv","hasOwnProperty","TestsList","EmptyData","LeftNavComponent","first_name","last_name","dispatch","SideNavProfile","isTalent","NAVLINKS","leftNavLink","index","LeftNavLink","borderRadius","marginBottom","link","logOutUser","Logout","_ref2","name_of_talent","showLeftNav","_ref2$pageTitle","_ref2$pageHeaderRight","loading","authData","auth","userData","loginUserState","phone","email","useDispatch","AppMobileNav","isInDashboard","AppNavBar","navTileImage","TALENT_IMG","navTileTitle","rightLinks","leftLinks","LeftRightPage","Left","Right","PagesHeader","RightComponent","ReferModal","toggleReferModal","showReferFriendModal"],"sourceRoot":""}