{"version":3,"file":"static/js/2828.3ad8b72e.chunk.js","mappings":"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","sources":["components/pages/company/CompanyPostJob/CompanyPostJob.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js"],"sourcesContent":["import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport {\n  DeleteSkill,\n  handleOnChangeTextInput,\n  handleOnSelectInput,\n  handleRadioChange,\n  PostCompanyJob,\n  PostjobExperienceSkills,\n  preloadSkillData,\n  resetJobForm,\n  toggleDeleteSkill,\n  toggleEditSkill,\n  toggleShowPublishJobModalModal,\n  toggleShowPublishJobSuccessModalModal,\n} from \"../../../../app-redux/features/jobCompany/jobCompanySlice\";\nimport {\n  checkHasExpect_StartDateError,\n  checkMinMaxSalaryError,\n  checkObjectHasDateError,\n  checkPropertiesIsEmpty,\n  combineTwoFormData,\n  convertSkillsToFormData,\n  ExtractFieldsFromFormData,\n  JsonToformData,\n} from \"../../../../constants/utils\";\nimport { COMPANY_ROUTE } from \"../../../../routes/RouteLinks\";\nimport AppButton from \"../../../atoms/AppButton/AppButton\";\nimport EmptyData from \"../../../organisms/EmptyData/EmptyData\";\nimport PostJobConfirmation from \"../../../organisms/PostJobConfirmation/PostJobConfirmation\";\nimport PostJobSuccessModal from \"../../../organisms/PostJobConfirmation/PostJobSuccessModal\";\nimport WhiteBgDiv from \"../../../organisms/WhiteBgDiv/WhiteBgDiv\";\nimport CompanyLayout from \"../../../templates/CompanyLayout/CompanyLayout\";\nimport PostJobFormSkill from \"./pagecomponents/PostJobFormSkill\";\n\nfunction CompanyPostJob() {\n  const jobCompanyData = useSelector((state) => state.jobCompany);\n  const editCompanyData = useSelector((state) => state.editCompany);\n\n  const { companyProfile } = editCompanyData;\n  const { data: companyProfileData } = companyProfile;\n\n  const {\n    experienceSkills,\n    showPublishJobModal,\n    showPublishJobSuccessModal,\n    postCompanyJobState,\n    showDeleteSkillModal,\n    deleteSkillState,\n    skillObject,\n    showEditSkillModal,\n  } = jobCompanyData;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // preload the education page when educationObject\n\n    const _skillObject = { ...skillObject };\n    // console.log(_skillObject)\n\n    if (showEditSkillModal) {\n      dispatch(preloadSkillData(_skillObject));\n    }\n  }, [showEditSkillModal]);\n\n  useEffect(() => {\n    dispatch(resetJobForm());\n\n    return () => {\n      dispatch(resetJobForm());\n    };\n  }, []);\n\n  const { company_job_array, skill_array, postJobExpState } = jobCompanyData;\n\n  const handlePostSkill = () => {\n    // console.log(\"fff\");\n    dispatch(\n      PostjobExperienceSkills({\n        data: skill_array[0],\n      })\n    );\n  };\n\n  const handlePostJob = ({ status, callback }) => {\n    if (experienceSkills.length === 0) {\n      toast.info(\"Kindly add at least one language stack\", 1500);\n\n      return 0;\n    }\n\n    let job_data_form = ExtractFieldsFromFormData(company_job_array);\n    job_data_form[\"status\"] = status;\n\n    //  console.log(data_skill_form)\n    job_data_form = JsonToformData(job_data_form);\n\n    // add status to json\n    let data_skills = convertSkillsToFormData(experienceSkills);\n\n    let combined_data = combineTwoFormData(job_data_form, data_skills);\n    // console.log(combined_data)\n    dispatch(PostCompanyJob({ data: combined_data }))\n      .unwrap()\n      .then((res) => {\n        setTimeout(() => {\n          // console.log(res);\n          if (status === \"progress\") {\n            dispatch(toggleShowPublishJobSuccessModalModal());\n          }\n          if (callback !== undefined) {\n            callback(res.id);\n          }\n        }, 100);\n      })\n      .catch((error) => console.error(error));\n    // console.log(combined_data.values())\n  };\n\n  const handleConfirmPublishJob = () => {\n    let _object = ExtractFieldsFromFormData(company_job_array, true);\n    if (parseFloat(_object.min_salary) !== \"\") {\n      if (parseFloat(_object.min_salary) < 0) {\n        toast.info(\"Minimum salary range should not be negative\", 1500);\n        return 0;\n      }\n    }\n\n    if (parseFloat(_object.max_salary) !== \"\") {\n      if (parseFloat(_object.max_salary) < 1) {\n        toast.info(\n          \"Maximum salary range should not be negative and less than 1\",\n          1500\n        );\n        return 0;\n\n      }\n    }\n\n    let _object2 = ExtractFieldsFromFormData(\n      company_job_array,\n      true,\n      \"hasMinMaxError\"\n    );\n\n    let _object3 = ExtractFieldsFromFormData(\n      company_job_array,\n      true,\n      \"hasDateError\"\n    );\n\n    //\n\n    let checkIfDataEmpty = checkPropertiesIsEmpty(_object);\n    let checkSalaryError = checkMinMaxSalaryError(_object2);\n    let checkDates = checkHasExpect_StartDateError(_object3);\n\n    \n\n\n    // console.log({checkDates})\n    // console.log({_object})\n    // console.log({_object3})\n\n    // console.log(checkSalaryError)\n\n    if (checkSalaryError) {\n      toast.info(\"Kindly check the salary error\", 1500);\n\n      return 0;\n    }\n\n    if (checkDates) {\n      toast.info(\"Kindly check the closing  and start date error\", 1500);\n\n      return 0;\n    }\n\n    if (checkIfDataEmpty) {\n      toast.info(\"Kindly fill in all required fields\", 1500);\n\n      return 0;\n    }\n\n    if (experienceSkills.length === 0) {\n      toast.info(\"Kindly add at least one language stack\", 1500);\n\n      return 0;\n    }\n    dispatch(toggleShowPublishJobModalModal());\n  };\n\n  const handleViewJobPosted = () => {\n    dispatch(toggleShowPublishJobSuccessModalModal());\n\n    setTimeout(() => {\n      navigate(\n        `/${COMPANY_ROUTE.index}${COMPANY_ROUTE.viewJob}${postCompanyJobState.data.id}`\n      );\n    }, 1000);\n  };\n\n  const deleteSkill = () => {\n    dispatch(DeleteSkill({ id: skillObject.id }))\n      .unwrap()\n      .then((res) => {\n        dispatch(toggleDeleteSkill());\n      });\n  };\n\n  return (\n    <div>\n      <CompanyLayout pageTitle=\"Post a Job\">\n        <PostJobConfirmation\n          loading={postCompanyJobState.loading}\n          publishFn={() => handlePostJob({ status: \"progress\" })}\n          onHide={handleConfirmPublishJob}\n          viewTalentFn={() => {\n            handlePostJob({\n              status: \"draft\",\n              callback: (id) =>\n                navigate(\n                  `/${COMPANY_ROUTE.index}${COMPANY_ROUTE.view_talents}${id}?status=recommended`\n                ),\n            });\n            dispatch(toggleShowPublishJobModalModal());\n          }}\n          show={showPublishJobModal}\n        />\n\n        <PostJobSuccessModal\n          jobLink={`${process.env.REACT_APP_WEB_URL}${COMPANY_ROUTE.index}${COMPANY_ROUTE.viewJob}${postCompanyJobState.data.id}`}\n          viewJobFn={() => handleViewJobPosted()}\n          onHide={() => dispatch(toggleShowPublishJobSuccessModalModal())}\n          show={showPublishJobSuccessModal}\n        />\n        <WhiteBgDiv loading={companyProfile.loading}>\n          {companyProfileData.hasOwnProperty(\"user\") ? (\n            <>\n              <PostJobFormSkill\n                loadingAddingSkill={postJobExpState.loading}\n                // technicalSkills={}\n                handleRadioFn={handleRadioChange}\n                postingJobLoading={postCompanyJobState.loading}\n                isEdit={false}\n                form_data={company_job_array}\n                handlePostSkill={handlePostSkill}\n                handleSelectFn={handleOnSelectInput}\n                handleTextInputFn={handleOnChangeTextInput}\n                dispatch={dispatch}\n                sectionName=\"Language Stack\"\n                skillList={experienceSkills}\n                skill_data={skill_array}\n                toggleDeleteSkill={toggleDeleteSkill}\n                loading_delete={deleteSkillState.loading}\n                deleteSkill={() => {\n                  deleteSkill();\n                }}\n                showDeleteSkillModal={showDeleteSkillModal}\n                message={`Deleting Skill`}\n                onHide={() => dispatch(toggleDeleteSkill())}\n              ></PostJobFormSkill>\n\n              <AppButton\n                onClick={() => handleConfirmPublishJob()}\n                type=\"submit\"\n                label=\"Post Job\"\n              ></AppButton>\n            </>\n          ) : (\n            <>\n              {!companyProfile.loading && (\n                <EmptyData\n                  actionLabel=\"Update Company Profile\"\n                  linkPath={\"/\" + COMPANY_ROUTE.index + COMPANY_ROUTE.profile}\n                  navigation=\"#\"\n                  hasAction={true}\n                  title=\"No Company Profile\"\n                  message=\"Cannot post a job without updating company profile. Click on Update Company Profile button below to proceed.\"\n                />\n              )}\n            </>\n          )}\n        </WhiteBgDiv>\n      </CompanyLayout>\n    </div>\n  );\n}\n\nexport default CompanyPostJob;\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\n\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;"],"names":["jobCompanyData","useSelector","state","jobCompany","companyProfile","editCompany","companyProfileData","data","experienceSkills","showPublishJobModal","showPublishJobSuccessModal","postCompanyJobState","showDeleteSkillModal","deleteSkillState","skillObject","showEditSkillModal","dispatch","useDispatch","navigate","useNavigate","useEffect","_skillObject","_objectSpread","preloadSkillData","resetJobForm","company_job_array","skill_array","postJobExpState","handlePostJob","_ref","status","callback","length","toast","job_data_form","ExtractFieldsFromFormData","JsonToformData","data_skills","convertSkillsToFormData","combined_data","combineTwoFormData","PostCompanyJob","unwrap","then","res","setTimeout","toggleShowPublishJobSuccessModalModal","undefined","id","catch","error","console","handleConfirmPublishJob","_object","parseFloat","min_salary","max_salary","_object2","_object3","checkIfDataEmpty","checkPropertiesIsEmpty","checkSalaryError","checkMinMaxSalaryError","checkDates","checkHasExpect_StartDateError","toggleShowPublishJobModalModal","_jsx","children","_jsxs","CompanyLayout","pageTitle","PostJobConfirmation","loading","publishFn","onHide","viewTalentFn","concat","COMPANY_ROUTE","show","PostJobSuccessModal","jobLink","process","viewJobFn","WhiteBgDiv","hasOwnProperty","_Fragment","PostJobFormSkill","loadingAddingSkill","handleRadioFn","handleRadioChange","postingJobLoading","isEdit","form_data","handlePostSkill","PostjobExperienceSkills","handleSelectFn","handleOnSelectInput","handleTextInputFn","handleOnChangeTextInput","sectionName","skillList","skill_data","toggleDeleteSkill","loading_delete","deleteSkill","DeleteSkill","message","AppButton","onClick","type","label","EmptyData","actionLabel","linkPath","navigation","hasAction","title","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","SIZE","circularRotateKeyframe","keyframes","_templateObject","_taggedTemplateLiteral","circularDashKeyframe","_templateObject2","CircularProgressRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","capitalize","color","theme","_extends","display","transition","transitions","create","vars","palette","main","_ref2","css","_templateObject3","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","_ref3","stroke","strokeDasharray","strokeDashoffset","_ref4","_templateObject4","React","inProps","ref","useThemeProps","className","_props$color","_props$disableShrink","_props$size","size","style","_props$thickness","thickness","_props$value","value","_props$variant","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","clsx","width","height","role","viewBox","cx","cy","r","fill","strokeWidth"],"sourceRoot":""}