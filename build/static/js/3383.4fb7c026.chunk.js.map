{"version":3,"file":"static/js/3383.4fb7c026.chunk.js","mappings":"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","sources":["components/organisms/AppBackDrop/AppBackDrop.js","components/pages/homepage/AccountActivation/SuccessActivation.js","components/pages/homepage/ResetPassword/ResetPassForm.js","components/pages/homepage/ResetPassword/ResetPassword.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js"],"sourcesContent":["import { Backdrop, CircularProgress } from \"@mui/material\";\nimport React from \"react\";\n\nfunction AppBackDrop({ open }) {\n  return (\n    <div>\n      <Backdrop\n        sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={open}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n}\n\nexport default AppBackDrop;\n","import React from \"react\";\nimport { ACCOUNT_ACTIVATION_SUCCESS_SVG } from \"../../../../constants/AppSvg\";\nimport AppSVG from \"../../../organisms/AppSVG/AppSVG\";\n\nimport AppButton from \"../../../atoms/AppButton/AppButton\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { TALENT_ROUTE, COMPANY_ROUTE } from \"../../../../routes/RouteLinks\";\n\nfunction SuccessActivation({width=\"45%\", userName = \"Visitor\", type,pre_message=\"Welcome to Newton\",message=\"Your account has been activated\" }) {\n\n  const navigate = useNavigate()\n\n  const handleClickDashboardBtn=()=>{\n    navigate( type === \"talent\"\n    ? `/${TALENT_ROUTE.index}${TALENT_ROUTE.dashboard}`\n    : type === \"company\"\n    ? `/${COMPANY_ROUTE.index}${COMPANY_ROUTE.dashboard}`\n    : \"/\")\n  }\n  return (\n    <div>\n        \n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n          // width: \"45%\",\n          width:width,\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          marginBottom: \"auto\",\n          // marginTop: 100,\n        }}\n      >\n        <AppSVG\n          style={{ height: \"auto\", width: \"auto\" }}\n          data={ACCOUNT_ACTIVATION_SUCCESS_SVG}\n        ></AppSVG>\n        <h5 className=\"text-center mt-4 mb-4\">\n          {userName}, {pre_message}. {message}\n        </h5>\n        <AppButton\n        onClick={()=>handleClickDashboardBtn()}\n          // isLink={true}\n          // linkPath={`${\n           \n          // }`}\n          size=\"small\"\n        >\n          Proceed to {type} dashboard\n        </AppButton>\n        <br></br>\n        <br></br>\n\n        <Link style={{ textDecoration: \"none\" }} to=\"/\" size=\"small\">\n          Go to Home\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default SuccessActivation;\n","import React from \"react\";\nimport AppRow from \"../../../organisms/AppRow/AppRow\";\nimport AppCol from \"../../../organisms/AppCol/AppCol\";\nimport FormInputRenderer from \"../../../organisms/FormRenderer/FormInputRenderer\";\n\nfunction ResetPassForm({\n  form,\n  defaultLoginData,\n  handleTextInputChange,\n  toggleRevealPassword,\n  passwordIsVisible,\n}) {\n  const handleChange = (e) => {\n    handleTextInputChange(e);\n  };\n  return (\n    <div className=\"p-3\">\n      {Array.isArray(form) &&\n        form.map((field) => {\n          return (\n            <AppRow key={field.id}>\n              <>\n                {field.children.map((field_child, index_2) => {\n                  return (\n                    <AppCol key={index_2} sm_size=\"12\" lg_size=\"12\">\n                      <FormInputRenderer\n                        handleChange={\n                          field_child.type === \"text-input\"\n                            ? handleChange\n                            : field_child.type === \"select\"\n                            ? {}\n                            : {}\n                        }\n                        type={field_child.type}\n                        metaData={{\n                          toggleRevealPassword: toggleRevealPassword,\n                          passwordIsVisible: passwordIsVisible,\n                          value: defaultLoginData[field_child.name],\n                          className: \"loginInputs\",\n                          inputId: field.id,\n                          name: field_child.name,\n                          type: field_child.input_type,\n                          label: field_child.label,\n                          isRequired: field_child.isRequired,\n                          pattern: field_child.pattern,\n                          title: field_child.title,\n                          placeholder: field_child.placeholder,\n                        }}\n                      ></FormInputRenderer>\n                    </AppCol>\n                  );\n                })}\n              </>\n            </AppRow>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default ResetPassForm;\n","import React, { useEffect } from \"react\";\nimport AppNavBar from \"../../../organisms/AppNavBar/AppNavBar\";\nimport { Link, useParams } from \"react-router-dom\";\nimport {\n  handleChangePasswordDataChange,\n  resetPassword,\n  toggleShowPassword,\n} from \"../../../../app-redux/features/Auth/authSlice\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppBackDrop from \"../../../organisms/AppBackDrop/AppBackDrop\";\nimport { useRef } from \"react\";\nimport SuccessActivation from \"../AccountActivation/SuccessActivation\";\nimport AppContainer from \"../../../organisms/AppContainer/AppContainer\";\nimport AppRow from \"../../../organisms/AppRow/AppRow\";\nimport AppCol from \"../../../organisms/AppCol/AppCol\";\nimport { PRIMARY_COLOR } from \"../../../../constants/AppColors\";\nimport { LockOn } from \"akar-icons\";\nimport ResetPassForm from \"./ResetPassForm\";\nimport AppButton from \"../../../atoms/AppButton/AppButton\";\nimport { JsonToformData } from \"../../../../constants/utils\";\nimport { toast } from \"react-toastify\";\nimport AppMobileNav from \"../../../organisms/AppMobileNav/AppMobileNav\";\n// import { useLocation } from \"react-router-dom\";\n\nfunction ResetPassword() {\n  let dispatch = useDispatch();\n  const param1Detail = useRef(false);\n  let { param1, param2 } = useParams();\n  let [showSuccess, SetShowSuccess] = useState(false);\n  let [userName, SetUserName] = useState(\"\");\n  let [type, SetType] = useState(\"default\");\n  let [errorMessage, SetErrorMessage] = useState(null);\n\n  const authData = useSelector((state) => state.auth);\n\n  let { loginUserState } = authData;\n\n  const toggleRevealPassword = () => {\n    dispatch(toggleShowPassword());\n  };\n\n\n\n  useEffect(() => {\n    // send activation to GET URL\n\n    // param1 !== undefined &&\n    //   param2 !== undefined &&\n    //   !param1Detail.current &&\n    //   dispatch(resetPassword({ param1, param2 }))\n    //     .unwrap()\n    //     .then((res) => {\n    //       console.log(res.user);\n\n    //       SetUserName(res.user.first_name);\n    //       SetType(res.user.type);\n    //       SetShowSuccess(true);\n    //     })\n    //     .catch((e) => {\n    //       SetShowSuccess(false);\n    //       SetErrorMessage(e);\n    //     });\n\n    return () => {\n      param1Detail.current = true;\n    };\n  }, [dispatch, param1, param2]);\n\n  let { resetPassData, resetPassForm, passwordIsVisible } = authData;\n\n  const handleFormChange = (e) => {\n    // return 0\n    let { value, name } = e.target;\n\n    dispatch(handleChangePasswordDataChange({ name: name, value: value }));\n  };\n\n  const resetPasswordFn = (e) => {\n    e.preventDefault();\n    let data_ = JsonToformData(resetPassData);\n    dispatch(resetPassword({ dataToPass: data_, param1, param2 }))\n      .unwrap()\n      .then((res) => {\n        SetUserName(res.user.first_name);\n        SetType(res.user.type);\n        SetShowSuccess(true);\n      })\n      .catch((err) => {\n        SetShowSuccess(false);\n        toast.error(`Error: ${err}`);\n      });\n  };\n\n  //   let location = useLocation();\n\n  return (\n    <>\n      <AppMobileNav />\n\n      <AppNavBar />\n      <AppContainer>\n        <AppRow style={{ marginTop: 100 }}>\n          <AppCol size={3}></AppCol>\n\n          {!showSuccess &&\n          !loginUserState.isLoggedIn &&\n          !loginUserState.loading ? (\n            <AppCol size={6} className=\"shadow p-3 bg-body-tertiary rounded\">\n              <center>\n                <LockOn size={50} color={PRIMARY_COLOR} />\n              </center>\n              <h5 className=\"mt-3 mb-3 text-center\">Password Reset </h5>\n              <hr></hr>\n\n              <form className=\"auth_form\" onSubmit={(e) => resetPasswordFn(e)}>\n                <ResetPassForm\n                  toggleRevealPassword={toggleRevealPassword}\n                  passwordIsVisible={passwordIsVisible}\n                  form={resetPassForm}\n                  defaultLoginData={resetPassData}\n                  handleTextInputChange={handleFormChange}\n                ></ResetPassForm>\n\n                <AppButton className=\"w-100\" size=\"small\">\n                  Reset Password\n                </AppButton>\n              </form>\n            </AppCol>\n          ) : (\n            <>\n              {!loginUserState.isLoggedIn ? (\n                <center>\n                  {!loginUserState.loading && (\n                    <Link to=\"/\">Nothing to show here, proceed to Home</Link>\n                  )}\n                </center>\n              ) : (\n                <>\n                  {!loginUserState.isChangePassword && (\n                    <SuccessActivation\n                      width=\"70%\"\n                      type={loginUserState.data.type}\n                      message=\"\"\n                      userName={loginUserState.data.first_name}\n                      pre_message=\"You are already logged in\"\n                    ></SuccessActivation>\n                  )}\n                </>\n              )}\n            </>\n          )}\n\n          <AppCol size={3}></AppCol>\n        </AppRow>\n      </AppContainer>\n      {loginUserState.loading && <AppBackDrop open={loginUserState.loading} />}\n      {showSuccess ? (\n        <>\n          <SuccessActivation\n            width=\"70%\"\n            pre_message=\"Your password has been reset\"\n            message=\"\"\n            type={type}\n            userName={userName}\n          />\n        </>\n      ) : (\n        <>\n          {/* {!loginUserState.loading && !loginUserState.isLoggedIn && (\n            <ErrorActivation\n              showImage={false}\n              error={errorMessage}\n            ></ErrorActivation>\n          )} */}\n        </>\n      )}\n    </>\n  );\n}\n\nexport default ResetPassword;\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\n\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;"],"names":["_ref","open","_jsx","children","Backdrop","sx","color","zIndex","theme","drawer","CircularProgress","_ref$width","width","_ref$userName","userName","type","_ref$pre_message","pre_message","_ref$message","message","navigate","useNavigate","_jsxs","style","display","alignItems","justifyContent","flexDirection","marginLeft","marginRight","marginBottom","AppSVG","height","data","ACCOUNT_ACTIVATION_SUCCESS_SVG","className","AppButton","onClick","concat","TALENT_ROUTE","COMPANY_ROUTE","size","Link","textDecoration","to","form","defaultLoginData","handleTextInputChange","toggleRevealPassword","passwordIsVisible","handleChange","e","Array","isArray","map","field","AppRow","_Fragment","field_child","index_2","AppCol","sm_size","lg_size","FormInputRenderer","metaData","value","name","inputId","id","input_type","label","isRequired","pattern","title","placeholder","dispatch","useDispatch","param1Detail","useRef","_useParams","useParams","param1","param2","_useState","useState","_useState2","_slicedToArray","showSuccess","SetShowSuccess","_useState3","_useState4","SetUserName","_useState5","_useState6","SetType","_useState7","_useState8","authData","useSelector","state","auth","loginUserState","useEffect","current","resetPassData","resetPassForm","AppMobileNav","AppNavBar","AppContainer","marginTop","isLoggedIn","loading","isChangePassword","SuccessActivation","first_name","LockOn","PRIMARY_COLOR","onSubmit","preventDefault","data_","JsonToformData","resetPassword","dataToPass","unwrap","then","res","user","catch","err","toast","resetPasswordFn","ResetPassForm","toggleShowPassword","_e$target","target","handleChangePasswordDataChange","AppBackDrop","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","SIZE","circularRotateKeyframe","keyframes","_templateObject","_taggedTemplateLiteral","circularDashKeyframe","_templateObject2","CircularProgressRoot","styled","overridesResolver","props","styles","ownerState","root","variant","capitalize","_extends","transition","transitions","create","vars","palette","main","_ref2","css","_templateObject3","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","_ref3","stroke","strokeDasharray","strokeDashoffset","_ref4","_templateObject4","React","inProps","ref","useThemeProps","_props$color","_props$disableShrink","_props$size","_props$thickness","thickness","_props$value","_props$variant","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","clsx","role","viewBox","cx","cy","r","fill","strokeWidth"],"sourceRoot":""}