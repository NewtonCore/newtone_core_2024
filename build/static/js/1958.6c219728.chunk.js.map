{"version":3,"file":"static/js/1958.6c219728.chunk.js","mappings":"iMA8DA,UA1DA,WACE,IAAIA,GAAWC,EAAAA,EAAAA,MACTC,EAAaF,EAAbE,SACAC,GAAWC,EAAAA,EAAAA,MAGXC,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAClDC,GAAgCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAExCI,GAFSF,EAAA,GAAaA,EAAA,GAEDN,EAArBQ,kBAEAC,EAAmBT,EAAnBS,eAGAC,EAFSD,EAATE,KAEAD,KAuCN,OArCAE,EAAAA,EAAAA,YAAU,WAGJJ,EAAiBK,UACfJ,EAAeK,YAEJ,WAATJ,GAGAZ,EADU,YAATY,EACQ,qBAGE,IAHoB,CAAEK,SAAS,IAY3CP,EAAiBK,WAAcL,EAAiBQ,UAClC,MAAbnB,GAAoBY,EAAeQ,mBAIjCR,EAAeQ,kBAFnBnB,EAAS,IAAK,CAAEiB,SAAS,IAKvBjB,EAAS,cAADoB,OAAerB,GAAY,CAAEkB,SAAS,IAMxD,GAAG,CAACN,EAAgBd,EAAUa,KAG5BW,EAAAA,EAAAA,KAAA,OAAAC,SAAMX,EAAeK,YAAuB,WAATJ,IAAqBS,EAAAA,EAAAA,KAACE,EAAAA,GAAM,KAEnE,C","sources":["routes/Layouts/ProtectedTalent.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Outlet, useLocation, useNavigate } from \"react-router-dom\";\n\nfunction ProtectedTalent() {\n  let location = useLocation();\n  let { pathname } = location;\n  const navigate = useNavigate();\n\n  // const { redirectTo } = queryString.parse(location.search);\n  const authData = useSelector((state) => state.auth);\n  const [nextPage, setNextPage] = useState(null);\n\n  let { offlineUserToken } = authData;\n\n  let { loginUserState } = authData;\n  let { data } = loginUserState;\n\n  let { type } = data;\n\n  useEffect(() => {\n    // console.log({loginUserState})\n\n    if (offlineUserToken.userToken) {\n      if (loginUserState.isLoggedIn) {\n        // When type from the loginUser State  is talent\n        if (type !== \"talent\") {\n\n          if(type === \"company\"){\n            navigate(`/company/dashboard`, { replace: true });\n  \n            }else{\n              navigate(`/`, { replace: true });\n  \n            }\n        } else {\n        }\n      }\n    } else {\n      //when no token\n\n      if (!offlineUserToken.userToken && !offlineUserToken.loading) {\n        if (pathname === \"/\" || loginUserState.isLoggedOutButton) {\n          // setNextPage\n          navigate(`/`, { replace: true });\n        } else {\n          if (loginUserState.isLoggedOutButton) {\n            navigate(`/`, { replace: true });\n          } else {\n            navigate(`/?nextPage=${pathname}`, { replace: true });\n          }\n        }\n      } else {\n      }\n    }\n  }, [loginUserState, location, offlineUserToken]);\n\n  return (\n    <div>{loginUserState.isLoggedIn && type === \"talent\" && <Outlet />}</div>\n  );\n}\n\nexport default ProtectedTalent;\n// && type === \"talent\"\n"],"names":["location","useLocation","pathname","navigate","useNavigate","authData","useSelector","state","auth","_useState","useState","_useState2","_slicedToArray","offlineUserToken","loginUserState","type","data","useEffect","userToken","isLoggedIn","replace","loading","isLoggedOutButton","concat","_jsx","children","Outlet"],"sourceRoot":""}