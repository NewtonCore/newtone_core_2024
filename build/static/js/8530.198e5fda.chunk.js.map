{"version":3,"file":"static/js/8530.198e5fda.chunk.js","mappings":"sLAgEA,UA5DA,WACE,IAAIA,GAAWC,EAAAA,EAAAA,MACTC,EAAaF,EAAbE,SACAC,GAAWC,EAAAA,EAAAA,MAIXC,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAE5CC,EAAqBJ,EAArBI,iBAEAC,EAAmBL,EAAnBK,eAIAC,EAHSD,EAATE,KAGAD,KAwCN,OAtCAE,EAAAA,EAAAA,YAAU,WAEJJ,EAAiBK,UACfJ,EAAeK,YACJ,YAATJ,GAIFR,EADY,WAATQ,EACM,oBAGE,IAHmB,CAAEK,SAAS,IAaxCP,EAAiBK,WAAcL,EAAiBQ,UAElC,MAAbf,GAIEQ,EAAeQ,kBAFnBf,EAAS,IAAK,CAAEa,SAAS,IAKvBb,EAAS,cAADgB,OAAejB,GAAY,CAAEc,SAAS,IAMxD,GAAG,CAACN,EAAgBV,EAAUS,KAG5BW,EAAAA,EAAAA,KAAA,OAAAC,SAAMX,EAAeK,YAAuB,YAATJ,IAAsBS,EAAAA,EAAAA,KAACE,EAAAA,GAAM,KAEpE,C","sources":["routes/Layouts/ProtectedCompany.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {  useSelector } from \"react-redux\";\nimport { Outlet, useLocation, useNavigate } from \"react-router-dom\";\n\nfunction Protectedcompany() {\n  let location = useLocation();\n  let { pathname } = location;\n  const navigate = useNavigate();\n\n\n  // const { redirectTo } = queryString.parse(location.search);\n  const authData = useSelector((state) => state.auth);\n\n  let { offlineUserToken } = authData;\n\n  let { loginUserState } = authData;\n  let { data } = loginUserState;\n  // let { user } = data;\n\n  let { type } = data;\n\n  useEffect(() => {\n    // console.log({loginUserState})\n    if (offlineUserToken.userToken) {\n      if (loginUserState.isLoggedIn) {\n        if (type !== \"company\") {\n          // When type from the loginUser State  is talent\n\n          if(type === \"talent\"){\n          navigate(`/talent/dashboard`, { replace: true });\n\n          }else{\n            navigate(`/`, { replace: true });\n\n          }\n        } else {\n          // console.log(\"company\");\n        }\n      }\n    } else {\n      //when no token\n\n      if (!offlineUserToken.userToken && !offlineUserToken.loading) {\n        // console.log(\"token null and loading null\");\n        if (pathname === \"/\") {\n          // setNextPage\n          navigate(`/`, { replace: true });\n        } else {\n          if (loginUserState.isLoggedOutButton) {\n            navigate(`/`, { replace: true });\n          } else {\n            navigate(`/?nextPage=${pathname}`, { replace: true });\n          }\n        }\n      } else {\n      }\n    }\n  }, [loginUserState, location, offlineUserToken]);\n\n  return (\n    <div>{loginUserState.isLoggedIn && type === \"company\" && <Outlet />}</div>\n  );\n}\n\nexport default Protectedcompany;\n// && type === \"company\"\n"],"names":["location","useLocation","pathname","navigate","useNavigate","authData","useSelector","state","auth","offlineUserToken","loginUserState","type","data","useEffect","userToken","isLoggedIn","replace","loading","isLoggedOutButton","concat","_jsx","children","Outlet"],"sourceRoot":""}