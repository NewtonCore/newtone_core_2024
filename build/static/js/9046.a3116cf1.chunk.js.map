{"version":3,"file":"static/js/9046.a3116cf1.chunk.js","mappings":"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","sources":["webpack://newton-recruitment/./src/components/pages/company/CompanyProfile/CompanyEdit.module.css?daad","components/pages/company/CompanyProfile/CompanyEditProfileForm.js","components/pages/company/CompanyProfile/CompanyEditProfile.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"red_input\":\"CompanyEdit_red_input__p9TqJ\",\"modal_90w\":\"CompanyEdit_modal_90w__ICoED\"};","import React from \"react\";\n\nimport AppCol from \"../../../organisms/AppCol/AppCol\";\nimport AppRow from \"../../../organisms/AppRow/AppRow\";\nimport FormInputRenderer from \"../../../organisms/FormRenderer/FormInputRenderer\";\nimport classStyle from \"./CompanyEdit.module.css\";\n\nimport {\n  handleTextInputCheckEmptyValueFn,\n  handleValidateUrl,\n} from \"../../../../app-redux/features/editCompanyProfile/editCompanyProfileSlice\";\nimport { useSelector } from \"react-redux\";\n\nfunction CompanyEditProfileForm({\n  data,\n  handleTextInputFn,\n  handleFileChange,\n  handleOnSelectInput,\n  dispatch,\n  profile_logo,\n}) {\n  const appData = useSelector((state) => state.appData);\n\n  const { appCountriesState } = appData;\n\n  const { data: world_countries } = appCountriesState;\n\n\n  let handleSelectChange = (value, meta) => {\n    const { RowKey, ChildKey } = meta;\n\n    dispatch(\n      handleOnSelectInput({\n        state: \"biodata\",\n        valueToUpdate: JSON.parse(value),\n        RowKey: RowKey,\n        ChildKey,\n      })\n    );\n  };\n\n  let handleTextChange = (e, meta) => {\n    let { value, name } = e.target;\n    const { RowKey, ChildKey } = meta;\n\n    dispatch(\n      handleTextInputFn({\n        state: \"biodata\",\n        valueToUpdate: value,\n        KeyName: name,\n        RowKey: RowKey,\n        ChildKey,\n      })\n    );\n  };\n\n  let handleOnBlur = (e, meta) => {\n    let { value, name } = e.target;\n\n    const { DataKey, RowKey, ChildKey } = meta;\n    dispatch(handleValidateUrl({ state: \"biodata\" }));\n    dispatch(\n      handleTextInputCheckEmptyValueFn({\n        state: \"biodata\",\n        valueToUpdate: value,\n        KeyName: name,\n        RowKey,\n        ChildKey,\n        DataKey,\n      })\n    );\n  };\n\n  const handleFileInputChange = (e, metaData, file) => {\n    const { RowKey, ChildKey } = metaData;\n    dispatch(\n      handleFileChange({\n        state: \"biodata\",\n        valueToUpdate: file,\n        RowKey: RowKey,\n        ChildKey,\n      })\n    );\n  };\n\n  return (\n    <>\n      {data.map((field, index) => {\n        return (\n          <AppRow className=\"gx-5\" key={index}>\n            <>\n              {/* {JSON.stringify(dataToSend)} */}\n\n              {field.children.map((field_child, index_2) => {\n                return (\n                  <AppCol size={12 / field.columns} key={index_2}>\n                    {/* {JSON.stringify(field_child)} */}\n                    <FormInputRenderer\n                      onBlurValidation={\n                        field_child.type === \"text-input\" ||\n                        field_child.type === \"text-area-tiny\"\n                          ? handleOnBlur\n                          : {}\n                      }\n                      handleChange={\n                        field_child.type === \"text-input\" ||\n                        field_child.type === \"text-area\" ||\n                        field_child.type === \"text-area-tiny\"\n                          ? handleTextChange\n                          : field_child.type === \"image\"\n                          ? handleFileInputChange\n                          : field_child.type === \"r-select\"\n                          ? handleSelectChange\n                          : {}\n                      }\n                      type={field_child.type}\n                      metaData={{\n                        meta: { RowKey: index, ChildKey: index_2 },\n                        label: field_child.label,\n                        value:\n                            field_child.name === \"country\"\n                              ? typeof field_child.value === \"object\" &&\n                                field_child.value !== null\n                                ? field_child.value.iso\n                                :field_child.value\n                              : field_child.value,\n                        data:\n                          field_child.name === \"country\"\n                            ? Array.isArray(world_countries) &&\n                              world_countries.map((data) => data)\n                            : field_child.data,\n                       \n                        valueName:\n                          field_child.name === \"country\" ? \"name\" : undefined,\n                        optionValue:\n                          field_child.name === \"country\" ? \"iso\" : undefined,\n                        combineNameID:\n                          field_child.name === \"currency\" ? true : false,\n                        name: field_child.name,\n                        input_type: field_child.input_type,\n                        type: field_child.input_type,\n                        profile_logo:\n                          field_child.name === \"logo\" ? profile_logo : \"\",\n                        disabled: field_child.disabled,\n                        isRequired: field_child.isRequired,\n                        errorMessage:\n                          field_child.errorMessage ||\n                          field_child.URLErrorMessage,\n                        className:\n                          field_child.hasError ||\n                          field_child.hasURLError ? classStyle.red_input : \"\",\n                      }}\n                    ></FormInputRenderer>\n                  </AppCol>\n                );\n              })}\n            </>\n          </AppRow>\n        );\n      })}\n    </>\n  );\n}\n\nexport default CompanyEditProfileForm;\n","import { Backdrop, CircularProgress } from \"@mui/material\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  EditCompanyProfile,\n  handleOnChangeFileInputCompany,\n  handleOnChangeTextInputCompany,\n  handleOnSelectInput,\n  preloadCompanyData,\n} from \"../../../../app-redux/features/editCompanyProfile/editCompanyProfileSlice\";\nimport {\n  ExtractFieldsFromFormData,\n  SpreadCompanyUserDetails,\n  checkObjectHasURLerror,\n  checkPropertiesIsEmpty,\n} from \"../../../../constants/utils\";\nimport AppButton from \"../../../atoms/AppButton/AppButton\";\nimport WhiteBgDiv from \"../../../organisms/WhiteBgDiv/WhiteBgDiv\";\nimport CompanyLayout from \"../../../templates/CompanyLayout/CompanyLayout\";\nimport CompanyEditProfileForm from \"./CompanyEditProfileForm\";\nimport { toast } from \"react-toastify\";\n\nfunction CompanyEditProfile() {\n  const editCompanyData = useSelector((state) => state.editCompany);\n  const authData = useSelector((state) => state.auth);\n  let { loginUserState } = authData;\n  let { data: userData } = loginUserState;\n\n  const { companyProfile, editProfileState } = editCompanyData;\n  const { data: companyProfileData } = companyProfile;\n  // const {results:companyProfileResult} = companyProfileData;\n\n  const { company_profile_array } = editCompanyData;\n  const dispatch = useDispatch();\n\n  const PostEditCompanyProfile = () => {\n    // dispatch(handleValidateUrl({ state: \"biodata\" }));\n\n    let _object = ExtractFieldsFromFormData(company_profile_array, true);\n\n    let _object2 = ExtractFieldsFromFormData(\n      company_profile_array,\n      true,\n      \"hasURLError\"\n    );\n    let checkURLError = checkObjectHasURLerror(_object2, \"company_website\");\n    let checkIfDataEmpty = checkPropertiesIsEmpty(_object);\n    // console.log(_object2,checkURLError)\n\n    if (checkURLError) {\n      setTimeout(() => {\n        toast.warning(\"The Projects URL is invalid\", 1500);\n      }, 500);\n\n      return 0;\n    }\n\n    if (checkIfDataEmpty) {\n      setTimeout(() => {\n        toast.warning(\"Kindly fill in the required fields\", 1500);\n      }, 500);\n\n      return 0;\n    }\n\n    //handle posting the data to the api\n    dispatch(\n      EditCompanyProfile({\n        data: company_profile_array,\n        hasProfile: companyProfileData.length !== 0 ? true : false,\n        companyID: companyProfileData.id,\n      })\n    );\n  };\n\n  useEffect(() => {\n    // Handle preloading the data from the profile of the company to the form\n    if (companyProfileData.length !== 0) {\n      // companyProfileData.first_name = userData.first_name\n      // companyProfileData.last_name = userData.last_name\n\n      dispatch(preloadCompanyData(userData));\n      dispatch(\n        preloadCompanyData(SpreadCompanyUserDetails(companyProfileData))\n      );\n    } else {\n      dispatch(preloadCompanyData(userData));\n    }\n  }, [companyProfileData, userData]);\n\n  return (\n    <CompanyLayout pageTitle=\"Edit Profile\">\n      <div id=\"edit_profile_div\">\n        <WhiteBgDiv>\n          {/* SS {JSON.stringify(company_profile_array)} */}\n\n          <Backdrop\n            sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n            open={\n              editProfileState.loading !== null\n                ? editProfileState.loading\n                : false\n            }\n          >\n            <CircularProgress color=\"inherit\" />\n          </Backdrop>\n          <CompanyEditProfileForm\n            profile_logo={\n              companyProfileData.logo !== null ? companyProfileData.logo : null\n            }\n            handleOnSelectInput={handleOnSelectInput}\n            dispatch={dispatch}\n            handleTextInputFn={handleOnChangeTextInputCompany}\n            handleFileChange={handleOnChangeFileInputCompany}\n            data={company_profile_array}\n          />\n          <AppButton\n            onClick={() => PostEditCompanyProfile()}\n            label=\"Save Profile\"\n          ></AppButton>\n        </WhiteBgDiv>\n      </div>\n    </CompanyLayout>\n  );\n}\n\nexport default CompanyEditProfile;\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\n\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;"],"names":["_ref","data","handleTextInputFn","handleFileChange","handleOnSelectInput","dispatch","profile_logo","world_countries","useSelector","state","appData","appCountriesState","handleSelectChange","value","meta","RowKey","ChildKey","valueToUpdate","JSON","parse","handleTextChange","e","_e$target","target","name","KeyName","handleOnBlur","_e$target2","DataKey","handleValidateUrl","handleTextInputCheckEmptyValueFn","handleFileInputChange","metaData","file","_jsx","_Fragment","children","map","field","index","AppRow","className","field_child","index_2","AppCol","size","columns","FormInputRenderer","onBlurValidation","type","handleChange","label","iso","Array","isArray","valueName","undefined","optionValue","combineNameID","input_type","disabled","isRequired","errorMessage","URLErrorMessage","hasError","hasURLError","classStyle","editCompanyData","editCompany","userData","auth","loginUserState","companyProfile","editProfileState","companyProfileData","company_profile_array","useDispatch","useEffect","length","preloadCompanyData","SpreadCompanyUserDetails","CompanyLayout","pageTitle","id","_jsxs","WhiteBgDiv","Backdrop","sx","color","zIndex","theme","drawer","open","loading","CircularProgress","CompanyEditProfileForm","logo","handleOnChangeTextInputCompany","handleOnChangeFileInputCompany","AppButton","onClick","_object","ExtractFieldsFromFormData","_object2","checkURLError","checkObjectHasURLerror","checkIfDataEmpty","checkPropertiesIsEmpty","setTimeout","toast","EditCompanyProfile","hasProfile","companyID","PostEditCompanyProfile","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","SIZE","circularRotateKeyframe","keyframes","_templateObject","_taggedTemplateLiteral","circularDashKeyframe","_templateObject2","CircularProgressRoot","styled","overridesResolver","props","styles","ownerState","root","variant","concat","capitalize","_extends","display","transition","transitions","create","vars","palette","main","_ref2","css","_templateObject3","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","_ref3","stroke","strokeDasharray","strokeDashoffset","_ref4","_templateObject4","React","inProps","ref","useThemeProps","_props$color","_props$disableShrink","_props$size","style","_props$thickness","thickness","_props$value","_props$variant","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","clsx","width","height","role","viewBox","cx","cy","r","fill","strokeWidth"],"sourceRoot":""}