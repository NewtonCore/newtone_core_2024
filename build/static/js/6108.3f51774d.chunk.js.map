{"version":3,"file":"static/js/6108.3f51774d.chunk.js","mappings":"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","sources":["webpack://newton-recruitment/./src/components/organisms/AppBreadcrumb/AppBreadcrumb.module.css?b4a8","components/organisms/AppBreadcrumb/AppBreadcrumb.js","components/organisms/AppBreadcrumb/AppBreadcrumbItem.js","components/organisms/EmptyData/EmptyData.js","components/organisms/PostJobConfirmation/CopyLinkInput.js","components/organisms/ReferModal/ReferModalBody.js","components/organisms/ReferModal/ReferModal.js","components/organisms/ReferModal/ReferModalFooter.js","webpack://newton-recruitment/./src/components/organisms/SkillsTile/SkillTile.module.css?2a6c","components/organisms/SkillsTile/SkillsTileTest.js","components/pages/applicant/Tests/pagecomponents/SkillsList.js","components/pages/applicant/Tests/SearchSkill.js","components/pages/applicant/Tests/StepTwoAllStacks.js","components/pages/applicant/Tests/TestStepTwo.js","components/templates/TalentLayout/TalentLayout.js","webpack://newton-recruitment/./src/components/organisms/ReferModal/ReferModal.module.css?2077"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"breadcrumb\":\"AppBreadcrumb_breadcrumb__zRqbK\"};","import React from \"react\";\nimport classStyle  from \"./AppBreadcrumb.module.css\";\n\nfunction AppBreadcrumb({ children }) {\n  return (\n    <div className={classStyle.breadcrumb}>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">{children}</ol>\n      </nav>\n    </div>\n  );\n}\n\nexport default AppBreadcrumb;\n\n\n// style=\"--bs-breadcrumb-divider: '>';\"","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction AppBreadcrumbItem({ label = \"\", active = null, to = \"#\" }) {\n  const liClass = \"breadcrumb-item\";\n  return (\n    <>\n      {active ? (\n        <li className={`${liClass} ${active && \"active\"}`} aria-current=\"page\">\n        {label}\n        </li>\n      ) : (\n        <li className=\"breadcrumb-item\">\n          <NavLink className=\"test\" to={to}>{label}</NavLink>\n        </li>\n      )}\n    </>\n  );\n}\n\nexport default AppBreadcrumbItem;\n","import React from \"react\";\nimport {\n  PRIMARY_COLOR,\n  SECONDARY_LIGHT_COLOR,\n} from \"../../../constants/AppColors\";\nimport { EMPTY_IMG } from \"../../../constants/AppImages\";\nimport AppButton from \"../../atoms/AppButton/AppButton\";\nimport SecondaryButton from \"../../atoms/AppButton/SecondaryButton\";\nimport AppImage from \"../AppImage/AppImage\";\n\nfunction EmptyData({\n  message = \"\",\n  hasAction = false,\n  actionLabel,\n  linkPath,\n  title=\"\",\n  image,\n  component,\n}) {\n  return (\n    <>\n      {component !== undefined ? (\n        <div\n          // style={{  }}\n          className=\"border p-5 rounded\"\n        >\n          {component}\n\n          {hasAction && (\n            <SecondaryButton\n              size=\"small\"\n              isLink\n              linkPath={linkPath}\n              style={{\n                backgroundColor: SECONDARY_LIGHT_COLOR,\n                color: \"black\",\n              }}\n            >\n              {actionLabel}\n            </SecondaryButton>\n          )}\n        </div>\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n          }}\n          className=\"border p-5 rounded\"\n        >\n          <AppImage\n            className=\"animate__animated animate__pulse mb-3\"\n            style={{ height: 70, opacity: image === undefined ? \".4\" : \"1\" }}\n            image={image === undefined ? EMPTY_IMG : image}\n          />\n          <p className=\"fs-5 text-center\" style={{ color: PRIMARY_COLOR }}>\n            {title}\n          </p>\n\n          <p className=\"fs-6 text-muted text-center\">{message}</p>\n\n          {hasAction && (\n            <SecondaryButton\n              size=\"small\"\n              isLink\n              linkPath={linkPath}\n              style={{\n                backgroundColor: SECONDARY_LIGHT_COLOR,\n                color: \"black\",\n              }}\n            >\n              {actionLabel}\n            </SecondaryButton>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default EmptyData;\n","import { Copy } from \"akar-icons\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"./PostJobSuccess.css\"\n\nfunction CopyLinkInput({ url }) {\n  const copyText = () => {\n    navigator.clipboard.writeText(url);\n    toast.info(\"Link copied\", 1000);\n  };\n  return (\n    <div>\n      <div className=\"input-group\">\n        <input\n          value={url}\n          disabled\n          type=\"text\"\n          className=\"form-control\"\n          aria-describedby=\"basic-addon1\"\n        />\n\n        <button\n          onClick={() => copyText()}\n          className=\"input-group-text\"\n          id=\"basic-addon1\"\n        >\n          <Copy />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default CopyLinkInput;\n","import React from \"react\";\nimport AppContainerFluid from \"../AppContainerFluid/AppContainerFluid\";\nimport CopyLinkInput from \"../PostJobConfirmation/CopyLinkInput\";\n\nfunction ReferModalBody({ data }) {\n  return (\n    <AppContainerFluid>\n      <center>\n        <h5>Refer a friend</h5>\n        <span className=\"text-muted\">Refer a friend to Newton Recruitment</span>\n      </center>\n\n      <div className=\"mt-3 mb-3\">\n        <CopyLinkInput url={process.env.REACT_APP_WEB_URL}></CopyLinkInput>\n      </div>\n    </AppContainerFluid>\n  );\n}\n\nexport default ReferModalBody;\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport classStyle from \"./ReferModal.module.css\";\nimport ReferModalBody from \"./ReferModalBody\";\nimport ReferModalFooter from \"./ReferModalFooter\";\n\nfunction ReferModal({ show, toggleFunction,message }) {\n  let appData = useSelector((state) => state.appData);\n  let { refer_form_array } = appData;\n  return (\n    <div>\n      <Modal\n        scrollable\n        contentClassName={classStyle.refer_modal}\n        show={show}\n        onHide={toggleFunction}\n        centered\n      >\n        <Modal.Body>\n          <ReferModalBody data={refer_form_array}></ReferModalBody>\n          <ReferModalFooter shareTitle={message} />\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ReferModal;\n","import React from \"react\";\nimport AppContainerFluid from \"../AppContainerFluid/AppContainerFluid\";\nimport AppRow from \"../AppRow/AppRow\";\nimport classStyles from \"./ReferModal.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  WhatsappShareButton,\n  TelegramShareButton,\n  TwitterShareButton,\n  LinkedinShareButton,\n  TwitterIcon,\n  WhatsappIcon,\n  FacebookIcon,\n  TelegramIcon,\n  LinkedinIcon,\n  FacebookShareButton,\n  InstapaperShareButton,\n  InstapaperIcon,\n} from \"react-share\";\n\nfunction ReferModalFooter({\n  shareUrl = process.env.REACT_APP_WEB_URL,\n  heading,\n  quote = \"Newton\",\n  shareTitle = \"Newton\",\n  hashtags = [\"newton\"],\n}) {\n  let REFERALs = [\n    {\n      id: uuidv4(),\n      component: (\n        <WhatsappShareButton title={shareTitle} url={shareUrl}>\n          <WhatsappIcon quote={quote} size={32} round={true} />\n        </WhatsappShareButton>\n      ),\n    },\n    {\n      id: uuidv4(),\n      component: (\n        <FacebookShareButton quote={quote} url={shareUrl}>\n          <FacebookIcon size={32} round={true} />\n        </FacebookShareButton>\n      ),\n    },\n\n    {\n      id: uuidv4(),\n      component: (\n        <LinkedinShareButton title={shareTitle} url={shareUrl}>\n          <LinkedinIcon size={32} round={true} />\n        </LinkedinShareButton>\n      ),\n    },\n    {\n      id: uuidv4(),\n      component: (\n        <TwitterShareButton\n          hashtags={hashtags}\n          title={shareTitle}\n          url={shareUrl}\n        >\n          <TwitterIcon size={32} round={true} />\n        </TwitterShareButton>\n      ),\n    },\n    {\n      id: uuidv4(),\n      component: (\n        <TelegramShareButton title={shareTitle} url={shareUrl}>\n          <TelegramIcon size={32} round={true} />\n        </TelegramShareButton>\n      ),\n    },\n    {\n      id: uuidv4(),\n      component: (\n        <InstapaperShareButton title={shareTitle} url={shareUrl}>\n          <InstapaperIcon size={32} round={true} />\n        </InstapaperShareButton>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <AppContainerFluid>\n        {}\n        <center>\n          <span className=\"text-muted text-center\">You can share via</span>\n        </center>\n\n        <AppRow className={classStyles.footerIcons}>\n          {REFERALs.map((ref) => {\n            return (\n              <div key={ref.id} className=\"mt-1\">\n                {ref.component}\n              </div>\n            );\n          })}\n        </AppRow>\n      </AppContainerFluid>\n    </div>\n  );\n}\n\nexport default ReferModalFooter;\n","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"SkillTile_image__pfMOZ\",\"image_div\":\"SkillTile_image_div__uyKCL\",\"skill_tile\":\"SkillTile_skill_tile__sJqwL\",\"myText\":\"SkillTile_myText__EDlgx\"};","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { WHITE_COLOR } from \"../../../constants/AppColors\";\nimport AppButton from \"../../atoms/AppButton/AppButton\";\nimport AppImage from \"../AppImage/AppImage\";\nimport classStyle from \"./SkillTile.module.css\";\n\nfunction SkillsTileTest({ image = {}, text = \"\", skillID, testID }) {\n\n  return (\n    <a\n      href={`/talent/tests/${testID}/${skillID}`}\n      className={classStyle.skill_tile}\n    >\n      <div className={classStyle.image_div}>\n        <div className={classStyle.image}>\n          <center>\n            <AppImage image={image}></AppImage>\n          </center>\n        </div>\n      </div>\n      <center>\n        <div className={classStyle.myText}>\n          <>{text}</>\n        </div>\n      </center>\n      <br></br>\n      <AppButton\n        backgroundColor={WHITE_COLOR}\n        color=\"transparent\"\n        size=\"small\"\n        label=\"Start\"\n      />\n    </a>\n  );\n}\n\nexport default SkillsTileTest;\n","import React from \"react\";\nimport AppCol from \"../../../../organisms/AppCol/AppCol\";\nimport AppRow from \"../../../../organisms/AppRow/AppRow\";\nimport SkillsTileTest from \"../../../../organisms/SkillsTile/SkillsTileTest\";\n\nfunction SkillsList({ skills, testID,size=3 }) {\n  return (\n    <div>\n      <AppRow>\n        {skills.map((skill, index) => {\n          return (\n            <AppCol\n              key={skill.id === undefined ? index : skill.id}\n              size={size}\n              sm_size={6}\n              md_size={4}\n              xs_size={6}\n              lg_size={4}\n            >\n              <SkillsTileTest\n                testID={testID}\n                skillID={skill.id}\n                image={skill.picture}\n                text={skill.name}\n              ></SkillsTileTest>\n            </AppCol>\n          );\n        })}\n      </AppRow>\n    </div>\n  );\n}\n\nexport default SkillsList;","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport AppCol from \"../../../organisms/AppCol/AppCol\";\nimport AppRow from \"../../../organisms/AppRow/AppRow\";\nimport FormInputRenderer from \"../../../organisms/FormRenderer/FormInputRenderer\";\n\nfunction SearchSkill({ data, handleSearch = {},handleTextInputFn={} }) {\n  const dispatch = useDispatch();\n\n  let handleTextChange = (e, meta) => {\n    let { value, name } = e.target;\n    const {  RowKey, ChildKey } = meta;\n    \n\n    handleSearch(value)\n    dispatch(\n      handleTextInputFn({\n        state: \"search\",\n        valueToUpdate: value,\n        KeyName: name,\n        RowKey: RowKey,\n        ChildKey,\n      })\n    );\n  };\n\n  return (\n    <div>\n      {/* {JSON.stringify(handleTextInputFn)} */}\n      {Array.isArray(data) &&\n        data.map((field, form_index) => {\n          return (\n            <AppRow className=\"gx-5\" key={field.id}>\n              {field.children.map((field_child, child_index) => {\n                if (field_child.hidden !== true) {\n                  return (\n                    <AppCol size={12 / field.colums} key={field_child.id}>\n                      {/* {JSON.stringify(field_child)} */}\n                      <FormInputRenderer\n                        handleChange={\n                          field_child.type === \"text-input\"\n                            ? handleTextChange\n                            : {}\n                        }\n                        type={field_child.type}\n                        metaData={{\n                          meta: { RowKey: form_index, ChildKey: child_index },\n                          label: field_child.label,\n                          value: field_child.value,\n                          name: field_child.name,\n                          input_type: field_child.input_type,\n\n                          inputId: \"settings_input_fields\",\n                          data: field_child.data,\n                          type: field_child.input_type,\n                          isRequired: field_child.isRequired,\n                          maxlength: field_child.maxlength,\n                          disabled: field_child.disabled,\n                          min: field_child.min,\n                          errorMessage: field_child.errorMessage,\n                          placeholder: field_child.placeholder,\n                        }}\n                      ></FormInputRenderer>\n                    </AppCol>\n\n                    // </div>\n                  );\n                }\n              })}\n            </AppRow>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default SearchSkill;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSkillFilter } from \"../../../../app-redux/features/Skill/skillSlice\";\nimport {\n  BLACK_COLOR,\n  PRIMARY_COLOR,\n  SECONDARY_LIGHT_COLOR,\n  WHITE_COLOR,\n} from \"../../../../constants/AppColors\";\nimport { DUMMY_DATA } from \"../../../../constants/dummyData/dummyData\";\nimport { SearchFilterFunc } from \"../../../../constants/utils\";\nimport SecondaryButton from \"../../../atoms/AppButton/SecondaryButton\";\nimport EmptyData from \"../../../organisms/EmptyData/EmptyData\";\nimport SkillsList from \"./pagecomponents/SkillsList\";\nimport SearchSkill from \"./SearchSkill\";\n\nfunction StepTwoAllStacks({\n  testID,\n  skills,\n  filter,\n  skill_search_form,\n  handleTextInputFn,\n}) {\n  let dispatch = useDispatch();\n  let [q_search, SetQSearch] = useState(\"\");\n\n  let [final_skills, SetFinalSkill] = useState(skills);\n\n  let handleSearch = (search) => {\n    SetQSearch(search);\n    final_skills = SearchFilterFunc(search, skills);\n    // console.log(search)\n    // console.log(final_skills)\n  };\n\n  useEffect(() => {\n    SetFinalSkill(skills);\n    q_search = q_search.replace(/\\s+/g, \" \");\n\n    if (q_search !== \"\") {\n      // console.log(q_search.length)\n      SetFinalSkill(SearchFilterFunc(q_search, final_skills));\n    } else {\n      SetFinalSkill(skills);\n    }\n  }, [q_search]);\n\n  useEffect(() => {\n    if (filter !== \"all\") {\n      SetFinalSkill(\n        skills.filter((skill) => {\n          return skill.type === filter;\n        })\n      );\n    } else {\n      SetFinalSkill(skills);\n    }\n  }, [filter]);\n\n  //   final_skills =\n  //     filter !== \"all\"\n  //       ? final_skills.filter((skill) => {\n  //           return skill.type === filter;\n  //         })\n  //       : final_skills;\n\n  return (\n    <div>\n      <div className=\"mb-3\">\n        {DUMMY_DATA.SKILL_TYPES.map((type, index) => {\n          return (\n            <>\n              <SecondaryButton\n                key={index}\n                onClick={() => dispatch(toggleSkillFilter(type))}\n                style={{\n                  marginRight: 10,\n                  color: filter === type ? WHITE_COLOR : BLACK_COLOR,\n                }}\n                backgroundColor={\n                  filter === type ? PRIMARY_COLOR : SECONDARY_LIGHT_COLOR\n                }\n                color=\"black\"\n              >\n                {type}\n              </SecondaryButton>\n            </>\n          );\n        })}\n\n        <SearchSkill\n          handleTextInputFn={handleTextInputFn}\n          handleSearch={handleSearch}\n          data={skill_search_form}\n        />\n      </div>\n      <SkillsList size={3} testID={testID} skills={final_skills} />\n\n      {final_skills.length === 0 && (\n        <>\n          <EmptyData\n            message=\"Try another skill type or search\"\n            title={`No skills found`}\n          ></EmptyData>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default StepTwoAllStacks;\n","import React from \"react\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { handleOnChangeTextInput } from \"../../../../app-redux/features/Skill/skillSlice\";\nimport { TALENT_ROUTE } from \"../../../../routes/RouteLinks\";\nimport AppBreadcrumb from \"../../../organisms/AppBreadcrumb/AppBreadcrumb\";\nimport AppBreadcrumbItem from \"../../../organisms/AppBreadcrumb/AppBreadcrumbItem\";\nimport EmptyData from \"../../../organisms/EmptyData/EmptyData\";\nimport WhiteBgDiv from \"../../../organisms/WhiteBgDiv/WhiteBgDiv\";\nimport TalentLayout from \"../../../templates/TalentLayout/TalentLayout\";\nimport SkillsList from \"./pagecomponents/SkillsList\";\nimport StepTwoAllStacks from \"./StepTwoAllStacks\";\nimport \"./TestStepTwo.css\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nfunction TestStepTwo() {\n  const [isMobile, SetIsMobile] = useState(false);\n\n  const TalentProfileData = useSelector((state) => state.TalentProfile);\n  let { talentSkills } = TalentProfileData;\n  let { data: talentSkillsData } = talentSkills;\n  let { results: skillsResults } = talentSkillsData;\n\n  if (skillsResults !== undefined) {\n    skillsResults  = skillsResults.filter((sr)=>{\n      return sr.skill !==null\n    })\n    \n    skillsResults = skillsResults.map((skill) => {\n      return {\n        ...skill,\n        skill_code: skill.skill.code,\n        name: skill.skill.name,\n        picture: skill.skill.picture,\n        type: skill.skill.type,\n        id: skill.skill.id,\n      };\n    });\n  }\n\n  let { testID } = useParams();\n  const skillData = useSelector((state) => state.skill);\n\n  const { skillFilter, talent_search_skill_form } = skillData;\n\n  let links = [\n    {\n      name: \"Test\",\n      to: \"/talent/tests\",\n      active: false,\n    },\n    {\n      name: testID,\n      to: \"/\",\n      active: true,\n    },\n  ];\n\n  const tabs = [\n    {\n      id: 1,\n      component: (\n        <SkillsList\n          testID={testID}\n          skills={Array.isArray(skillsResults) && skillsResults.slice(0, 4)}\n        />\n      ),\n      title:\n        Array.isArray(skillsResults) &&\n        skillsResults !== undefined &&\n        skillsResults.length > 3\n          ? skillsResults.slice(0, 4).map((skill, index) => {\n              return (\n                <span key={index}>{`${skill.name} ${\n                  index + 1 !== skillsResults.slice(0, 4).length ? \"+ \" : \"\"\n                }`}</span>\n              );\n            })\n          : skillsResults !== undefined &&\n            skillsResults.map((skill, index) => {\n              return (\n                <span key={index}>{`${skill.name} ${\n                  index + 1 !== skillsResults.length ? \"+ \" : \"\"\n                }`}</span>\n              );\n            }),\n    },\n    {\n      id: 2,\n      component: (\n        <StepTwoAllStacks\n          handleTextInputFn={handleOnChangeTextInput}\n          skill_search_form={talent_search_skill_form}\n          filter={skillFilter}\n          testID={testID}\n          skills={skillsResults}\n        />\n      ),\n      title: \"View all tech stacks\",\n    },\n  ];\n\n  const isMobileDev = () => {\n    const regex =\n      /Mobi|Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n    return regex.test(navigator.userAgent);\n  };\n\n  useEffect(() => {\n    // const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n    if (isMobileDev()) {\n      SetIsMobile(true);\n      /* your code here */\n    }\n  }, []);\n\n  return (\n    <div>\n      <TalentLayout pageTitle=\"Tests\" pageHeaderRight={undefined}>\n        <AppBreadcrumb>\n          {links.map((link, index) => {\n            return (\n              <AppBreadcrumbItem\n                key={index}\n                active={link.active}\n                label={link.name}\n                to={link.to}\n              ></AppBreadcrumbItem>\n            );\n          })}\n        </AppBreadcrumb>\n        <WhiteBgDiv loading={talentSkills.loading}>\n          {testID}\n\n          <br></br>\n          <br></br>\n          {isMobile ? (\n            <>\n              <div className=\"alert alert-info\">\n                This module requires you to use a laptop device or a desktop and\n                not a mobile phone\n              </div>\n            </>\n          ) : (\n            <>\n              {skillsResults.length === 0 ? (\n                <>\n                  <EmptyData\n                    actionLabel=\"Update profile\"\n                    linkPath={\n                      \"/\" + TALENT_ROUTE.index + TALENT_ROUTE.editProfile\n                    }\n                    navigation=\"#\"\n                    hasAction={true}\n                    title=\"No skills to show\"\n                    message=\"Update your profile and add which skills you are profecient in.\"\n                  />\n                  {/* <p>Skills are empty for now, kindly update profile</p> */}\n                </>\n              ) : (\n                <>\n                  <Tabs\n                    defaultActiveKey={tabs[0][\"id\"]}\n                    id=\"fill-tab-example\"\n                    className=\"mb-3\"\n                    fill\n                  >\n                    {tabs.map((tab) => {\n                      return (\n                        <Tab\n                          tabClassName=\"tab\"\n                          key={tab.id}\n                          style={{ backgroundColor: \"transparent\" }}\n                          eventKey={tab.id}\n                          title={tab.title}\n                        >\n                          <>{tab.component}</>\n                        </Tab>\n                      );\n                    })}\n                  </Tabs>\n                </>\n              )}\n            </>\n          )}\n        </WhiteBgDiv>\n      </TalentLayout>\n    </div>\n  );\n}\n\nexport default TestStepTwo;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TALENT_IMG } from \"../../../constants/AppImages\";\nimport { NAVLINKS } from \"../../../constants/navlinks\";\nimport { generateUniqueID } from \"../../../constants/utils\";\nimport AppButton from \"../../atoms/AppButton/AppButton\";\nimport LeftNavLink from \"../../molecules/LeftNavLink/LeftNavLink\";\nimport AppCol from \"../../organisms/AppCol/AppCol\";\nimport AppContainerFluid from \"../../organisms/AppContainerFluid/AppContainerFluid\";\nimport AppNavBar from \"../../organisms/AppNavBar/AppNavBar\";\nimport PagesHeader from \"../../organisms/PagesHeader/PagesHeader\";\nimport SideNavProfile from \"../../organisms/SideNavProfile/SideNavProfile\";\nimport LeftRightPage from \"../LeftRightPage/LeftRightPage\";\nimport { logOutUser } from \"../../../app-redux/features/Auth/authSlice\";\nimport ReferModal from \"../../organisms/ReferModal/ReferModal\";\nimport { toggleReferModal } from \"../../../app-redux/features/appData/appDataSlice\";\nimport AppMobileNav from \"../../organisms/AppMobileNav/AppMobileNav\";\nimport { Logout } from \"@mui/icons-material\";\n\nconst LeftNavComponent = ({ first_name, last_name, dispatch }) => {\n  return (\n    <>\n      <div>\n        <SideNavProfile isTalent={true} name={`${first_name} ${last_name}`} />\n        {NAVLINKS.available_for_job_link.map((leftNavLink, index) => {\n          return (\n            <LeftNavLink\n              key={generateUniqueID()}\n              style={{ borderRadius: 40, marginBottom: 40 }}\n              link={leftNavLink.link}\n              image={leftNavLink.image}\n              name={leftNavLink.name}\n            ></LeftNavLink>\n          );\n        })}\n        {NAVLINKS.talent_left_links.map((leftNavLink, index) => {\n          return (\n            <LeftNavLink\n              key={generateUniqueID()}\n              link={leftNavLink.link}\n              image={leftNavLink.image}\n              name={leftNavLink.name}\n            ></LeftNavLink>\n          );\n        })}\n\n        <AppButton\n          size=\"small\"\n          onClick={() => dispatch(logOutUser())}\n          style={{ backgroundColor: \"white\", color: \"black\" }}\n        >\n          <Logout /> Logout\n        </AppButton>\n      </div>\n    </>\n  );\n};\n\nfunction TalentLayout({\n  name_of_talent,\n  showLeftNav,\n  children,\n  pageTitle = \"\",\n  pageHeaderRight = undefined,\n  loading,\n}) {\n  const authData = useSelector((state) => state.auth);\n  const appData = useSelector((state) => state.appData);\n\n  let { loginUserState } = authData;\n  let { data: userData } = loginUserState;\n  let { first_name, last_name, phone, email } = userData;\n\n  const dispatch = useDispatch();\n  return (\n    <main>\n      {/* App top nav here */}\n      <AppMobileNav\n        component={\n          <LeftNavComponent\n            last_name={last_name}\n            first_name={first_name}\n            dispatch={dispatch}\n            loading={loading}\n          />\n        }\n        isInDashboard={true}\n      />\n      <AppNavBar\n        loading={loading}\n        navTileImage={TALENT_IMG}\n        navTileTitle={`${first_name} ${last_name}`}\n        rightLinks={NAVLINKS.dashboard_talent_right_links}\n        leftLinks={NAVLINKS.dashboard_talent_links}\n      />\n      <LeftRightPage\n        Left={\n          <LeftNavComponent\n            last_name={last_name}\n            first_name={first_name}\n            dispatch={dispatch}\n          ></LeftNavComponent>\n        }\n        Right={\n          <AppContainerFluid className=\"fluid_xl\">\n            <>\n              <AppCol size=\"12\">\n                <>\n                  {/* {JSON.stringify(pageHeaderRight)} */}\n                  {pageHeaderRight !== undefined ? (\n                    <PagesHeader\n                      RightComponent={pageHeaderRight}\n                      title={pageTitle}\n                    ></PagesHeader>\n                  ) : (\n                    <PagesHeader title={pageTitle}></PagesHeader>\n                  )}\n                  {children}\n                </>\n              </AppCol>\n            </>\n          </AppContainerFluid>\n        }\n      />\n      <ReferModal\n        message=\"Newton is the new thing on the block. We assist companies looking to hire tech talents or build teams by using our AI-powered platform and data-driven technology to get the best fitting for the role.\"\n        toggleFunction={() => dispatch(toggleReferModal())}\n        show={appData.showReferFriendModal}\n      />\n    </main>\n  );\n}\n\nexport default TalentLayout;\n","// extracted by mini-css-extract-plugin\nexport default {\"refer_modal\":\"ReferModal_refer_modal__9kP4g\",\"footerIcons\":\"ReferModal_footerIcons__kNf03\"};"],"names":["_ref","children","_jsx","className","classStyle","_ref$label","label","_ref$active","active","_ref$to","to","_Fragment","concat","NavLink","_ref$message","message","_ref$hasAction","hasAction","actionLabel","linkPath","_ref$title","title","image","component","undefined","_jsxs","SecondaryButton","size","isLink","style","backgroundColor","SECONDARY_LIGHT_COLOR","color","display","alignItems","flexDirection","AppImage","height","opacity","EMPTY_IMG","PRIMARY_COLOR","url","value","disabled","type","onClick","navigator","clipboard","writeText","toast","id","Copy","data","AppContainerFluid","CopyLinkInput","process","show","toggleFunction","refer_form_array","useSelector","state","appData","Modal","scrollable","contentClassName","onHide","centered","ReferModalBody","ReferModalFooter","shareTitle","_ref$shareUrl","shareUrl","_ref$quote","heading","quote","_ref$shareTitle","_ref$hashtags","hashtags","REFERALs","uuidv4","WhatsappShareButton","WhatsappIcon","round","FacebookShareButton","FacebookIcon","LinkedinShareButton","LinkedinIcon","TwitterShareButton","TwitterIcon","TelegramShareButton","TelegramIcon","InstapaperShareButton","InstapaperIcon","AppRow","classStyles","map","ref","_ref$image","_ref$text","text","skillID","testID","href","AppButton","WHITE_COLOR","skills","_ref$size","skill","index","AppCol","sm_size","md_size","xs_size","lg_size","SkillsTileTest","picture","name","_ref$handleSearch","handleSearch","_ref$handleTextInputF","handleTextInputFn","dispatch","useDispatch","handleTextChange","e","meta","_e$target","target","RowKey","ChildKey","valueToUpdate","KeyName","Array","isArray","field","form_index","field_child","child_index","hidden","colums","FormInputRenderer","handleChange","metaData","input_type","inputId","isRequired","maxlength","min","errorMessage","placeholder","filter","skill_search_form","_useState","useState","_useState2","_slicedToArray","q_search","SetQSearch","_useState3","_useState4","final_skills","SetFinalSkill","useEffect","replace","SearchFilterFunc","DUMMY_DATA","toggleSkillFilter","marginRight","BLACK_COLOR","SearchSkill","search","SkillsList","length","EmptyData","isMobile","SetIsMobile","talentSkills","TalentProfile","skillsResults","results","sr","_objectSpread","skill_code","code","useParams","skillData","skillFilter","talent_search_skill_form","links","tabs","slice","StepTwoAllStacks","handleOnChangeTextInput","test","userAgent","TalentLayout","pageTitle","pageHeaderRight","AppBreadcrumb","link","AppBreadcrumbItem","WhiteBgDiv","loading","TALENT_ROUTE","navigation","Tabs","defaultActiveKey","fill","tab","Tab","tabClassName","eventKey","LeftNavComponent","first_name","last_name","SideNavProfile","isTalent","NAVLINKS","leftNavLink","LeftNavLink","borderRadius","marginBottom","generateUniqueID","logOutUser","Logout","_ref2","name_of_talent","showLeftNav","_ref2$pageTitle","_ref2$pageHeaderRight","authData","auth","userData","loginUserState","phone","email","AppMobileNav","isInDashboard","AppNavBar","navTileImage","TALENT_IMG","navTileTitle","rightLinks","leftLinks","LeftRightPage","Left","Right","PagesHeader","RightComponent","ReferModal","toggleReferModal","showReferFriendModal"],"sourceRoot":""}