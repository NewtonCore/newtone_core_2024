{"version":3,"file":"static/js/3362.70268248.chunk.js","mappings":"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","sources":["components/organisms/AppLineGraph/AppLineGraph.js","components/organisms/DashboardCard/DashboardCard.js","components/organisms/EmptyData/EmptyData.js","components/organisms/PostJobConfirmation/CopyLinkInput.js","components/organisms/ReferModal/ReferModalBody.js","components/organisms/ReferModal/ReferModal.js","components/organisms/ReferModal/ReferModalFooter.js","components/pages/applicant/TalentDashboard/UpdateProfileNotification.js","components/pages/applicant/TalentDashboard/TalentDashboard.js","components/templates/TalentLayout/TalentLayout.js","webpack://newton-recruitment/./src/components/organisms/ReferModal/ReferModal.module.css?2077"],"sourcesContent":["import React from \"react\";\nimport { Chart as ChartJS } from \"chart.js/auto\";\nimport { Line } from \"react-chartjs-2\";\nimport { DUMMY_DATA } from \"../../../constants/dummyData/dummyData\";\nimport EmptyData from \"../EmptyData/EmptyData\";\n\nfunction AppLineGraph({ graphData, name,noDataMsg=\"\" }) {\n  const data = {\n    labels:\n      graphData.length !== 0\n        ? graphData.map((data) => data.name)\n        : DUMMY_DATA.graphData.map((data) => data.name),\n    datasets: [\n      {\n        label: \"Number\",\n        data:\n          graphData.length !== 0\n            ? graphData.map((data) => data.uv)\n            : DUMMY_DATA.graphData.map((data) => data.uv),\n        borderColor: \"#A6CEE3\",\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    elements: {\n      line: {\n        tension: 0.5,\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"legend\",\n      },\n      title: {\n        display: true,\n        text: name === undefined ? \"Graph name\" : name,\n      },\n    },\n  };\n  return (\n    <div style={{ height: \"100%\" }}>\n      {graphData.length === 0 ? (\n        <EmptyData\n          title=\"No graph to show\"\n          message={noDataMsg}\n        />\n      ) : (\n        <Line options={options} data={data} />\n      )}\n    </div>\n  );\n}\n\nexport default AppLineGraph;\n","import React from \"react\";\nimport AppCol from \"../AppCol/AppCol\";\nimport AppContainer from \"../AppContainer/AppContainer\";\nimport AppRow from \"../AppRow/AppRow\";\nimport \"./DashboardCard.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction DashboardCard({ image = {}, count = {}, name = \"\",route=\"#\" }) {\n  return (\n    <AppContainer className=\"p-0\">\n      <Link id=\"dashboard_card_link\" to={route}>\n      <div id=\"dashboard_card\">\n        <AppCol\n          id=\"image_div_container\"\n          size={6}\n          md_size={6}\n          lg_size={6}\n          sm_size={6}\n          xs_size={6}\n        >\n          <div id=\"image_div\">{image}</div>\n        </AppCol>\n\n        <AppCol size={6}\n        id=\"content_div_container\"\n        >\n          <span id=\"count\" className=\"fw-bold\">{count}</span>\n          <br></br>\n\n          <span id=\"name\">{name}</span>\n        </AppCol>\n      </div>\n      </Link>\n    </AppContainer>\n  );\n}\n\nexport default DashboardCard;\n","import React from \"react\";\nimport {\n  PRIMARY_COLOR,\n  SECONDARY_LIGHT_COLOR,\n} from \"../../../constants/AppColors\";\nimport { EMPTY_IMG } from \"../../../constants/AppImages\";\nimport AppButton from \"../../atoms/AppButton/AppButton\";\nimport SecondaryButton from \"../../atoms/AppButton/SecondaryButton\";\nimport AppImage from \"../AppImage/AppImage\";\n\nfunction EmptyData({\n  message = \"\",\n  hasAction = false,\n  actionLabel,\n  linkPath,\n  title=\"\",\n  image,\n  component,\n}) {\n  return (\n    <>\n      {component !== undefined ? (\n        <div\n          // style={{  }}\n          className=\"border p-5 rounded\"\n        >\n          {component}\n\n          {hasAction && (\n            <SecondaryButton\n              size=\"small\"\n              isLink\n              linkPath={linkPath}\n              style={{\n                backgroundColor: SECONDARY_LIGHT_COLOR,\n                color: \"black\",\n              }}\n            >\n              {actionLabel}\n            </SecondaryButton>\n          )}\n        </div>\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n          }}\n          className=\"border p-5 rounded\"\n        >\n          <AppImage\n            className=\"animate__animated animate__pulse mb-3\"\n            style={{ height: 70, opacity: image === undefined ? \".4\" : \"1\" }}\n            image={image === undefined ? EMPTY_IMG : image}\n          />\n          <p className=\"fs-5 text-center\" style={{ color: PRIMARY_COLOR }}>\n            {title}\n          </p>\n\n          <p className=\"fs-6 text-muted text-center\">{message}</p>\n\n          {hasAction && (\n            <SecondaryButton\n              size=\"small\"\n              isLink\n              linkPath={linkPath}\n              style={{\n                backgroundColor: SECONDARY_LIGHT_COLOR,\n                color: \"black\",\n              }}\n            >\n              {actionLabel}\n            </SecondaryButton>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default EmptyData;\n","import { Copy } from \"akar-icons\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"./PostJobSuccess.css\"\n\nfunction CopyLinkInput({ url }) {\n  const copyText = () => {\n    navigator.clipboard.writeText(url);\n    toast.info(\"Link copied\", 1000);\n  };\n  return (\n    <div>\n      <div className=\"input-group\">\n        <input\n          value={url}\n          disabled\n          type=\"text\"\n          className=\"form-control\"\n          aria-describedby=\"basic-addon1\"\n        />\n\n        <button\n          onClick={() => copyText()}\n          className=\"input-group-text\"\n          id=\"basic-addon1\"\n        >\n          <Copy />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default CopyLinkInput;\n","import React from \"react\";\nimport AppContainerFluid from \"../AppContainerFluid/AppContainerFluid\";\nimport CopyLinkInput from \"../PostJobConfirmation/CopyLinkInput\";\n\nfunction ReferModalBody({ data }) {\n  return (\n    <AppContainerFluid>\n      <center>\n        <h5>Refer a friend</h5>\n        <span className=\"text-muted\">Refer a friend to Newton Recruitment</span>\n      </center>\n\n      <div className=\"mt-3 mb-3\">\n        <CopyLinkInput url={process.env.REACT_APP_WEB_URL}></CopyLinkInput>\n      </div>\n    </AppContainerFluid>\n  );\n}\n\nexport default ReferModalBody;\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport classStyle from \"./ReferModal.module.css\";\nimport ReferModalBody from \"./ReferModalBody\";\nimport ReferModalFooter from \"./ReferModalFooter\";\n\nfunction ReferModal({ show, toggleFunction,message }) {\n  let appData = useSelector((state) => state.appData);\n  let { refer_form_array } = appData;\n  return (\n    <div>\n      <Modal\n        scrollable\n        contentClassName={classStyle.refer_modal}\n        show={show}\n        onHide={toggleFunction}\n        centered\n      >\n        <Modal.Body>\n          <ReferModalBody data={refer_form_array}></ReferModalBody>\n          <ReferModalFooter shareTitle={message} />\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ReferModal;\n","import React from \"react\";\nimport AppContainerFluid from \"../AppContainerFluid/AppContainerFluid\";\nimport AppRow from \"../AppRow/AppRow\";\nimport classStyles from \"./ReferModal.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  WhatsappShareButton,\n  TelegramShareButton,\n  TwitterShareButton,\n  LinkedinShareButton,\n  TwitterIcon,\n  WhatsappIcon,\n  FacebookIcon,\n  TelegramIcon,\n  LinkedinIcon,\n  FacebookShareButton,\n  InstapaperShareButton,\n  InstapaperIcon,\n} from \"react-share\";\n\nfunction ReferModalFooter({\n  shareUrl = process.env.REACT_APP_WEB_URL,\n  heading,\n  quote = \"Newton\",\n  shareTitle = \"Newton\",\n  hashtags = [\"newton\"],\n}) {\n  let REFERALs = [\n    {\n      id: uuidv4(),\n      component: (\n        <WhatsappShareButton title={shareTitle} url={shareUrl}>\n          <WhatsappIcon quote={quote} size={32} round={true} />\n        </WhatsappShareButton>\n      ),\n    },\n    {\n      id: uuidv4(),\n      component: (\n        <FacebookShareButton quote={quote} url={shareUrl}>\n          <FacebookIcon size={32} round={true} />\n        </FacebookShareButton>\n      ),\n    },\n\n    {\n      id: uuidv4(),\n      component: (\n        <LinkedinShareButton title={shareTitle} url={shareUrl}>\n          <LinkedinIcon size={32} round={true} />\n        </LinkedinShareButton>\n      ),\n    },\n    {\n      id: uuidv4(),\n      component: (\n        <TwitterShareButton\n          hashtags={hashtags}\n          title={shareTitle}\n          url={shareUrl}\n        >\n          <TwitterIcon size={32} round={true} />\n        </TwitterShareButton>\n      ),\n    },\n    {\n      id: uuidv4(),\n      component: (\n        <TelegramShareButton title={shareTitle} url={shareUrl}>\n          <TelegramIcon size={32} round={true} />\n        </TelegramShareButton>\n      ),\n    },\n    {\n      id: uuidv4(),\n      component: (\n        <InstapaperShareButton title={shareTitle} url={shareUrl}>\n          <InstapaperIcon size={32} round={true} />\n        </InstapaperShareButton>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <AppContainerFluid>\n        {}\n        <center>\n          <span className=\"text-muted text-center\">You can share via</span>\n        </center>\n\n        <AppRow className={classStyles.footerIcons}>\n          {REFERALs.map((ref) => {\n            return (\n              <div key={ref.id} className=\"mt-1\">\n                {ref.component}\n              </div>\n            );\n          })}\n        </AppRow>\n      </AppContainerFluid>\n    </div>\n  );\n}\n\nexport default ReferModalFooter;\n","import React from \"react\";\nimport AppRow from \"../../../organisms/AppRow/AppRow\";\nimport AppCol from \"../../../organisms/AppCol/AppCol\";\nimport AppSVG from \"../../../organisms/AppSVG/AppSVG\";\nimport { WELCOME_SVG } from \"../../../../constants/AppSvg\";\nimport AppButton from \"../../../atoms/AppButton/AppButton\";\nimport { TALENT_ROUTE } from \"../../../../routes/RouteLinks\";\n\nfunction UpdateProfileNotification({ loginUserState }) {\n  return (\n    <div>\n      <AppRow>\n        <center>\n          <AppCol style={{ height: \"100%\", width: \"80%\" }} size={12}>\n            <AppSVG data={WELCOME_SVG}></AppSVG>\n          </AppCol>\n        </center>\n        <AppCol size={12}>\n          <h5 className=\"text-center mt-2 fw-normal\">\n            {loginUserState.data.hasOwnProperty(\"first_name\") &&\n              loginUserState.data.first_name}\n            , welcome to Newton. You need to update your profile to be able to\n            apply for jobs, view job status and other app functionalities.\n          </h5>\n          <center>\n            <AppButton\n              isLink={true}\n              linkPath={`/${TALENT_ROUTE.index}${TALENT_ROUTE.editProfile}`}\n              size=\"small\"\n            >\n              Update Profile\n            </AppButton>\n          </center>\n        </AppCol>\n      </AppRow>\n    </div>\n  );\n}\n\nexport default UpdateProfileNotification;\n","import React from \"react\";\nimport AppButton from \"../../../atoms/AppButton/AppButton\";\nimport { SHARE_SVG } from \"../../../../constants/AppSvg\";\nimport TalentLayout from \"../../../templates/TalentLayout/TalentLayout\";\nimport AppRow from \"../../../organisms/AppRow/AppRow\";\nimport AppCol from \"../../../organisms/AppCol/AppCol\";\nimport { Briefcase, Clock, Person } from \"akar-icons\";\nimport DashboardCard from \"../../../organisms/DashboardCard/DashboardCard\";\nimport AppContainer from \"../../../organisms/AppContainer/AppContainer\";\nimport { SECONDARY_COLOR } from \"../../../../constants/AppColors\";\nimport AppLineGraph from \"../../../organisms/AppLineGraph/AppLineGraph\";\nimport AppImage from \"../../../organisms/AppImage/AppImage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleReferModal } from \"../../../../app-redux/features/appData/appDataSlice\";\nimport { FormatDate, generateGraphData } from \"../../../../constants/utils\";\nimport EmptyData from \"../../../organisms/EmptyData/EmptyData\";\nimport WhiteBgDiv from \"../../../organisms/WhiteBgDiv/WhiteBgDiv\";\nimport { TALENT_ROUTE } from \"../../../../routes/RouteLinks\";\nimport UpdateProfileNotification from \"./UpdateProfileNotification\";\n\nfunction TalentDashboard() {\n  let authData = useSelector((state) => state.auth);\n  let talentData = useSelector((state) => state.talent);\n  let TalentProfile = useSelector((state) => state.TalentProfile);\n  const jobCompanyData = useSelector((state) => state.jobCompany);\n  const { talentsWhichAppliedJob } = jobCompanyData;\n  let { results: talentsWhichAppliedJobResults } = talentsWhichAppliedJob.data;\n\n  const { talentInterviewsState } = talentData;\n  const { data: talentInterviewData } = talentInterviewsState;\n  const { talentState } = TalentProfile;\n\n  const { profileVisits, loginUserState } = authData;\n\n  const { data: profileVisitsData } = profileVisits;\n  const { results: profileVisitsResults, total: profileVisitsTotal } =\n    profileVisitsData;\n\n  const graphData =\n    profileVisitsResults !== undefined\n      ? generateGraphData(profileVisitsResults)\n      : [];\n\n  const dispatch = useDispatch();\n\n  // console.log(talentState.data.length);\n\n  const dashBoardCards = [\n    {\n      name: \"Applied Jobs\",\n      image: <Briefcase></Briefcase>,\n      count:\n        talentsWhichAppliedJobResults !== undefined\n          ? talentsWhichAppliedJobResults.length\n          : 0,\n      route: `/${TALENT_ROUTE.index}${TALENT_ROUTE.jobStatus}`,\n    },\n    {\n      name: \"Profile Views\",\n      image: <Person />,\n      count: profileVisitsTotal !== undefined ? profileVisitsTotal : 0,\n      route: `#`,\n    },\n  ];\n  return (\n    <>\n      {/* <AppNavBar></AppNavBar> */}\n\n      <TalentLayout\n        pageTitle=\"Talent Dashboard\"\n        pageHeaderRight={\n          <>\n            <AppButton\n              onClick={() => dispatch(toggleReferModal())}\n              color=\"white\"\n              size=\"small\"\n            >\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <AppImage\n                  style={{ height: 25, marginRight: 10 }}\n                  image={SHARE_SVG}\n                />\n                Refer a friend\n              </div>\n            </AppButton>\n          </>\n        }\n      >\n        <WhiteBgDiv loading={talentState.loading}>\n          <>\n            {!talentState.data.hasOwnProperty(\"id\") ? (\n              <>\n                {!talentState.loading && (\n                  <UpdateProfileNotification\n                    loginUserState={loginUserState}\n                  ></UpdateProfileNotification>\n                )}\n              </>\n            ) : (\n              <>\n                <AppRow>\n                  <AppCol lg_size=\"7\" sm_size=\"12\" size={7}>\n                    <AppContainer className=\"m-0 p-0\">\n                      <AppRow className=\"gx-4\">\n                        {dashBoardCards.map((dashBoardCard, index) => {\n                          return (\n                            <AppCol\n                              key={index}\n                              md_size=\"6\"\n                              sm_size={6}\n                              xs_size={12}\n                              size={6}\n                              lg_size={6}\n                            >\n                              <DashboardCard\n                                count={dashBoardCard.count}\n                                image={dashBoardCard.image}\n                                name={dashBoardCard.name}\n                                route={dashBoardCard.route}\n                              />\n                            </AppCol>\n                          );\n                        })}\n                      </AppRow>\n\n                      <AppRow className=\"gx-5\">\n                        <AppCol\n                          md_size=\"6\"\n                          sm_size={6}\n                          xs_size={12}\n                          size={6}\n                          lg_size={6}\n                        ></AppCol>\n                        <AppCol>\n                          <span className=\"mt-3 mb-3\">Your profile visits</span>\n                          <AppLineGraph\n                            noDataMsg=\"You seem not to have any profile visits yet\"\n                            name=\"Profile visits\"\n                            dataKeyXAxis=\"name\"\n                            graphData={graphData}\n                          ></AppLineGraph>\n                        </AppCol>\n                      </AppRow>\n                    </AppContainer>\n                  </AppCol>\n\n                  <AppCol\n                    lg_size=\"5\"\n                    sm_size=\"12\"\n                    size={5}\n                    style={{ margin: 0 }}\n                  >\n                    <AppContainer\n                      style={{\n                        backgroundColor: SECONDARY_COLOR,\n                        padding: 10,\n                        borderRadius: 4,\n                      }}\n                    >\n                      {talentInterviewData.length === 0 && (\n                        <>\n                          <EmptyData\n                            title=\"No updates to show\"\n                            message=\"Here you will see your job offers once an application has been made by you.\"\n                          />\n                        </>\n                      )}\n                      <AppRow className=\"p-2\">\n                        <AppCol size={12}>\n                          {talentInterviewData.results !== undefined && (\n                            <>\n                              {talentInterviewData.results.length === 0 ? (\n                                <EmptyData\n                                  title=\"No updates to show\"\n                                  message=\"Here you will see your job offers once an application has been made by you.\"\n                                />\n                              ) : (\n                                <>\n                                  {talentInterviewData.results.map(\n                                    (interview) => {\n                                      return (\n                                        <>\n                                          <p>\n                                            Meeting (\n                                            {FormatDate(\n                                              new Date(interview.date)\n                                            )}{\" \"}\n                                            - {interview.time_zone})\n                                          </p>\n                                          <p>Time: {interview.start_time}</p>\n                                          <Clock\n                                            size={15}\n                                          ></Clock> Duraton:{\" \"}\n                                          {interview.time_duration} minutes\n                                          <hr></hr>\n                                        </>\n                                      );\n                                    }\n                                  )}\n\n                                  <center>\n                                    <AppButton\n                                      size=\"small\"\n                                      label=\"View all Updates\"\n                                    ></AppButton>\n                                  </center>\n                                </>\n                              )}\n                            </>\n                          )}\n                        </AppCol>\n                      </AppRow>\n                    </AppContainer>\n                  </AppCol>\n                </AppRow>\n              </>\n            )}\n            <></>\n          </>\n        </WhiteBgDiv>\n      </TalentLayout>\n    </>\n  );\n}\n\nexport default TalentDashboard;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TALENT_IMG } from \"../../../constants/AppImages\";\nimport { NAVLINKS } from \"../../../constants/navlinks\";\nimport { generateUniqueID } from \"../../../constants/utils\";\nimport AppButton from \"../../atoms/AppButton/AppButton\";\nimport LeftNavLink from \"../../molecules/LeftNavLink/LeftNavLink\";\nimport AppCol from \"../../organisms/AppCol/AppCol\";\nimport AppContainerFluid from \"../../organisms/AppContainerFluid/AppContainerFluid\";\nimport AppNavBar from \"../../organisms/AppNavBar/AppNavBar\";\nimport PagesHeader from \"../../organisms/PagesHeader/PagesHeader\";\nimport SideNavProfile from \"../../organisms/SideNavProfile/SideNavProfile\";\nimport LeftRightPage from \"../LeftRightPage/LeftRightPage\";\nimport { logOutUser } from \"../../../app-redux/features/Auth/authSlice\";\nimport ReferModal from \"../../organisms/ReferModal/ReferModal\";\nimport { toggleReferModal } from \"../../../app-redux/features/appData/appDataSlice\";\nimport AppMobileNav from \"../../organisms/AppMobileNav/AppMobileNav\";\nimport { Logout } from \"@mui/icons-material\";\n\nconst LeftNavComponent = ({ first_name, last_name, dispatch }) => {\n  return (\n    <>\n      <div>\n        <SideNavProfile isTalent={true} name={`${first_name} ${last_name}`} />\n        {NAVLINKS.available_for_job_link.map((leftNavLink, index) => {\n          return (\n            <LeftNavLink\n              key={generateUniqueID()}\n              style={{ borderRadius: 40, marginBottom: 40 }}\n              link={leftNavLink.link}\n              image={leftNavLink.image}\n              name={leftNavLink.name}\n            ></LeftNavLink>\n          );\n        })}\n        {NAVLINKS.talent_left_links.map((leftNavLink, index) => {\n          return (\n            <LeftNavLink\n              key={generateUniqueID()}\n              link={leftNavLink.link}\n              image={leftNavLink.image}\n              name={leftNavLink.name}\n            ></LeftNavLink>\n          );\n        })}\n\n        <AppButton\n          size=\"small\"\n          onClick={() => dispatch(logOutUser())}\n          style={{ backgroundColor: \"white\", color: \"black\" }}\n        >\n          <Logout /> Logout\n        </AppButton>\n      </div>\n    </>\n  );\n};\n\nfunction TalentLayout({\n  name_of_talent,\n  showLeftNav,\n  children,\n  pageTitle = \"\",\n  pageHeaderRight = undefined,\n  loading,\n}) {\n  const authData = useSelector((state) => state.auth);\n  const appData = useSelector((state) => state.appData);\n\n  let { loginUserState } = authData;\n  let { data: userData } = loginUserState;\n  let { first_name, last_name, phone, email } = userData;\n\n  const dispatch = useDispatch();\n  return (\n    <main>\n      {/* App top nav here */}\n      <AppMobileNav\n        component={\n          <LeftNavComponent\n            last_name={last_name}\n            first_name={first_name}\n            dispatch={dispatch}\n            loading={loading}\n          />\n        }\n        isInDashboard={true}\n      />\n      <AppNavBar\n        loading={loading}\n        navTileImage={TALENT_IMG}\n        navTileTitle={`${first_name} ${last_name}`}\n        rightLinks={NAVLINKS.dashboard_talent_right_links}\n        leftLinks={NAVLINKS.dashboard_talent_links}\n      />\n      <LeftRightPage\n        Left={\n          <LeftNavComponent\n            last_name={last_name}\n            first_name={first_name}\n            dispatch={dispatch}\n          ></LeftNavComponent>\n        }\n        Right={\n          <AppContainerFluid className=\"fluid_xl\">\n            <>\n              <AppCol size=\"12\">\n                <>\n                  {/* {JSON.stringify(pageHeaderRight)} */}\n                  {pageHeaderRight !== undefined ? (\n                    <PagesHeader\n                      RightComponent={pageHeaderRight}\n                      title={pageTitle}\n                    ></PagesHeader>\n                  ) : (\n                    <PagesHeader title={pageTitle}></PagesHeader>\n                  )}\n                  {children}\n                </>\n              </AppCol>\n            </>\n          </AppContainerFluid>\n        }\n      />\n      <ReferModal\n        message=\"Newton is the new thing on the block. We assist companies looking to hire tech talents or build teams by using our AI-powered platform and data-driven technology to get the best fitting for the role.\"\n        toggleFunction={() => dispatch(toggleReferModal())}\n        show={appData.showReferFriendModal}\n      />\n    </main>\n  );\n}\n\nexport default TalentLayout;\n","// extracted by mini-css-extract-plugin\nexport default {\"refer_modal\":\"ReferModal_refer_modal__9kP4g\",\"footerIcons\":\"ReferModal_footerIcons__kNf03\"};"],"names":["_ref","graphData","name","_ref$noDataMsg","noDataMsg","data","labels","length","map","DUMMY_DATA","datasets","label","uv","borderColor","backgroundColor","options","responsive","elements","line","tension","plugins","legend","position","title","display","text","undefined","_jsx","style","height","children","EmptyData","message","Line","_ref$image","image","_ref$count","count","_ref$name","_ref$route","route","AppContainer","className","Link","id","to","_jsxs","AppCol","size","md_size","lg_size","sm_size","xs_size","_ref$message","_ref$hasAction","hasAction","actionLabel","linkPath","_ref$title","component","_Fragment","SecondaryButton","isLink","SECONDARY_LIGHT_COLOR","color","alignItems","flexDirection","AppImage","opacity","EMPTY_IMG","PRIMARY_COLOR","url","value","disabled","type","onClick","navigator","clipboard","writeText","toast","Copy","AppContainerFluid","CopyLinkInput","process","show","toggleFunction","refer_form_array","useSelector","state","appData","Modal","scrollable","contentClassName","classStyle","onHide","centered","ReferModalBody","ReferModalFooter","shareTitle","_ref$shareUrl","shareUrl","_ref$quote","heading","quote","_ref$shareTitle","_ref$hashtags","hashtags","REFERALs","uuidv4","WhatsappShareButton","WhatsappIcon","round","FacebookShareButton","FacebookIcon","LinkedinShareButton","LinkedinIcon","TwitterShareButton","TwitterIcon","TelegramShareButton","TelegramIcon","InstapaperShareButton","InstapaperIcon","AppRow","classStyles","ref","loginUserState","width","AppSVG","WELCOME_SVG","hasOwnProperty","first_name","AppButton","concat","TALENT_ROUTE","authData","auth","talentData","talent","TalentProfile","talentsWhichAppliedJobResults","jobCompany","talentsWhichAppliedJob","results","talentInterviewData","talentInterviewsState","talentState","profileVisits","profileVisitsData","profileVisitsResults","profileVisitsTotal","total","generateGraphData","dispatch","useDispatch","dashBoardCards","Briefcase","Person","TalentLayout","pageTitle","pageHeaderRight","toggleReferModal","marginRight","SHARE_SVG","WhiteBgDiv","loading","dashBoardCard","index","DashboardCard","AppLineGraph","dataKeyXAxis","margin","SECONDARY_COLOR","padding","borderRadius","interview","FormatDate","Date","date","time_zone","start_time","Clock","time_duration","UpdateProfileNotification","LeftNavComponent","last_name","SideNavProfile","isTalent","NAVLINKS","leftNavLink","LeftNavLink","marginBottom","link","generateUniqueID","logOutUser","Logout","_ref2","name_of_talent","showLeftNav","_ref2$pageTitle","_ref2$pageHeaderRight","userData","phone","email","AppMobileNav","isInDashboard","AppNavBar","navTileImage","TALENT_IMG","navTileTitle","rightLinks","leftLinks","LeftRightPage","Left","Right","PagesHeader","RightComponent","ReferModal","showReferFriendModal"],"sourceRoot":""}