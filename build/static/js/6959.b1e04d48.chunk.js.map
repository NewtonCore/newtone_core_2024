{"version":3,"file":"static/js/6959.b1e04d48.chunk.js","mappings":"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","sources":["routes/Providers/AppDataProvider.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { getCompanyDebit } from \"../../app-redux/features/companyDebitInfo/companyDebitSlice\";\nimport { getCompanyProfile } from \"../../app-redux/features/editCompanyProfile/editCompanyProfileSlice\";\nimport {\n  getEducation,\n  getTalent,\n  getTalentProjects,\n  getTalentWorkExperiences,\n} from \"../../app-redux/features/TalentProfile/TalentProfileSlice\";\nimport {\n  getAllJobCompany,\n  getAppliedTalent,\n  getJobByCompany,\n  GetMyPaymentForTalent,\n  getMySavedProfiles,\n  getTalentsAppliedForJob_For_Updates,\n  getTalentsWhichHired,\n} from \"../../app-redux/features/jobCompany/jobCompanySlice\";\nimport {\n  getSkills,\n  getTechnicalSkills,\n} from \"../../app-redux/features/Skill/skillSlice\";\nimport { COMPANY_ROUTE, TALENT_ROUTE } from \"../RouteLinks\";\nimport { getprofileVisits, getprofileVisitsCompany } from \"../../app-redux/features/Auth/authSlice\";\nimport { getNewtonAvailabilities } from \"../../app-redux/features/ScheduleInterview/ScheduleInterviewSlice\";\nimport { getTalentInterviews } from \"../../app-redux/features/TalentSlice/talentSlice\";\nimport { getOfflineData } from \"../../constants/OfflineStorage\";\nimport { getAppCountries, getAppHourlyRate, toggleLoginForm } from \"../../app-redux/features/appData/appDataSlice\";\n\nfunction AppDataProvider({ children }) {\n  const dispatch = useDispatch();\n  const TalentProfileData = useSelector((state) => state.TalentProfile);\n  let { talentState: talentSliceData } = TalentProfileData;\n  let { data: talentDataResult } = talentSliceData;\n\n  const authData = useSelector((state) => state.auth);\n  const { loginUserState } = authData;\n\n  const [pageTitle, setPageTitle] = useState(\"Home\");\n\n  const titleMap = [\n    { path: \"/\", title: \"Newton\" },\n    { path: \"/password-reset\", title: \"Forgot Password\" },\n    {\n      path: `/${TALENT_ROUTE.index}${TALENT_ROUTE.dashboard}`,\n      title: \"Talent Dashboard\",\n    },\n    {\n      path: `/${TALENT_ROUTE.index}${TALENT_ROUTE.jobAvailability}`,\n      title: \"Job Availability\",\n    },\n    { path: `/${TALENT_ROUTE.index}${TALENT_ROUTE.updates}`, title: \"Updates\" },\n    { path: `/${TALENT_ROUTE.index}${TALENT_ROUTE.tests}`, title: \"Tests\" },\n    { path: `/${TALENT_ROUTE.index}${TALENT_ROUTE.testsID}`, title: \"Tests\" },\n    {\n      path: `/${TALENT_ROUTE.index}${TALENT_ROUTE.testsIDskillID}`,\n      title: \"Tests\",\n    },\n    {\n      path: `/${TALENT_ROUTE.index}${TALENT_ROUTE.editProfile}`,\n      title: \"Edit Profile\",\n    },\n    {\n      path: `/${TALENT_ROUTE.index}${TALENT_ROUTE.jobStatus}`,\n      title: \"Job Status\",\n    },\n    {\n      path: `/${TALENT_ROUTE.index}${TALENT_ROUTE.viewProfile}`,\n      title: \"View Profile\",\n    },\n    {\n      path: `/${TALENT_ROUTE.index}${TALENT_ROUTE.settings}`,\n      title: \"Settings\",\n    },\n    {\n      path: `/${TALENT_ROUTE.index}${TALENT_ROUTE.viewJob}`,\n      title: \"Viewing Job\",\n    },\n    {\n      path: `/${COMPANY_ROUTE.index}${COMPANY_ROUTE.dashboard}`,\n      title: \"Company Dashboard\",\n    },\n    {\n      path: `/${COMPANY_ROUTE.index}${COMPANY_ROUTE.update_password}`,\n      title: \"Update Password\",\n    },\n    {\n      path: `/${COMPANY_ROUTE.index}${COMPANY_ROUTE.hired_talents}`,\n      title: \"Hired Talents\",\n    },\n    {\n      path: `/${COMPANY_ROUTE.index}${COMPANY_ROUTE.profile}`,\n      title: \"Profile\",\n    },\n    {\n      path: `/${COMPANY_ROUTE.index}${COMPANY_ROUTE.post_job}`,\n      title: \"Post Job\",\n    },\n    {\n      path: `/${COMPANY_ROUTE.index}${COMPANY_ROUTE.my_jobs}`,\n      title: \"My Jobs\",\n    },\n\n    {\n      path: `/${COMPANY_ROUTE.index}${COMPANY_ROUTE.viewJob}`,\n      title: \"Viewing Job\",\n    },\n  ];\n\n  let curLoc = useLocation();\n  useEffect(() => {\n    const curTitle = titleMap.find((item) => item.path === curLoc.pathname);\n    if (curTitle && curTitle.title) {\n      setPageTitle(curTitle.title);\n      document.title = curTitle.title;\n    }\n  }, [curLoc]);\n\n  useEffect(() => {\n    //load skill,questions when auth changes\n    // dispatch(getSkills());\n    dispatch(getAllJobCompany({ data: \"All\" }));\n    dispatch(getSkills());\n    dispatch(getAppCountries())\n    dispatch(getAppHourlyRate())\n    dispatch(getTechnicalSkills());\n\n    if (loginUserState.isLoggedIn) {\n      // console.log(first)\n     \n      if (loginUserState.data.type === \"talent\") {\n        let user_profile = getOfflineData(\"user_profile\");\n        dispatch(getTalent());\n\n        user_profile.then((res) => {\n          if (res === null) {\n          } else {\n            // dispatch(addTalentDataFromLocalStorage({talentState:res,talentSkills:res.user_skills}))\n          }\n        });\n\n        setTimeout(() => {}, 100);\n      } else if (loginUserState.data.type === \"company\") {\n        dispatch(getJobByCompany());\n        dispatch(getCompanyProfile());\n        dispatch(getCompanyDebit());\n        dispatch(getNewtonAvailabilities());\n        dispatch(getTalentsWhichHired());\n        dispatch(GetMyPaymentForTalent());\n        dispatch(getTalentsAppliedForJob_For_Updates())\n        dispatch(getMySavedProfiles())\n        dispatch(getprofileVisitsCompany());\n\n      }\n    }\n  }, [dispatch, loginUserState]);\n\n  useEffect(() => {\n    if (\n      talentDataResult.length === 0 &&\n      loginUserState.data.type === \"talent\"\n    ) {\n      dispatch(getTalentWorkExperiences());\n      dispatch(getEducation());\n      dispatch(getTalentProjects());\n      dispatch(getprofileVisits());\n      dispatch(getAppliedTalent());\n      dispatch(getTalentInterviews());\n    }\n  }, [talentDataResult, loginUserState]);\n\n  useEffect(() => {\n    if (loginUserState.isLoggedOutButton) {\n      dispatch(toggleLoginForm());\n    }\n  }, [loginUserState]);\n\n  return <div>{children}</div>;\n}\n\nexport default AppDataProvider;\n"],"names":["_ref","children","dispatch","useDispatch","talentDataResult","useSelector","state","TalentProfile","talentState","data","loginUserState","auth","_useState","useState","_useState2","_slicedToArray","setPageTitle","titleMap","path","title","concat","TALENT_ROUTE","COMPANY_ROUTE","curLoc","useLocation","useEffect","curTitle","find","item","pathname","document","getAllJobCompany","getSkills","getAppCountries","getAppHourlyRate","getTechnicalSkills","isLoggedIn","type","user_profile","getOfflineData","getTalent","then","res","setTimeout","getJobByCompany","getCompanyProfile","getCompanyDebit","getNewtonAvailabilities","getTalentsWhichHired","GetMyPaymentForTalent","getTalentsAppliedForJob_For_Updates","getMySavedProfiles","getprofileVisitsCompany","length","getTalentWorkExperiences","getEducation","getTalentProjects","getprofileVisits","getAppliedTalent","getTalentInterviews","isLoggedOutButton","toggleLoginForm","_jsx"],"sourceRoot":""}