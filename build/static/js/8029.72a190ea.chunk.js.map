{"version":3,"file":"static/js/8029.72a190ea.chunk.js","mappings":"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","sources":["components/organisms/DetailsPage/DetailsPage.js","webpack://newton-recruitment/./src/components/organisms/DetailsPageHeader/DetailsPageHeader.module.css?7d65","components/organisms/DetailsPageHeader/DetailsPageHeader.js","components/pages/AppPages/ViewJob/SimilarJobs.js","components/pages/AppPages/ViewJob/pagecomponents/ApplyForm.js","components/pages/AppPages/ViewJob/pagecomponents/ApplyModal.js","../node_modules/@mui/icons-material/esm/Cancel.js","components/pages/AppPages/ViewJob/ViewJob.js","components/organisms/HomePageFooterLink/HomePageFooterLink.js","components/organisms/HomePageFooterSocialICon/HomePageFooterSocialIcon.js","components/templates/HomePageFoooter/HomePageFoooter.js"],"sourcesContent":["import React from \"react\";\nimport HomePageFoooter from \"../../templates/HomePageFoooter/HomePageFoooter\";\nimport AppCol from \"../AppCol/AppCol\";\nimport AppContainerFluid from \"../AppContainerFluid/AppContainerFluid\";\nimport AppRow from \"../AppRow/AppRow\";\nimport \"./DetailsPage.css\"\n\nfunction DetailsPage({\n  MainLeftComponent = undefined,\n  MainRightComponent = undefined,\n  Header,\n  children,\n  showPageFooter=true\n}) {\n  return (\n    <div>\n        <div className=\"detail-page\">\n        {Header !== undefined && Header}\n        </div>\n\n      <AppContainerFluid  id=\"main-content-details\">\n        <AppRow>\n          <AppCol size={8} md_size={7} lg_size={8} sm_size={12}>\n            {MainLeftComponent !== undefined && MainLeftComponent}\n          </AppCol>\n          <AppCol size={4} md_size={5} lg_size={4} sm_size={12}>\n            {MainRightComponent !== undefined && MainRightComponent}\n          </AppCol>\n        </AppRow>\n      </AppContainerFluid>\n      {children}\n      {\n        showPageFooter &&\n        <HomePageFoooter />\n\n      }\n    </div>\n  );\n}\n\nexport default DetailsPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"detailsLeft\":\"DetailsPageHeader_detailsLeft__sIgfn\",\"svg\":\"DetailsPageHeader_svg__2mAyS\",\"labelDetails\":\"DetailsPageHeader_labelDetails__dVn2p\",\"actionComponent\":\"DetailsPageHeader_actionComponent__uV9nV\",\"detailsHeader\":\"DetailsPageHeader_detailsHeader__A9LdM\"};","import React from \"react\";\nimport { TALENT_IMG, USER_IMAGE } from \"../../../constants/AppImages\";\nimport AppCol from \"../AppCol/AppCol\";\nimport AppImage from \"../AppImage/AppImage\";\nimport AppRow from \"../AppRow/AppRow\";\nimport AppSVG from \"../AppSVG/AppSVG\";\nimport SecondaryBackground from \"../SecondaryBackground/SecondaryBackground\";\nimport classStyle from \"./DetailsPageHeader.module.css\"\nfunction DetailsPageHeader({\n  ActionComponent = undefined,\n  label = \"\",\n  Details = undefined,\n  image=null,\n  loading,\n  children\n}) {\n  return (\n   <SecondaryBackground>\n     <div className={classStyle.detailsHeader}>\n      <AppRow>\n        <AppCol size={8} md_size={7} lg_size={8} sm_size={12}>\n          <div className={classStyle.detailsLeft}>\n           <div className={classStyle.svg}>\n      {/* aaa  {image} */}\n\n           <AppImage image={image === null ? USER_IMAGE : image} />\n           </div>\n\n           <div className={classStyle.labelDetails}>\n           <h5>{label !== undefined && label}</h5>\n              <div>{Details !== undefined && Details}</div>\n           </div>\n\n          </div>\n        </AppCol>\n        <AppCol size={4} md_size={5} lg_size={4} sm_size={12} className={classStyle.actionComponent}>\n          {ActionComponent !== undefined && ActionComponent}\n        </AppCol>\n      </AppRow>\n    </div>\n    {children}\n   </SecondaryBackground>\n  );\n}\n\nexport default DetailsPageHeader;\n","import React from \"react\";\nimport { FormatDate } from \"../../../../constants/utils\";\nimport AppCol from \"../../../organisms/AppCol/AppCol\";\nimport AppContainerFluid from \"../../../organisms/AppContainerFluid/AppContainerFluid\";\nimport AppRow from \"../../../organisms/AppRow/AppRow\";\nimport JobTiles from \"../../../organisms/JobTiles/JobTiles\";\n\nfunction SimilarJobs({ data }) {\n  return (\n    <>\n      {data.length !== 0 && (\n        <AppContainerFluid style={{ marginTop: 0 }}>\n          <h5 className=\"\">Similar jobs</h5>\n\n          <br></br>\n          <AppRow className=\"gx-3\">\n            {Array.isArray(data) &&\n              data.map((job) => {\n                return (\n                  <AppCol key={job.id} size={4} md_size={6} lg_size={4}>\n                    <JobTiles\n                      companyName={job.company !== null && job.company.name}\n                      currency={job.currency}\n                      jobID={job.id}\n                      companyLogo={job.company !== null && job.company.logo}\n                      title={\n                        job.title !== null ? job.title.name : \"*No job title*\"\n                      }\n                      date={FormatDate(job.created_at)}\n                      location={job.company !== null && job.company.country}\n                      price_amount={job.salary !== \"\" ? job.salary : undefined}\n                      timeline={job.mode}\n                    ></JobTiles>\n                  </AppCol>\n                );\n              })}\n          </AppRow>\n        </AppContainerFluid>\n      )}\n    </>\n  );\n}\n\nexport default SimilarJobs;\n","import React from \"react\";\nimport AppCol from \"../../../../organisms/AppCol/AppCol\";\nimport AppRow from \"../../../../organisms/AppRow/AppRow\";\nimport FormInputRenderer from \"../../../../organisms/FormRenderer/FormInputRenderer\";\n\nfunction ApplyJobForm(\n  { data, \n    applyingTalentData, \n    onChangeForm \n  }) {\n  \n  // console.log(applyingTalentData, 'out state')\n  return (\n    <div>\n      {Array.isArray(data) &&\n        data.map((input_row, input_row_index) => {\n          return (\n            <AppRow className=\"gx-5\" key={input_row.id}>\n              {input_row.children.map((child_input, child_index) => {\n                if (child_input.hidden !== true) {\n                  return (\n                    <AppCol size={12 / input_row.colums} key={child_input.id}>\n                      <FormInputRenderer\n                        handleChange={\n                          child_input.type === \"text-input\" ||\n                          child_input.type === \"text-area\"\n                            ? onChangeForm\n                            : ()=>console.log()\n                        }\n                        type={child_input.type}\n                        metaData={{\n                          meta: {\n                            RowKey: input_row_index,\n                            ChildKey: child_index,\n                          },\n                          showMonthYearPicker:child_input.type ===\"year-month-date\" && false,\n                          label: child_input.label,\n                          value : applyingTalentData[child_input.name],\n                          // value: child_input.value,\n                          name: child_input.name,\n                          input_type: child_input.input_type,\n                          inputId: \"settings_input_fields\",\n                          data: child_input.data,\n                          type: child_input.input_type,\n                        }}\n                      ></FormInputRenderer>\n                    </AppCol>\n                  );\n                }\n              })}\n            </AppRow>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default ApplyJobForm;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Modal } from \"react-bootstrap\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import AppButton from \"../../../atoms/AppButton/AppButton\";\nimport AppButton from \"../../../../atoms/AppButton/AppButton\";\n// import { toggleApplyJobModal } from \"../../../app-redux/features/appData/appDataSlice\";\n// import { toggleApplyJobModal } from \"../../../../../app-redux/features/appData/appDataSlice\";\nimport {\n  toggleApplyJobModal,\n  handleApplyingTalentChange,\n  talentApplyingJob,\n  updateTalentApplyingJob,\n} from \"../../../../../app-redux/features/TalentSlice/talentSlice\";\nimport ApplyJobForm from \"./ApplyForm\";\nimport { JsonToformData } from \"../../../../../constants/utils\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\nimport { TALENT_ROUTE } from \"../../../../../routes/RouteLinks\";\n\nfunction ApplyModal({ jobId, user, jobTitle }) {\n  //   const appData = useSelector((state) => state.appData);\n  const talent = useSelector((state) => state.talent);\n  const {\n    apply_form,\n    showApplyJobModal,\n    applyingTalentData,\n    appliedTalentState,\n  } = talent;\n  const dispatch = useDispatch();\n\n  const handleApplyingTalentFormChange = (e) => {\n    let { value, name } = e.target;\n    dispatch(handleApplyingTalentChange({ name: name, value: value }));\n  };\n\n  let talent_applying_f_name = user.hasOwnProperty(\"first_name\")\n    ? user.first_name !== null\n      ? user.first_name\n      : \"\"\n    : \"\";\n\n  let talent_applying_l_name = user.hasOwnProperty(\"last_name\")\n    ? user.last_name !== null\n      ? user.last_name\n      : \"\"\n    : \"\";\n\n  let talent_applying_full_name =\n    talent_applying_f_name !== \"\" && talent_applying_l_name !== \"\"\n      ? `${talent_applying_f_name} ${talent_applying_l_name}`\n      : talent_applying_f_name;\n\n  const handleTalentApplyingToAJob = (e) => {\n    e.preventDefault();\n    let new_talent_data = { ...applyingTalentData, job: parseInt(jobId) ,hide_for_talent:false};\n    // console.log(JsonToformData(new_talent_data), 'beofre json to form')\n    // console.log(new_talent_data, new_talent_data.id)\n    if (new_talent_data.id) {\n      // console.log('update an application', new_talent_data)\n      dispatch(updateTalentApplyingJob(JsonToformData(new_talent_data)))\n        .unwrap()\n        .then((res) => {\n          // console.log(res)\n          toast.success(\n            `You have applied to the ${res.job.title.name} job`,\n            6000\n          );\n          dispatch(toggleApplyJobModal());\n\n          // var today = new Date().toISOString().split('T')[0];\n        })\n        .catch((err) => {\n          toast.error(err);\n        });\n    } else {\n      dispatch(talentApplyingJob(JsonToformData(new_talent_data)))\n        .unwrap()\n        .then((res) => {\n          dispatch(toggleApplyJobModal());\n\n          // console.log(res)\n          toast.success(\n            `You have applied to the  ${res.job.title.name} job`,\n            6000\n          );\n        })\n        .catch((err) => {\n          toast.error(err);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Modal\n        scrollable\n        contentClassName=\"apply-modal\"\n        show={showApplyJobModal}\n        onHide={() => dispatch(toggleApplyJobModal())}\n        centered\n        size=\"lg\"\n      >\n        <Modal.Body>\n          <h5>\n            Send your application for {jobTitle !== undefined && jobTitle} job\n          </h5>\n\n          <ApplyJobForm\n            data={apply_form}\n            applyingTalentData={applyingTalentData}\n            onChangeForm={handleApplyingTalentFormChange}\n          />\n\n\n          <p className=\"text-muted\">\n            Applying as {\"\"}\n            {talent_applying_full_name}, {user.email}\n          </p>\n          <a\n            href={`/${TALENT_ROUTE.index}${TALENT_ROUTE.editProfile}`}\n            className=\"mb-4\"\n          >\n            Edit profile.\n          </a>\n          {/* <br></br> */}\n          <AppButton\n            loading={appliedTalentState.loading}\n            // onClick={() => loginRegisterUser()}\n            disabled={appliedTalentState.loading}\n            onClick={handleTalentApplyingToAJob}\n            className=\"w-100 mt-3\"\n            label={\"Send Application\"}\n          ></AppButton>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ApplyModal;\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import React, { useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport {\n  getCompanyProfileDetails,\n  getJobCompanyDetails,\n  getSimilarJobs,\n  getTalentsRecommenedForJob,\n  resetJobDetails,\n  toggleShowTalentApplicationHistoryModal,\n} from \"../../../../app-redux/features/jobCompany/jobCompanySlice\";\nimport { JOB_TEST } from \"../../../../constants/AppImages\";\nimport { NAVLINKS } from \"../../../../constants/navlinks\";\nimport {\n  FormatDate,\n  dateDiff,\n  returnTimeDifference,\n  stripTags,\n} from \"../../../../constants/utils\";\nimport AppButton from \"../../../atoms/AppButton/AppButton\";\nimport AppCol from \"../../../organisms/AppCol/AppCol\";\nimport AppContainerFluid from \"../../../organisms/AppContainerFluid/AppContainerFluid\";\nimport AppNavBar from \"../../../organisms/AppNavBar/AppNavBar\";\nimport AppRow from \"../../../organisms/AppRow/AppRow\";\nimport DetailsPage from \"../../../organisms/DetailsPage/DetailsPage\";\nimport DetailsPageHeader from \"../../../organisms/DetailsPageHeader/DetailsPageHeader\";\nimport SecondaryBackground from \"../../../organisms/SecondaryBackground/SecondaryBackground\";\nimport About from \"./pagecomponents/About\";\nimport SimilarJobs from \"./SimilarJobs\";\nimport {\n  toggleApplyJobModal,\n  getAppliedTalentObject,\n  resetapplyingTalentData,\n} from \"../../../../app-redux/features/TalentSlice/talentSlice\";\nimport ApplyModal from \"./pagecomponents/ApplyModal\";\nimport JobTiles from \"../../../organisms/JobTiles/JobTiles\";\nimport EmptyData from \"../../../organisms/EmptyData/EmptyData\";\nimport { COMPANY_ROUTE, TALENT_ROUTE } from \"../../../../routes/RouteLinks\";\nimport {\n  Calendar,\n  Pencil,\n  Check,\n  Briefcase,\n  TrashBin,\n  EyeOpen,\n  Send,\n} from \"akar-icons\";\nimport { toggleLoginForm } from \"../../../../app-redux/features/appData/appDataSlice\";\nimport { LinearProgress } from \"@mui/material\";\nimport { StoreofflineLocalStorage } from \"../../../../constants/OfflineStorage\";\nimport AppBackDrop from \"../../../organisms/AppBackDrop/AppBackDrop\";\nimport AppMobileNav from \"../../../organisms/AppMobileNav/AppMobileNav\";\nimport ReferModalFooter from \"../../../organisms/ReferModal/ReferModalFooter\";\nimport CopyLinkInput from \"../../../organisms/PostJobConfirmation/CopyLinkInput\";\nimport JobOverview from \"./JobOverview\";\nimport ExperienceSkill from \"./ExperienceSkill\";\nimport CompanyOverview from \"./CompanyOverview\";\nimport { Cancel, Visibility } from \"@mui/icons-material\";\n\nfunction ViewJob() {\n  const jobCompanyData = useSelector((state) => state.jobCompany);\n  const talentSliceData = useSelector((state) => state.talent);\n  const editCompanySlice = useSelector((state) => state.editCompany);\n\n  let { companyProfile } = editCompanySlice;\n  let { data: companyProfileData } = companyProfile;\n\n  const TalentProfileData = useSelector((state) => state.TalentProfile);\n  let { talentState: talentData } = TalentProfileData;\n  let { data: talentDataResult } = talentData;\n\n  const { jobDetails, similarJobs, companyProfileDetails, allCompanyJobs } =\n    jobCompanyData;\n  const { applyingTalentData } = talentSliceData;\n  const { data: jobDetailsData } = jobDetails;\n  const { data: similarJobsData } = similarJobs;\n  const { data: companyProfileDetailsData } = companyProfileDetails;\n\n  const { results: similarJobsResults } = similarJobsData;\n\n  const authData = useSelector((state) => state.auth);\n\n  const { loginUserState } = authData;\n  const { data: dataLogin } = loginUserState;\n  const { type: userType } = dataLogin;\n  const { data: allJobsData } = allCompanyJobs;\n  const { results: allJobsDataResults } = allJobsData;\n  // console.log(applyingTalentData)\n  const {\n    created_at,\n    title,\n    description,\n    experience,\n    currency,\n    min_salary,\n    max_salary,\n    expiration_date,\n    qualification,\n    experienceskills,\n    type,\n    on_site,\n    period,\n    mode,\n    give_work_authorization,\n    company,\n  } = jobDetailsData;\n\n  // console.log(company);\n\n  let { jobID } = useParams();\n  let dispatch = useDispatch();\n\n  let job_overview = [\n    FormatDate(created_at),\n    `${\n      period !== null && period !== \"\"\n        ? `${period} ${period === 1 ? \"month\" : \"months\"} ${type}`\n        : \"\"\n    }`,\n    `${mode}`,\n\n    `${on_site ? \"On site\" : \"Remote\"}`,\n    `${\n      on_site\n        ? give_work_authorization\n          ? \"Company gives work authorization to candidates not in their zone\"\n          : \"Company does not give work authority\"\n        : null\n    }`,\n\n    // `${currency !== null ? currency : \"\"} ${returnSalary(\n    //   min_salary,\n    //   max_salary\n    // )}`,\n    FormatDate(expiration_date),\n    `${\n      qualification !== null && qualification !== undefined\n        ? qualification\n        : \"-\"\n    }`,\n    experience !== null\n      ? `${experience} ${experience === 1 ? \"Year\" : \"Years\"}`\n      : \"No Experience\",\n  ];\n\n  let showLoginModal = () => {\n    dispatch(toggleLoginForm());\n  };\n\n  const effectJobDetail = useRef(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    //get job details when page has loaded\n    jobID !== undefined &&\n      !effectJobDetail.current &&\n      dispatch(\n        getJobCompanyDetails({\n          jobID: parseInt(jobID),\n          isAppliedTalentURL: false,\n        })\n      )\n        .unwrap()\n        .then((res) => {\n          dispatch(getSimilarJobs(parseInt(jobID)));\n          dispatch(getAppliedTalentObject(jobID));\n          dispatch(getTalentsRecommenedForJob(parseInt(jobID)));\n          dispatch(getCompanyProfileDetails(res.company.id));\n        })\n        .catch((e) => {});\n    // jobID !== undefined &&\n    //   dispatch(getAppliedTalentObject(jobID))\n\n    return () => {\n      effectJobDetail.current = true;\n      dispatch(resetJobDetails());\n      dispatch(resetapplyingTalentData());\n      dispatch(toggleShowTalentApplicationHistoryModal(false));\n    };\n  }, [dispatch, jobID]);\n\n  const triggerEditJobFn = () => {\n    StoreofflineLocalStorage(\"@companyJob\", jobDetailsData);\n\n    setTimeout(() => {\n      navigate(`/${COMPANY_ROUTE.index}${COMPANY_ROUTE.my_jobs}`);\n    }, 100);\n  };\n\n  // const appData = useSelector((state) => state.appData);\n  return (\n    <div>\n      <AppMobileNav />\n\n      <AppNavBar\n        rightLinks={NAVLINKS.dashboard_talent_right_links}\n        leftLinks={NAVLINKS.dashboard_talent_links}\n      />\n\n      {jobDetails.loading ||\n        (applyingTalentData.loading && <AppBackDrop open={true} />)}\n\n      {/* {JSON.stringify(jobDetailsData)} */}\n      <ApplyModal\n        jobTitle={`${\n          title !== undefined && title !== null\n            ? title.name !== null && title.name\n            : \"No job title\"\n        }`}\n        user={talentDataResult}\n        jobId={jobID}\n      />\n\n      {jobDetails.data.hasOwnProperty(\"id\") && jobDetails.loading !== true ? (\n        <>\n          <DetailsPage\n            Header={\n              <>\n                <DetailsPageHeader\n                  image={\n                    companyProfileDetailsData.logo !== undefined\n                      ? companyProfileDetailsData.logo !== null\n                        ? companyProfileDetailsData.logo\n                        : null\n                      : null\n                  }\n                  image2={JOB_TEST}\n                  label={`${\n                    title !== undefined && title !== null\n                      ? title.name !== null && title.name\n                      : \"No job title\"\n                  }`}\n                  Details={\n                    <>\n                      <span className=\"text-muted\">\n                        {returnTimeDifference(\n                          dateDiff(new Date(), FormatDate(created_at))\n                        )}\n                      </span>\n                      <ul className=\"list-inline\">\n                        <li className=\"list-inline-item\">\n                          <Calendar style={{ marginRight: 10 }} size={15} />\n\n                          <span className=\"mr-3\">{FormatDate(created_at)}</span>\n                        </li>\n                        {/* company */}\n\n                        <li className=\"list-inline-item\">\n                          <Briefcase style={{ marginRight: 10 }} size={15} />\n\n                          {jobDetailsData.company !== undefined && (\n                            <>\n                              <span className=\"mr-3\">\n                                {company !== undefined &&\n                                company.name !== undefined && company.name !== null\n                                  ? company.name\n                                  : \"-\"}\n                              </span>\n                            </>\n                          )}\n                        </li>\n\n                        {/* <li className=\"list-inline-item\">\n                          <Money style={{ marginRight: 10 }} size={15} />\n                          {currency !== undefined && currency !== null\n                            ? currency\n                            : \"\"}{\" \"}\n                          {returnSalary(min_salary, max_salary)}\n                        </li> */}\n                      </ul>\n                    </>\n                  }\n                  ActionComponent={\n                    <>\n                      {userType === \"talent\" ? (\n                        <>\n                          {!talentDataResult.hasOwnProperty(\"id\") ? (\n                            <>\n                              {!talentData.loading ? (\n                                <>\n                                  <span>Your profile is not updated.</span>\n                                  <AppButton\n                                    isLink={true}\n                                    linkPath={`/${TALENT_ROUTE.index}${TALENT_ROUTE.editProfile}`}\n                                    size=\"small\"\n                                    label=\"Update Profile\"\n                                  ></AppButton>\n                                </>\n                              ) : (\n                                <LinearProgress />\n                              )}\n                            </>\n                          ) : (\n                            <>\n                              {applyingTalentData.loading ? (\n                                <>\n                                  <p>Please wait...</p>\n                                </>\n                              ) : (\n                                <>\n                                  {applyingTalentData.id === null ? (\n                                    <>\n                                      <span className=\"text-muted mb-3\">\n                                        Application end:{\" \"}\n                                        {FormatDate(expiration_date) !==\n                                        undefined\n                                          ? FormatDate(expiration_date)\n                                          : \"\"}{\" \"}\n                                      </span>\n                                      <AppButton\n                                        size=\"small\"\n                                        onClick={() =>\n                                          dispatch(toggleApplyJobModal())\n                                        }\n                                      >\n                                        <Send></Send> Apply Now\n                                      </AppButton>\n                                    </>\n                                  ) : (\n                                    <>\n                                      {applyingTalentData.data\n                                        .hidden_for_talent ? (\n                                        <>\n                                          {applyingTalentData.data.status ===\n                                            \"offered\" && (\n                                            <>\n                                              <p className=\"text-success\">\n                                                {\" \"}\n                                                <Check />You Applied\n                                              </p>\n                                              <AppButton\n                                                size=\"small\"\n                                                onClick={() =>\n                                                  navigate(\n                                                    `/${TALENT_ROUTE.index}${TALENT_ROUTE.acceptJobOffer}${applyingTalentData.id}`\n                                                  )\n                                                }\n                                              >\n                                                View Job Offer\n                                              </AppButton>\n                                            </>\n                                          )}\n\n                                          {applyingTalentData.data.status ===\n                                            \"rejected\" && (\n                                            <AppButton size=\"small\" disabled>\n                                              <Cancel /> Job Offer rejected\n                                            </AppButton>\n                                          )}\n                                          {applyingTalentData.data.status ===\n                                            \"pending\" && (\n                                            <>\n                                              <span className=\"text-muted mb-3\">\n                                                Application end:{\" \"}\n                                                {FormatDate(expiration_date) !==\n                                                undefined\n                                                  ? FormatDate(expiration_date)\n                                                  : \"\"}{\" \"}\n                                              </span>\n                                              <AppButton\n                                                size=\"small\"\n                                                onClick={() =>\n                                                  dispatch(\n                                                    toggleApplyJobModal()\n                                                  )\n                                                }\n                                              >\n                                                <Send></Send> Apply Now\n                                              </AppButton>\n                                            </>\n                                          )}\n                                        </>\n                                      ) : (\n                                        <>\n                                          <AppButton size=\"small\" disabled>\n                                            <Check /> Applied\n                                          </AppButton>\n                                        </>\n                                      )}\n                                    </>\n                                  )}\n                                </>\n                              )}\n                            </>\n                          )}\n                        </>\n                      ) : (\n                        <>\n                          <span className=\"text-muted mb-3\">\n                            Application end:{\" \"}\n                            {FormatDate(expiration_date) !== undefined\n                              ? FormatDate(expiration_date)\n                              : \"\"}{\" \"}\n                          </span>\n                          {userType !== \"company\" ? (\n                            <>\n                              <AppButton\n                                onClick={() => showLoginModal()}\n                                size=\"small\"\n                                label=\"Login To Apply\"\n                              ></AppButton>\n                            </>\n                          ) : (\n                            <>\n                              {/* companyProfileDetailsData.id */}\n\n                              {companyProfileData.hasOwnProperty(\"id\") &&\n                              companyProfileDetailsData.hasOwnProperty(\"id\") ? (\n                                <>\n                                  {parseInt(companyProfileData.id) ===\n                                  parseInt(companyProfileDetailsData.id) ? (\n                                    <AppButton\n                                      onClick={() => triggerEditJobFn()}\n                                      size=\"small\"\n                                    >\n                                      <Pencil /> Edit Job\n                                    </AppButton>\n                                  ) : (\n                                    <>\n                                      <AppButton\n                                        disabled\n                                        // onClick={()=>triggerEditJobFn()}\n                                        size=\"small\"\n                                        label=\"Only Talents Can Apply\"\n                                      ></AppButton>\n                                    </>\n                                  )}\n                                </>\n                              ) : (\n                                <>\n                                  <AppButton\n                                    disabled\n                                    // onClick={()=>triggerEditJobFn()}\n                                    size=\"small\"\n                                    label=\"Only Talents Can Apply\"\n                                  ></AppButton>\n                                </>\n                              )}\n                            </>\n                          )}\n                        </>\n                      )}\n                    </>\n                  }\n                ></DetailsPageHeader>\n              </>\n            }\n            MainLeftComponent={\n              <>\n                {/* {JSON.stringify(Talent)} */}\n                <About\n                  about={`${description !== undefined ? description : \"\"}`}\n                ></About>\n              </>\n            }\n            MainRightComponent={\n              <>\n                <JobOverview job_overview={job_overview}></JobOverview>\n                <br></br>\n\n                <ExperienceSkill\n                  experienceskills={experienceskills}\n                ></ExperienceSkill>\n\n                <CompanyOverview\n                  userType={userType}\n                  companyProfileDetailsData={companyProfileDetailsData}\n                ></CompanyOverview>\n\n                <SecondaryBackground>\n                  <br></br>\n                  <h6 className=\"mt-4 mb-4 fw-bold\">Share job</h6>\n                  <ReferModalFooter\n                    shareTitle={\n                      title !== undefined && title.name !== undefined\n                        ? `Newton - ${title.name} Job. ${stripTags(\n                            description\n                          ).substr(0, 20)}`\n                        : \"Newton Job Offer\"\n                    }\n                    shareUrl={window.location.href}\n                  ></ReferModalFooter>\n\n                  <div className=\"mt-3 mb-3\">\n                    <CopyLinkInput url={window.location.href}></CopyLinkInput>\n                  </div>\n                  <br></br>\n                </SecondaryBackground>\n              </>\n            }\n          >\n            {/* {JSON.stringify(similarJobsResults.length)} */}\n            {similarJobsResults !== undefined && userType === \"talent\" && (\n              <SimilarJobs data={similarJobsResults} />\n            )}\n          </DetailsPage>\n        </>\n      ) : (\n        <>\n          <AppContainerFluid style={{ marginTop: 100 }}>\n            {!jobDetails.loading && (\n              <>\n                <EmptyData\n                  title=\"No job found in our records.\"\n                  message={\n                    <>\n                      {userType === \"talent\" &&\n                        \"You can try the suggestions below\"}\n                    </>\n                  }\n                ></EmptyData>\n\n                <br></br>\n              </>\n            )}\n\n            {userType === \"talent\" && !jobDetails.loading && (\n              <AppRow className=\"gx-3\">\n                {Array.isArray(allJobsDataResults) &&\n                  allJobsDataResults.map((job) => {\n                    return (\n                      <AppCol key={job.id} size={4} md_size={6} lg_size={4}>\n                        <JobTiles\n                          companyName={job.company !== null && job.company.name}\n                          title={\n                            job.title !== undefined\n                              ? job.title !== null\n                                ? job.title.name\n                                : \"*No job title*\"\n                              : \"*No job title*\"\n                          }\n                          jobID={job.id}\n                          currency={job.currency}\n                          jobOfferID={job.id}\n                          companyLogo={job.company !== null && job.company.logo}\n                          date={FormatDate(job.created_at)}\n                          location={job.company !== null && job.company.country}\n                          price_amount={\n                            job.salary !== \"\" ? job.salary : undefined\n                          }\n                          min_salary={\n                            job.min_salary !== \"\" ? job.min_salary : undefined\n                          }\n                          max_salary={\n                            job.max_salary !== \"\" ? job.max_salary : undefined\n                          }\n                          timeline={job.mode}\n                        ></JobTiles>\n                      </AppCol>\n                    );\n                  })}\n              </AppRow>\n            )}\n          </AppContainerFluid>\n        </>\n      )}\n      {/* {JSON.stringify(userData)} */}\n    </div>\n  );\n}\n\nexport default ViewJob;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction HomePageFooterLink({ name = \"\", link = \"\" }) {\n  return (\n    <li className=\"fw-light\">\n      <Link to={link}>{name}</Link>\n    </li>\n  );\n}\n\nexport default HomePageFooterLink;\n","import React from \"react\";\n\nfunction HomePageFooterSocialIcon({ name = \"\", link = \"\", icon }) {\n  return (\n    <li>\n      <a target=\"_blank\" href={link} aria-label={`Link to newton ${name}`} rel=\"noreferrer\">{icon}</a>\n    </li>\n  );\n}\n\nexport default HomePageFooterSocialIcon;\n","import { Envelope, LinkedinBoxFill, Location } from \"akar-icons\";\nimport React from \"react\";\nimport { NAVLINKS } from \"../../../constants/navlinks\";\nimport AppCol from \"../../organisms/AppCol/AppCol\";\nimport AppContainerFluid from \"../../organisms/AppContainerFluid/AppContainerFluid\";\nimport AppRow from \"../../organisms/AppRow/AppRow\";\nimport HomePageFooterLink from \"../../organisms/HomePageFooterLink/HomePageFooterLink\";\nimport HomePageFooterSocialIcon from \"../../organisms/HomePageFooterSocialICon/HomePageFooterSocialIcon\";\nimport \"./HomePageFoooter.css\";\n\nfunction HomePageFoooter() {\n  return (\n    <AppContainerFluid>\n      <AppRow className=\"mt-4\" id=\"homepage_footer\">\n        <AppCol lg_size={3} size=\"3\" md_size={3}>\n          <p className=\"fs-6\">\n           Newtoncore.com\n          </p>\n\n          {/* <ul className=\"list-inline\">\n            <li className=\"list-inline-item\">\n              <Location size={15} />\n            </li>\n            <li className=\"list-inline-item fw-light\">email@email.com</li>\n          </ul> */}\n\n          <ul className=\"list-inline\">\n            <li className=\"list-inline-item\">\n              <Envelope size={15} />\n            </li>\n            <li className=\"list-inline-item fw-light\">newton@newtoncore.com</li>\n          </ul>\n\n          <ul className=\"list-inline\">\n            <li className=\"list-inline-item\">\n              <LinkedinBoxFill size={15} />\n            </li>\n            <li className=\"list-inline-item fw-light\">\n              <a href=\"https://linkedin.com/school/newtonacademyofficial/\" target=\"_blank\">\n                Newtoncore\n              </a>\n            </li>\n          </ul>\n        </AppCol>\n        <AppCol lg_size={2} md_size={2} id=\"homepage_footer_links\" olg=\"1\" size=\"2\">\n          <p className=\"fw-normal\">Explore</p>\n          <>\n            <ul className=\"list-unstyled\">\n              {NAVLINKS.home_page_footer_links_left.map((link,index) => {\n                return (\n                  <HomePageFooterLink\n                  key={index}\n                    name={link.name}\n                    link={link.link}\n                  ></HomePageFooterLink>\n                );\n              })}\n            </ul>\n          </>\n        </AppCol>\n\n        <AppCol lg_size={2} md_size={2}  id=\"homepage_footer_links\" size=\"2\">\n          <p className=\"\">About</p>\n          <>\n            <ul className=\"list-unstyled\">\n              {NAVLINKS.home_page_footer_links_right.map((link,index) => {\n                return (\n                  <HomePageFooterLink\n                  key={index}\n                    name={link.name}\n                    link={link.link}\n                  ></HomePageFooterLink>\n                );\n              })}\n            </ul>\n          </>\n        </AppCol>\n\n        <AppCol lg_size={3} md_size={3} size=\"3\" id=\"social_media\" olg=\"1\">\n          <ul className=\"list-unstyled\">\n            {NAVLINKS.social_media_links.map((link,index) => {\n              return (\n                <HomePageFooterSocialIcon\n                key={index}\n                  name={link.name}\n                  link={link.link}\n                  icon={link.icon}\n                ></HomePageFooterSocialIcon>\n              );\n            })}\n          </ul>\n        </AppCol>\n      </AppRow>\n    </AppContainerFluid>\n  );\n}\n\nexport default HomePageFoooter;\n"],"names":["_ref","_ref$MainLeftComponen","MainLeftComponent","undefined","_ref$MainRightCompone","MainRightComponent","Header","children","_ref$showPageFooter","showPageFooter","_jsxs","_jsx","className","AppContainerFluid","id","AppRow","AppCol","size","md_size","lg_size","sm_size","HomePageFoooter","_ref$ActionComponent","ActionComponent","_ref$label","label","_ref$Details","Details","_ref$image","image","loading","SecondaryBackground","classStyle","AppImage","USER_IMAGE","data","_Fragment","length","style","marginTop","Array","isArray","map","job","JobTiles","companyName","company","name","currency","jobID","companyLogo","logo","title","date","FormatDate","created_at","location","country","price_amount","salary","timeline","mode","applyingTalentData","onChangeForm","input_row","input_row_index","child_input","child_index","hidden","colums","FormInputRenderer","handleChange","type","console","log","metaData","meta","RowKey","ChildKey","showMonthYearPicker","value","input_type","inputId","jobId","user","jobTitle","talent","useSelector","state","apply_form","showApplyJobModal","appliedTalentState","dispatch","useDispatch","talent_applying_f_name","hasOwnProperty","first_name","talent_applying_l_name","last_name","talent_applying_full_name","concat","Modal","scrollable","contentClassName","show","onHide","toggleApplyJobModal","centered","ApplyJobForm","e","_e$target","target","handleApplyingTalentChange","email","href","TALENT_ROUTE","AppButton","disabled","onClick","preventDefault","new_talent_data","_objectSpread","parseInt","hide_for_talent","updateTalentApplyingJob","JsonToformData","unwrap","then","res","toast","catch","err","talentApplyingJob","createSvgIcon","d","jobCompanyData","jobCompany","talentSliceData","companyProfileData","editCompany","companyProfile","talentData","TalentProfile","talentState","talentDataResult","jobDetails","similarJobs","companyProfileDetails","allCompanyJobs","jobDetailsData","similarJobsData","companyProfileDetailsData","similarJobsResults","results","userType","auth","loginUserState","allJobsDataResults","description","experience","expiration_date","min_salary","max_salary","qualification","experienceskills","on_site","period","give_work_authorization","useParams","job_overview","effectJobDetail","useRef","navigate","useNavigate","useEffect","current","getJobCompanyDetails","isAppliedTalentURL","getSimilarJobs","getAppliedTalentObject","getTalentsRecommenedForJob","getCompanyProfileDetails","resetJobDetails","resetapplyingTalentData","toggleShowTalentApplicationHistoryModal","AppMobileNav","AppNavBar","rightLinks","NAVLINKS","leftLinks","AppBackDrop","open","ApplyModal","DetailsPage","DetailsPageHeader","image2","JOB_TEST","returnTimeDifference","dateDiff","Date","Calendar","marginRight","Briefcase","Send","hidden_for_talent","status","Check","Cancel","LinearProgress","isLink","linkPath","toggleLoginForm","StoreofflineLocalStorage","setTimeout","COMPANY_ROUTE","Pencil","About","about","JobOverview","ExperienceSkill","CompanyOverview","ReferModalFooter","shareTitle","stripTags","substr","shareUrl","window","CopyLinkInput","url","SimilarJobs","EmptyData","message","jobOfferID","_ref$name","_ref$link","link","Link","to","icon","rel","Envelope","LinkedinBoxFill","olg","index","HomePageFooterLink","HomePageFooterSocialIcon"],"sourceRoot":""}