{"version":3,"file":"static/js/6730.0c96e388.chunk.js","mappings":"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","sources":["components/pages/applicant/JobRejectLetter/pagecomponents/JobRejectLetterForm.js","components/pages/applicant/JobRejectLetter/JobRejectLetter.js"],"sourcesContent":["import React from \"react\";\nimport AppCol from \"../../../../organisms/AppCol/AppCol\";\nimport AppRow from \"../../../../organisms/AppRow/AppRow\";\nimport FormInputRenderer from \"../../../../organisms/FormRenderer/FormInputRenderer\";\n\nfunction ScheduleInterviewForm(\n  { form_data, \n    // applyingTalentData, \n    onChangeForm,\n    data,\n    disabled\n    \n  }) {\n  \n  // console.log(form_data, 'out state', onChangeForm)\n  return (\n    <div>\n      {Array.isArray(form_data) &&\n        form_data.map((input_row, input_row_index) => {\n          return (\n            <AppRow className=\"gx-0\" key={input_row.id}>\n              {input_row.children.map((child_input, child_index) => {\n                if (child_input.hidden !== true) {\n                  // console.log(child_input.rows )\n                  return (\n                    <AppCol size={12 / input_row.colums} key={child_input.id} marginBotton={2}>\n                      <FormInputRenderer\n                        handleChange={\n                          child_input.type === \"text-input\" ||\n                          child_input.type === \"text-area\" \n                            ? onChangeForm\n                            : ()=>console.log()\n                        }\n                        type={child_input.type}\n                        metaData={{\n                          meta: {\n                            RowKey: input_row_index,\n                            ChildKey: child_index,\n                          },\n                          showMonthYearPicker:child_input.type ===\"year-month-date\" && false,\n                          label: child_input.label,\n                          value : data[child_input.name],\n                          // value: child_input.value,\n                          name: child_input.name,\n                          input_type: child_input.input_type,\n                          inputId: \"settings_input_fields\",\n                          data: child_input.data,\n                          type: child_input.input_type,\n                          rows: child_input.rows,\n                          maxlength: 3000,\n                          disabled:disabled\n                        }}\n                      ></FormInputRenderer>\n                    </AppCol>\n                  );\n                }\n              })}\n            </AppRow>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default ScheduleInterviewForm;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  rejectApplication,\n  handleRejectLetterChange,\n  GetTalentApplication,\n} from \"../../../../app-redux/features/jobCompany/jobCompanySlice\";\nimport WhiteBgDiv from \"../../../organisms/WhiteBgDiv/WhiteBgDiv\";\nimport CompanyLayout from \"../../../templates/CompanyLayout/CompanyLayout\";\nimport JobRejectLetter from \"./pagecomponents/JobRejectLetterForm\";\nimport AppButton from \"../../../atoms/AppButton/AppButton\";\nimport { toast } from \"react-toastify\";\n\nfunction CompanyViewTalents() {\n  const jobCompanyData = useSelector((state) => state.jobCompany);\n  const {\n    applyingTalentData,\n\n    rejectAppData,\n    offerJobState,\n    company_reject_application,\n    rejectApplicationState,\n  } = jobCompanyData;\n\n  const hasOfferLetter = applyingTalentData.hasOwnProperty(\"offer_letter\")\n    ? applyingTalentData.offer_letter !== null\n      ? true\n      : false\n    : false;\n  const hasRejectLetter = applyingTalentData.hasOwnProperty(\"reject_letter\")\n    ? applyingTalentData.reject_letter !== null\n      ? true\n      : false\n    : false;\n\n  let { jobID, ApplyId } = useParams();\n  let dispatch = useDispatch();\n\n  useEffect(() => {\n    if (jobID !== undefined) {\n      dispatch(\n        GetTalentApplication({ data: { apply_talent: parseInt(ApplyId) } })\n      );\n    }\n  }, [ApplyId]);\n\n  const handlePostRejectJob = () => {\n    let new_data = { ...rejectAppData, appliedjob_id: ApplyId };\n    // console.log(new_data)\n    dispatch(rejectApplication({ data: new_data }))\n      .unwrap()\n      .then((res) => {\n        toast.info(\"Application has been rejected\");\n      })\n      .catch((err) => {\n        toast.error(err);\n      });\n    dispatch(\n      GetTalentApplication({ data: { apply_talent: parseInt(ApplyId) } })\n    );\n  };\n\n  const handleOfferLetterFormChange = (e) => {\n    let { value, name } = e.target;\n    dispatch(handleRejectLetterChange({ name: name, value: value }));\n  };\n\n  return (\n    <div>\n      <CompanyLayout pageTitle=\"Manage Jobs\" pageHeaderRight={undefined}>\n        <>\n          <WhiteBgDiv>\n            <h4>Reject Application</h4>\n            <p className=\"fw-normal\">Kindly read through this template and edit this offer letter as necessary</p>\n\n            <JobRejectLetter\n              disabled={\n                !offerJobState.isValid || hasOfferLetter || hasRejectLetter\n              }\n              form_data={company_reject_application}\n              data={rejectAppData}\n              onChangeForm={handleOfferLetterFormChange}\n            />\n            <AppButton\n              loading={rejectApplicationState.loading}\n              disabled={\n                !offerJobState.isValid || hasOfferLetter || hasRejectLetter\n              }\n              onClick={handlePostRejectJob}\n              className=\"w-50\"\n              label={\n                hasRejectLetter || hasOfferLetter\n                  ? \"Application Rejected\"\n                  : \"Reject Application\"\n              }\n            ></AppButton>\n          </WhiteBgDiv>\n        </>\n      </CompanyLayout>\n    </div>\n  );\n}\n\nexport default CompanyViewTalents;\n"],"names":["_ref","form_data","onChangeForm","data","disabled","_jsx","children","Array","isArray","map","input_row","input_row_index","AppRow","className","child_input","child_index","hidden","AppCol","size","colums","marginBotton","FormInputRenderer","handleChange","type","console","log","metaData","meta","RowKey","ChildKey","showMonthYearPicker","label","value","name","input_type","inputId","rows","maxlength","id","jobCompanyData","useSelector","state","jobCompany","applyingTalentData","rejectAppData","offerJobState","company_reject_application","rejectApplicationState","hasOfferLetter","hasOwnProperty","offer_letter","hasRejectLetter","reject_letter","_useParams","useParams","jobID","ApplyId","dispatch","useDispatch","useEffect","undefined","GetTalentApplication","apply_talent","parseInt","CompanyLayout","pageTitle","pageHeaderRight","_Fragment","_jsxs","WhiteBgDiv","JobRejectLetter","isValid","e","_e$target","target","handleRejectLetterChange","AppButton","loading","onClick","new_data","_objectSpread","appliedjob_id","rejectApplication","unwrap","then","res","toast","catch","err"],"sourceRoot":""}